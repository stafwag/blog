<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Debian | stafwag Blog]]></title>
  <link href="https://stafwag.github.io/blog/blog/categories/debian/atom.xml" rel="self"/>
  <link href="https://stafwag.github.io/blog/"/>
  <updated>2019-05-12T09:59:28+02:00</updated>
  <id>https://stafwag.github.io/blog/</id>
  <author>
    <name><![CDATA[staf wagemakers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building Your Own Docker Base Images (Part 1: Debian GNU/Linux & Co)]]></title>
    <link href="https://stafwag.github.io/blog/blog/2019/04/22/building-your-own-docker-images_part1/"/>
    <updated>2019-04-22T10:36:01+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2019/04/22/building-your-own-docker-images_part1</id>
    <content type="html"><![CDATA[<p>I was using <a href="https://stafwag.github.io/blog/blog/2015/12/26/running-docker-on-arm/">docker on an Odroid U3</a>, but my Odroid stopped working. I switched to another system that is i386 only.</p>

<p>You&rsquo;ll find my journey to build docker images for i386 below.</p>

<h1>Reasons to build your own docker images</h1>

<p>If you want to use <a href="https://www.docker.com/">docker</a> you can start with docker images on the <a href="https://hub.docker.com/">docker registry</a>.
There are several reasons to build your own base images.</p>

<ul>
<li><h2>Security</h2></li>
</ul>


<p>The first reason is security, docker images are not signed by default.</p>

<p>Anyone can upload docker images to the public docker hub with bugs or malicious code.</p>

<p>There are &ldquo;official&rdquo; docker images available at <a href="https://docs.docker.com/docker-hub/official_images/">https://docs.docker.com/docker-hub/official_images/</a> when you execute a <code>docker search</code>  the official docker images are tagged on the official column and are also signed by Docker. To only allow signed docker images you need to set the <code>DOCKER_CONTENT_TRUST=1</code> environment variable. - This should be the default IMHO -</p>

<p>There is one distinction, the &ldquo;official&rdquo; docker images are signed by the &ldquo;Repo admin&rdquo; of the Docker hub, not by the official GNU/Linux distribution project.
If you want to trust the official project instead of the Docker repo admin you can resolve this building your own images.</p>

<ul>
<li><h2>Support other architectures</h2></li>
</ul>


<p>Docker images are generally built for <a href="https://en.wikipedia.org/wiki/X86-64">AMD64 architecture</a>. If you want to use other architectures - <a href="https://en.wikipedia.org/wiki/ARM_architecture">ARM</a>, <a href="https://en.wikipedia.org/wiki/Power.org#Power_Architecture">Power</a>, <a href="https://en.wikipedia.org/wiki/SPARC">SPARC</a> or even <a href="https://en.wikipedia.org/wiki/Intel_80386">i386</a> - you&rsquo;ll find some images on the Docker hub but these are usually not Official docker images.</p>

<ul>
<li><h2>Control</h2></li>
</ul>


<p>When you build your own images, you have more control over what goes or not goes into the image.</p>

<h1>Building your own docker base images</h1>

<p>There are several ways to build your own docker images.</p>

<p>The <a href="https://mobyproject.org/">Mobyproject</a> is Docker&rsquo;s development project - a bit like what Fedora is to RedHat -.
The Moby project has a few scripts that help you to create docker base images and is also a good start if you want to review how to build your own images.</p>

<h1>GNU/Linux distributions</h1>

<p>I build the images on the same GNU/Linux distribution (e.g. The debian images are build on a Debian system) to get the correct gpg keys.</p>

<h2>Debian GNU/Linux &amp; Co</h2>

<p>Debian GNU/Linux makes it very easy to build your own Docker base images. Only debootstrap is required.
I&rsquo;ll use the moby script to the Debian base image and debootstrap to build an i386 docker Ubuntu 18.04 image.</p>

<p>Ubuntu doesn&rsquo;t support i386 officially but includes the i386 userland so it&rsquo;s possible to build i386 Docker images.</p>

<h3>Clone moby</h3>

<pre><code>staf@whale:~/github$ git clone https://github.com/moby/moby
Cloning into 'moby'...
remote: Enumerating objects: 265639, done.
remote: Total 265639 (delta 0), reused 0 (delta 0), pack-reused 265640
Receiving objects: 99% (265640/265640), 137.75 MiB | 3.05 MiB/s, done.
Resolving deltas: 99% (179885/179885), done.
Checking out files: 99% (5508/5508), done.
staf@whale:~/github$ 
</code></pre>

<h3>Make sure that debootstrap is installed</h3>

<pre><code>staf@whale:~/github/moby/contrib$ sudo apt install debootstrap
[sudo] password for staf: 
Reading package lists... Done
Building dependency tree       
Reading state information... Done
debootstrap is already the newest version (1.0.114).
debootstrap set to manually installed.
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
staf@whale:~/github/moby/contrib$ 
</code></pre>

<h3>The Moby way</h3>

<h4>Go to the contrib directory</h4>

<pre><code>staf@whale:~/github$ cd moby/contrib/
staf@whale:~/github/moby/contrib$ 
</code></pre>

<h4>mkimage.sh</h4>

<p> <code>mkimage.sh --help</code> gives you more details howto use the script.</p>

<pre><code>staf@whale:~/github/moby/contrib$ ./mkimage.sh --help
usage: mkimage.sh [-d dir] [-t tag] [--compression algo| --no-compression] script [script-args]
   ie: mkimage.sh -t someuser/debian debootstrap --variant=minbase jessie
       mkimage.sh -t someuser/ubuntu debootstrap --include=ubuntu-minimal --components=main,universe trusty
       mkimage.sh -t someuser/busybox busybox-static
       mkimage.sh -t someuser/centos:5 rinse --distribution centos-5
       mkimage.sh -t someuser/mageia:4 mageia-urpmi --version=4
       mkimage.sh -t someuser/mageia:4 mageia-urpmi --version=4 --mirror=http://somemirror/
staf@whale:~/github/moby/contrib$ 
</code></pre>

<h4>build the image</h4>

<pre><code>staf@whale:~/github/moby/contrib$ sudo ./mkimage.sh -t stafwag/debian_i386:stretch debootstrap --variant=minbase stretch
[sudo] password for staf: 
+ mkdir -p /var/tmp/docker-mkimage.dY9y9apEoK/rootfs
+ debootstrap --variant=minbase stretch /var/tmp/docker-mkimage.dY9y9apEoK/rootfs
I: Target architecture can be executed
I: Retrieving InRelease 
I: Retrieving Release 
I: Retrieving Release.gpg 
I: Checking Release signature
I: Valid Release signature (key id 067E3C456BAE240ACEE88F6FEF0F382A1A7B6500)
I: Retrieving Packages 
&lt;snip&gt;
</code></pre>

<h4>Test</h4>

<p>Verify that images is imported.</p>

<pre><code>staf@whale:~/github/moby/contrib$ docker images
REPOSITORY            TAG                 IMAGE ID            CREATED              SIZE
stafwag/debian_i386   stretch             cb96d1663079        About a minute ago   97.6MB
staf@whale:~/github/moby/contrib$ 
</code></pre>

<p>Run a test docker instance</p>

<pre><code>staf@whale:~/github/moby/contrib$ docker run -t -i --rm stafwag/debian_i386:stretch /bin/sh
# cat /etc/debian_version 
9.8
# 
</code></pre>

<h3>The debootstrap way</h3>

<h4>Make sure that debootstrap is installed</h4>

<pre><code>staf@ubuntu184:~/github/moby$ sudo apt install debootstrap
Reading package lists... Done
Building dependency tree       
Reading state information... Done
Suggested packages:
  ubuntu-archive-keyring
The following NEW packages will be installed:
  debootstrap
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 35,7 kB of archives.
After this operation, 270 kB of additional disk space will be used.
Get:1 http://be.archive.ubuntu.com/ubuntu bionic-updates/main amd64 debootstrap all 1.0.95ubuntu0.3 [35,7 kB]
Fetched 35,7 kB in 0s (85,9 kB/s)    
Selecting previously unselected package debootstrap.
(Reading database ... 163561 files and directories currently installed.)
Preparing to unpack .../debootstrap_1.0.95ubuntu0.3_all.deb ...
Unpacking debootstrap (1.0.95ubuntu0.3) ...
Processing triggers for man-db (2.8.3-2ubuntu0.1) ...
Setting up debootstrap (1.0.95ubuntu0.3) ...
staf@ubuntu184:~/github/moby$ 
</code></pre>

<h4>bootsrap</h4>

<p>Create a directory that will hold the chrooted operating system.</p>

<pre><code>staf@ubuntu184:~$ mkdir -p dockerbuild/ubuntu
staf@ubuntu184:~/dockerbuild/ubuntu$ 
</code></pre>

<p>Bootstrap.</p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu$ sudo debootstrap --verbose --include=iputils-ping --arch i386 bionic ./chroot-bionic http://ftp.ubuntu.com/ubuntu/
I: Retrieving InRelease 
I: Checking Release signature
I: Valid Release signature (key id 790BC7277767219C42C86F933B4FE6ACC0B21F32)
I: Validating Packages 
I: Resolving dependencies of required packages...
I: Resolving dependencies of base packages...
I: Checking component main on http://ftp.ubuntu.com/ubuntu...
I: Retrieving adduser 3.116ubuntu1
I: Validating adduser 3.116ubuntu1
I: Retrieving apt 1.6.1
I: Validating apt 1.6.1
I: Retrieving apt-utils 1.6.1
I: Validating apt-utils 1.6.1
I: Retrieving base-files 10.1ubuntu2
&lt;snip&gt;
I: Configuring python3-yaml...
I: Configuring python3-dbus...
I: Configuring apt-utils...
I: Configuring netplan.io...
I: Configuring nplan...
I: Configuring networkd-dispatcher...
I: Configuring kbd...
I: Configuring console-setup-linux...
I: Configuring console-setup...
I: Configuring ubuntu-minimal...
I: Configuring libc-bin...
I: Configuring systemd...
I: Configuring ca-certificates...
I: Configuring initramfs-tools...
I: Base system installed successfully.
</code></pre>

<h4>Customize</h4>

<p>You can customize your installation before it goes into the image. One thing that you should customize is include update in the image.</p>

<p>Update <code>/etc/resolve.conf</code></p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu$ sudo vi chroot-bionic/etc/resolv.conf
</code></pre>

<pre><code>nameserver 9.9.9.9
</code></pre>

<p>Update <code>/etc/apt/sources.list</code></p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu$ sudo vi chroot-bionic/etc/apt/sources.list
</code></pre>

<p>And include the updates</p>

<pre><code>deb http://ftp.ubuntu.com/ubuntu bionic main
deb http://security.ubuntu.com/ubuntu bionic-security main
deb http://ftp.ubuntu.com/ubuntu/ bionic-updates main
</code></pre>

<p>Chroot into your installation and run <code>apt-get update</code></p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu$ sudo chroot $PWD/chroot-bionic
root@ubuntu184:/# apt update
Hit:1 http://ftp.ubuntu.com/ubuntu bionic InRelease
Get:2 http://ftp.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]   
Get:3 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]       
Get:4 http://ftp.ubuntu.com/ubuntu bionic/main Translation-en [516 kB]                  
Get:5 http://ftp.ubuntu.com/ubuntu bionic-updates/main i386 Packages [492 kB]           
Get:6 http://ftp.ubuntu.com/ubuntu bionic-updates/main Translation-en [214 kB]          
Get:7 http://security.ubuntu.com/ubuntu bionic-security/main i386 Packages [241 kB]     
Get:8 http://security.ubuntu.com/ubuntu bionic-security/main Translation-en [115 kB]
Fetched 1755 kB in 1s (1589 kB/s)      
Reading package lists... Done
Building dependency tree... Done
</code></pre>

<p>and <code>apt-get upgrade</code></p>

<pre><code>root@ubuntu184:/# apt upgrade
Reading package lists... Done
Building dependency tree... Done
Calculating upgrade... Done
The following NEW packages will be installed:
  python3-netifaces
The following packages will be upgraded:
  apt apt-utils base-files bsdutils busybox-initramfs console-setup console-setup-linux
  distro-info-data dpkg e2fsprogs fdisk file gcc-8-base gpgv initramfs-tools
  initramfs-tools-bin initramfs-tools-core keyboard-configuration kmod libapparmor1
  libapt-inst2.0 libapt-pkg5.0 libblkid1 libcom-err2 libcryptsetup12 libdns-export1100
  libext2fs2 libfdisk1 libgcc1 libgcrypt20 libglib2.0-0 libglib2.0-data libidn11
  libisc-export169 libkmod2 libmagic-mgc libmagic1 libmount1 libncurses5 libncursesw5
  libnss-systemd libpam-modules libpam-modules-bin libpam-runtime libpam-systemd
  libpam0g libprocps6 libpython3-stdlib libpython3.6-minimal libpython3.6-stdlib
  libseccomp2 libsmartcols1 libss2 libssl1.1 libstdc++6 libsystemd0 libtinfo5 libudev1
  libunistring2 libuuid1 libxml2 mount ncurses-base ncurses-bin netcat-openbsd
  netplan.io networkd-dispatcher nplan openssl perl-base procps python3 python3-gi
  python3-minimal python3.6 python3.6-minimal systemd systemd-sysv tar tzdata
  ubuntu-keyring ubuntu-minimal udev util-linux
84 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 26.6 MB of archives.
After this operation, 450 kB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://security.ubuntu.com/ubuntu bionic-security/main i386 netplan.io i386 0.40.1~18.04.4 [64.6 kB]
Get:2 http://ftp.ubuntu.com/ubuntu bionic-updates/main i386 base-files i386 10.1ubuntu2.4 [60.3 kB]
Get:3 http://security.ubuntu.com/ubuntu bionic-security/main i386 libapparmor1 i386 2.12-4ubuntu5.1 [32.7 kB]
Get:4 http://security.ubuntu.com/ubuntu bionic-security/main i386 libgcrypt20 i386 1.8.1-
&lt;snip&gt;
running python rtupdate hooks for python3.6...
running python post-rtupdate hooks for python3.6...
Setting up initramfs-tools-core (0.130ubuntu3.7) ...
Setting up initramfs-tools (0.130ubuntu3.7) ...
update-initramfs: deferring update (trigger activated)
Setting up python3-gi (3.26.1-2ubuntu1) ...
Setting up file (1:5.32-2ubuntu0.2) ...
Setting up python3-netifaces (0.10.4-0.1build4) ...
Processing triggers for systemd (237-3ubuntu10.20) ...
Setting up networkd-dispatcher (1.7-0ubuntu3.3) ...
Installing new version of config file /etc/default/networkd-dispatcher ...
Setting up netplan.io (0.40.1~18.04.4) ...
Setting up nplan (0.40.1~18.04.4) ...
Setting up ubuntu-minimal (1.417.1) ...
Processing triggers for libc-bin (2.27-3ubuntu1) ...
Processing triggers for initramfs-tools (0.130ubuntu3.7) ...
root@ubuntu184:/# 
staf@ubuntu184:~/dockerbuild/ubuntu$ 
</code></pre>

<h4>Import</h4>

<p>Go to your chroot installation.</p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu$ cd chroot-bionic/
staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ 
</code></pre>

<p>and import the image.</p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ sudo tar cpf - . | docker import - stafwag/ubuntu_i386:bionic
sha256:83560ef3c8d48b737983ab8ffa3ec3836b1239664f8998038bfe1b06772bb3c2
staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ 
</code></pre>

<h4>Test</h4>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ docker images
REPOSITORY            TAG                 IMAGE ID            CREATED              SIZE
stafwag/ubuntu_i386   bionic              83560ef3c8d4        About a minute ago   315MB
staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ 
</code></pre>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ docker run -it --rm stafwag/ubuntu_i386:bionic /bin/bash
root@665cec6ee24f:/# lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 18.04.2 LTS
Release:        18.04
Codename:       bionic
root@665cec6ee24f:/# 
</code></pre>

<p><strong><em> Have fun! </em></strong></p>

<h1>Links</h1>

<ul>
<li><a href="https://docs.docker.com/docker-hub/official_images/">https://docs.docker.com/docker-hub/official_images/</a></li>
<li><a href="https://docs.docker.com/engine/security/trust/content_trust/">https://docs.docker.com/engine/security/trust/content_trust/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto Use Centos Cloud Images With Cloud-init on KVM/libvirtd]]></title>
    <link href="https://stafwag.github.io/blog/blog/2019/03/03/howto-use-centos-cloud-images-with-cloud-init/"/>
    <updated>2019-03-03T09:55:55+01:00</updated>
    <id>https://stafwag.github.io/blog/blog/2019/03/03/howto-use-centos-cloud-images-with-cloud-init</id>
    <content type="html"><![CDATA[<h1>Images versus unattended setup</h1>

<h2>Old-school</h2>

<h3>Unattended setup</h3>

<p>In a traditional environment, systems are installed from a CDROM. The configuration is executed by the system administrator through the installer. This soon becomes a borning and unpractical task when we need to set up a lot of systems also it is important  that systems are configured in same - and hopefully correct - way.</p>

<p>In a traditional environment, this can be automated by booting via BOOTP/PXE boot and configured is by a system that &ldquo;feeds&rdquo; the installer. Examples are:</p>

<ul>
<li><a href="https://en.wikipedia.org/wiki/JumpStart_(Solaris">Solaris Jumpstart</a></li>
<li><a href="https://en.wikipedia.org/wiki/Kickstart_(Linux">Redhat Kickstart</a>)</li>
<li><a href="https://wiki.debian.org/DebianInstaller/Preseed">DebianInstaller Preseed</a></li>
<li><a href="https://en.wikipedia.org/wiki/YaST#AutoYaST">Suse Autoyast</a></li>
<li>&hellip;</li>
</ul>


<h2>Cloud &amp; co</h2>

<h3>Cloud-init</h3>

<p>In a cloud environment, we use images to install systems. The system automation is generally done by <a href="https://cloud-init.io/">cloud-init</a>. Cloud-init was originally developed for Ubuntu GNU/Linux on the Amazon EC2 cloud. It has become the de facto installation configuration tool for most Unix like systems on most cloud environments.</p>

<p>Cloud-init uses a YAML file to configure the system.</p>

<h3>Images</h3>

<p>Most GNU/Linux distributions provide images that can be used to provision a new system.
You can find the complete list on the OpenStack website</p>

<p><a href="https://docs.openstack.org/image-guide/obtain-images.html">https://docs.openstack.org/image-guide/obtain-images.html</a></p>

<p>The OpenStack documentation also describes how you can create your own base images in the <a href="https://docs.openstack.org/image-guide/">OpenStack Virtual Machine Image Guide</a></p>

<h1>Use a centos cloud image with libvirtd</h1>

<h2>Download the cloud image</h2>

<h3>Download</h3>

<p>Download the latest &ldquo;GenericCloud&rdquo; centos 7 cloud image and sha256sum.txt.asc sha256sum.txt from:</p>

<p><a href="https://cloud.centos.org/centos/7/images/">https://cloud.centos.org/centos/7/images/</a></p>

<h3>Verify</h3>

<p>You should verify your download - as always against a trusted signing key -</p>

<p>On a centos 7 system, the public gpg is already installed at <code>/etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</code></p>

<h4>Verify the fingerprint</h4>

<p>Execute</p>

<pre><code>staf@centos7 iso]$ gpg --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
pub  4096R/F4A80EB5 2014-06-23 CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;
      Key fingerprint = 6341 AB27 53D7 8A78 A7C2  7BB1 24C6 A8A7 F4A8 0EB5
[staf@centos7 iso]$ gpg --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
</code></pre>

<p>and verify the fingerprint, the fingerprints that are used by centos are listed at:</p>

<p><a href="https://www.centos.org/keys/">https://www.centos.org/keys/</a></p>

<h4>Import key</h4>

<p>Import the pub centos gpg key:</p>

<pre><code>[staf@centos7 iso]$ gpg --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
gpg: key F4A80EB5: public key "CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
[staf@centos7 iso]$ 
</code></pre>

<p>List the trusted gpg key:</p>

<pre><code>staf@centos7 iso]$ gpg --list-keys
/home/staf/.gnupg/pubring.gpg
-----------------------------
pub   4096R/F4A80EB5 2014-06-23
uid                  CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;

[staf@centos7 iso]$ gpg --list-keys
</code></pre>

<h4>Verify the sha256sum file</h4>

<pre><code>[staf@centos7 iso]$ gpg --verify sha256sum.txt.asc
gpg: Signature made Thu 31 Jan 2019 04:28:30 PM CET using RSA key ID F4A80EB5
gpg: Good signature from "CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;"
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 6341 AB27 53D7 8A78 A7C2  7BB1 24C6 A8A7 F4A8 0EB5
[staf@centos7 iso]$ 
</code></pre>

<p>The key fingerprint must match the one of RPM-GPG-KEY-CentOS-7.</p>

<h4>Verify the iso file</h4>

<pre><code>[staf@centos7 iso]$ xz -d CentOS-7-x86_64-GenericCloud-1901.qcow2.xz
[staf@centos7 iso]$ sha256sum -c sha256sum.txt.asc 2&gt;&amp;1 | grep OK
CentOS-7-x86_64-GenericCloud-1901.qcow2: OK
[staf@centos7 iso]$ 
</code></pre>

<h2>Image</h2>

<h3>info</h3>

<p>The image we download is a normal qcow2 image, we can see the image information with <code>qemu-info</code></p>

<pre><code>[root@centos7 iso]# qemu-img info CentOS-7-x86_64-GenericCloud-1901.qcow2
image: CentOS-7-x86_64-GenericCloud-1901.qcow2
file format: qcow2
virtual size: 8.0G (8589934592 bytes)
disk size: 895M
cluster_size: 65536
Format specific information:
    compat: 0.10
[root@centos7 iso]# 
</code></pre>

<h3>Copy &amp; resize</h3>

<p>The default image is small - 8GB - we might be using the image to provision other systems so it better to leave it untouched.</p>

<p>Copy the image to the location where we&rsquo;ll run the virtual system.</p>

<pre><code>[root@centos7 iso]# cp -v CentOS-7-x86_64-GenericCloud-1901.qcow2 /var/lib/libvirt/images/tst/tst.qcow2
'CentOS-7-x86_64-GenericCloud-1901.qcow2' -&gt; '/var/lib/libvirt/images/tst/tst.qcow2'
[root@centos7 iso]# 
</code></pre>

<p>and resize it to the required size:</p>

<pre><code>[root@centos7 iso]# cd /var/lib/libvirt/images/tst
[root@centos7 tst]# qemu-img resize tst.qcow2 20G
Image resized.
[root@centos7 tst]# 
</code></pre>

<h2>cloud-init</h2>

<p>We&rsquo;ll create a simple cloud-init configuration file and generate an iso image with <code>cloud-localds</code>. This iso image holds the cloud-init configuration and will be used to setup the system during the bootstrap.</p>

<h3>Install cloud-utils</h3>

<p><span style="color:red"><strong> It&rsquo;s important to NOT install cloud-init on your KVM host machine. </strong></span> This creates a cloud-init service that runs during the boot and tries to reconfigure your host. Something that you probably don&rsquo;t want on your KVM hypervisor host.</p>

<p>The cloud-util package has all the tool we need to convert the cloud-init configuration files to an iso image.</p>

<pre><code>[root@centos7 tst]# yum install -y cloud-utils
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: centos.cu.be
 * extras: centos.cu.be
 * updates: centos.mirror.ate.info
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package cloud-utils.x86_64 0:0.27-20.el7.centos will be installed
--&gt; Processing Dependency: python-paramiko for package: cloud-utils-0.27-20.el7.centos.x86_64
--&gt; Processing Dependency: euca2ools for package: cloud-utils-0.27-20.el7.centos.x86_64
--&gt; Processing Dependency: cloud-utils-growpart for package: cloud-utils-0.27-20.el7.centos.x86_64
--&gt; Running transaction check
---&gt; Package cloud-utils-growpart.noarch 0:0.29-2.el7 will be installed
---&gt; Package euca2ools.noarch 0:2.1.4-1.el7.centos will be installed
--&gt; Processing Dependency: python-boto &gt;= 2.13.3-1 for package: euca2ools-2.1.4-1.el7.centos.noarch
--&gt; Processing Dependency: m2crypto for package: euca2ools-2.1.4-1.el7.centos.noarch
---&gt; Package python-paramiko.noarch 0:2.1.1-9.el7 will be installed
--&gt; Running transaction check
---&gt; Package m2crypto.x86_64 0:0.21.1-17.el7 will be installed
---&gt; Package python-boto.noarch 0:2.25.0-2.el7.centos will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

=======================================================================================
 Package                    Arch         Version                   Repository     Size
=======================================================================================
Installing:
 cloud-utils                x86_64       0.27-20.el7.centos        extras         43 k
Installing for dependencies:
 cloud-utils-growpart       noarch       0.29-2.el7                base           26 k
 euca2ools                  noarch       2.1.4-1.el7.centos        extras        319 k
 m2crypto                   x86_64       0.21.1-17.el7             base          429 k
 python-boto                noarch       2.25.0-2.el7.centos       extras        1.5 M
 python-paramiko            noarch       2.1.1-9.el7               updates       269 k

Transaction Summary
=======================================================================================
Install  1 Package (+5 Dependent packages)

Total download size: 2.5 M
Installed size: 12 M
Downloading packages:
(1/6): cloud-utils-growpart-0.29-2.el7.noarch.rpm               |  26 kB  00:00:01     
(2/6): cloud-utils-0.27-20.el7.centos.x86_64.rpm                |  43 kB  00:00:01     
(3/6): euca2ools-2.1.4-1.el7.centos.noarch.rpm                  | 319 kB  00:00:01     
(4/6): m2crypto-0.21.1-17.el7.x86_64.rpm                        | 429 kB  00:00:01     
(5/6): python-boto-2.25.0-2.el7.centos.noarch.rpm               | 1.5 MB  00:00:02     
(6/6): python-paramiko-2.1.1-9.el7.noarch.rpm                   | 269 kB  00:00:03     
---------------------------------------------------------------------------------------
Total                                                     495 kB/s | 2.5 MB  00:05     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : python-boto-2.25.0-2.el7.centos.noarch                              1/6 
  Installing : python-paramiko-2.1.1-9.el7.noarch                                  2/6 
  Installing : cloud-utils-growpart-0.29-2.el7.noarch                              3/6 
  Installing : m2crypto-0.21.1-17.el7.x86_64                                       4/6 
  Installing : euca2ools-2.1.4-1.el7.centos.noarch                                 5/6 
  Installing : cloud-utils-0.27-20.el7.centos.x86_64                               6/6 
  Verifying  : m2crypto-0.21.1-17.el7.x86_64                                       1/6 
  Verifying  : cloud-utils-growpart-0.29-2.el7.noarch                              2/6 
  Verifying  : python-paramiko-2.1.1-9.el7.noarch                                  3/6 
  Verifying  : python-boto-2.25.0-2.el7.centos.noarch                              4/6 
  Verifying  : euca2ools-2.1.4-1.el7.centos.noarch                                 5/6 
  Verifying  : cloud-utils-0.27-20.el7.centos.x86_64                               6/6 

Installed:
  cloud-utils.x86_64 0:0.27-20.el7.centos                                                                                                                                     

Dependency Installed:
  cloud-utils-growpart.noarch 0:0.29-2.el7      euca2ools.noarch 0:2.1.4-1.el7.centos      m2crypto.x86_64 0:0.21.1-17.el7      python-boto.noarch 0:2.25.0-2.el7.centos     
  python-paramiko.noarch 0:2.1.1-9.el7         

Complete!
[root@centos7 tst]# 
</code></pre>

<h3>Cloud-init configuration</h3>

<p>A complete overview of cloud-init configuration directives is available at <a href="https://cloudinit.readthedocs.io/en/latest/">https://cloudinit.readthedocs.io/en/latest/</a>.</p>

<p>We&rsquo;ll create a cloud-init configuration file to update all the packages - which is always a good idea - and to add a user to the system.</p>

<p>A cloud-init configuration file has to start with <code>#cloud-config</code>, remember this is YAML so only use spaces&hellip;</p>

<p>We&rsquo;ll create a password hash that we&rsquo;ll put into your cloud-init configuration, it&rsquo;s also possible to use a plain-text password in the configuration with <code>chpasswd</code> or to set the password for the default user. But it&rsquo;s better to use a hash so nobody can see the password. Keep in mind that is still possible to brute-force the password hash.</p>

<p>Some GNU/Linux distributions have the <code>mkpasswd</code> utility this is not available on centos. The <code>mkpasswd</code> utility is part of the <code>expect</code> package and is something else&hellip;</p>

<p>I used a python one-liner to generate the SHA512 password hash</p>

<pre><code>python -c 'import crypt,getpass; print(crypt.crypt(getpass.getpass(), crypt.mksalt(crypt.METHOD_SHA512)))'
</code></pre>

<p>Execute the one-liner and type in your password:</p>

<pre><code>[staf@centos7 ~]$ python -c 'import crypt,getpass; print(crypt.crypt(getpass.getpass(), crypt.mksalt(crypt.METHOD_SHA512)))'
Password: 
&lt;your hash&gt;
[staf@centos7 ~]$ 
</code></pre>

<p>Create config.yaml - replace <code>&lt;your_user&gt;</code>, <code>&lt;your_hash&gt;</code>, <code>&lt;your_ssh_pub_key&gt;</code> -  with your data:</p>

<pre><code>#cloud-config
package_upgrade: true
users:
  - name: &lt;your_user&gt;
    groups: wheel
    lock_passwd: false
    passwd: &lt;your_passord_hash&gt;
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    ssh-authorized-keys:
      - &lt;your_public_ssh_key&gt;
</code></pre>

<p>And generate the configuration iso image:</p>

<pre><code>root@centos7 tst]# cloud-localds config.iso config.yaml
wrote config.iso with filesystem=iso9660 and diskformat=raw
[root@centos7 tst]# 
</code></pre>

<h3>Create the virtual system</h3>

<p>Libvirt has predefined definitions for operating systems. You can query the predefined operation systems with the <code>osinfo-query os</code> command.</p>

<p>We use centos 7, we use <code>osinfo-query os</code> to find the correct definition.</p>

<pre><code>[root@centos7 tst]# osinfo-query  os | grep -i centos7
 centos7.0            | CentOS 7.0                                         | 7.0      | http://centos.org/centos/7.0            
[root@centos7 tst]# 
</code></pre>

<p>Create the virtual system:</p>

<pre><code>virt-install \
  --memory 2048 \
  --vcpus 2 \
  --name tst \
  --disk /var/lib/libvirt/images/tst/tst.qcow2,device=disk \
  --disk /var/lib/libvirt/images/tst/config.iso,device=cdrom \
  --os-type Linux \
  --os-variant centos7.0 \
  --virt-type kvm \
  --graphics none \
  --network default \
  --import
</code></pre>

<p>The default escape key - to get out the console is ^[  ( Ctrl + [ )</p>

<p><strong><em> Have fun! </em></strong></p>

<h1>Links</h1>

<ul>
<li><a href="https://wiki.centos.org/Download/Verify">https://wiki.centos.org/Download/Verify</a></li>
<li><a href="https://www.theurbanpenguin.com/using-cloud-images-in-kvm/">https://www.theurbanpenguin.com/using-cloud-images-in-kvm/</a></li>
<li><a href="https://docs.openstack.org/image-guide/">https://docs.openstack.org/image-guide/</a></li>
<li><a href="https://unix.stackexchange.com/questions/52108/how-to-create-sha512-password-hashes-on-command-line#76337">https://unix.stackexchange.com/questions/52108/how-to-create-sha512-password-hashes-on-command-line#76337</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Install Libreboot on a ThinkPad X60]]></title>
    <link href="https://stafwag.github.io/blog/blog/2017/02/11/how-to-install-libreboot-on-a-thinkpad-x60/"/>
    <updated>2017-02-11T16:09:11+01:00</updated>
    <id>https://stafwag.github.io/blog/blog/2017/02/11/how-to-install-libreboot-on-a-thinkpad-x60</id>
    <content type="html"><![CDATA[<p><br />&nbsp;<br />
I got a <a href="https://en.wikipedia.org/wiki/ThinkPad_X_Series#X60_Tablet">ThinkPad x60 (tablet version)</a> from <a href="http://ebay.be">ebay.be</a> to install <a href="https://libreboot.org/">libreboot</a> on it.
<br />&nbsp;<br />
I tried to compile libreboot on <a href="http://www.debian">Debian</a> and <a href="https://www.parabola.nu/">Parabola</a> GNU/Linux but both failed, compling Libreboot on <a href="https://trisquel.info/">Trisquel 7</a> works fine so I&rsquo;ll use Trisquel to replace the BIOS with libreboot.
<br />&nbsp;<br />
I&rsquo;m not sure that I&rsquo;ll use Trisquel 7 as my daily driver since it is a bit outdated&hellip;
I might go with <a href="http://https://wiki.debian.org/DebianStretch">Debian Strech</a> without the non-free repositories to get a fully <a href="https://en.wikipedia.org/wiki/Free_software">Free Software</a> Laptop/tablet. I&rsquo;ll need to replace the Intel wifi adapter since this requires non-free firmware.
<br />&nbsp;<br />
You&rsquo;ll find a small howto install libreboot on a Thinkpad X60 below.
<br />&nbsp;<br /></p>

<p><img class="centre" src="/images/x60_open.jpg" width="750" height="1050" title="&ldquo;Thinkpad x60 open&rdquo;" ></p>

<h1>Build Libreboot</h1>

<p>The latest version of libreboot isn&rsquo;t available via a binary distribution so I decided to build it from source.</p>

<h2>Download the Libreboot source</h2>

<p>Download the latest libreboot image from <a href="https://libreboot.org/download/"><a href="https://libreboot.org/download/">https://libreboot.org/download/</a></a></p>

<h3>Download the source tarball</h3>

<pre><code>staf@petronella:~/libreboot$ wget https://libreboot.org/release/stable/20160907/libreboot_r20160907_src.tar.xz
--2017-02-11 10:24:41--  https://libreboot.org/release/stable/20160907/libreboot_r20160907_src.tar.xz
Resolving libreboot.org (libreboot.org)... 149.56.232.100
Connecting to libreboot.org (libreboot.org)|149.56.232.100|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 438622508 (418M) [application/x-xz]
Saving to: libreboot_r20160907_src.tar.xz

100%[==========================================================&gt;] 438.622.508  541KB/s   in 18m 35s


2017-02-11 10:43:17 (384 KB/s) - libreboot_r20160907_src.tar.xz saved [438622508/438622508]

staf@petronella:~/libreboot$ 
</code></pre>

<h3>Verify</h3>

<p>As always verify the checksums and the gpg signature, the gpg public key is available at:
<a href="https://libreboot.org/gpg/"</a><a href="https://libreboot.org/gpg/">https://libreboot.org/gpg/</a></a></p>

<h4>Download the  SHA512SUMS and SHA512SUMS.sig</h4>

<pre><code>staf@petronella:~/libreboot$ wget https://libreboot.org/release/stable/20160907/SHA512SUMS                                                      
--2017-02-11 10:52:23--  https://libreboot.org/release/stable/20160907/SHA512SUMS                                                                          
Resolving libreboot.org (libreboot.org)... 149.56.232.100                                                                                                            
Connecting to libreboot.org (libreboot.org)|149.56.232.100|:443... connected.                                                                                                  
HTTP request sent, awaiting response... 200 OK                                                                                                                                 
Length: 5112 (5,0K) [application/octet-stream]                                                                                                                                        
Saving to: 'SHA512SUMS'                                                                                                                                                                          

100%[=====================================================================================================================================================================================================&gt;] 5.112       --.-K/s   in 0,006s  

2017-02-11 10:52:24 (852 KB/s) - 'SHA512SUMS' saved [5112/5112]                                                                                                                                                                      

staf@petronella:~/libreboot$ wget https://libreboot.org/release/stable/20160907/SHA512SUMS.sig
--2017-02-11 10:52:39--  https://libreboot.org/release/stable/20160907/SHA512SUMS.sig
Resolving libreboot.org (libreboot.org)... 149.56.232.100
Connecting to libreboot.org (libreboot.org)|149.56.232.100|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 543 [application/pgp-signature]
Saving to: 'SHA512SUMS.sig'

100%[=====================================================================================================================================================================================================&gt;] 543         --.-K/s   in 0s      

2017-02-11 10:52:39 (11,4 MB/s) - 'SHA512SUMS.sig' saved [543/543]

staf@petronella:~/libreboot$ 
</code></pre>

<h4>Import the public gpg key</h4>

<pre><code>staf@petronella:~/libreboot$ gpg --recv-keys 0x05E8C5B2
gpg: directory `/home/staf/.gnupg' created
gpg: new configuration file `/home/staf/.gnupg/gpg.conf' created
gpg: WARNING: options in `/home/staf/.gnupg/gpg.conf' are not yet active during this run
gpg: keyring `/home/staf/.gnupg/secring.gpg' created
gpg: keyring `/home/staf/.gnupg/pubring.gpg' created
gpg: no keyserver known (use option --keyserver)
gpg: keyserver receive failed: bad URI
staf@petronella:~/libreboot$ gpg --recv-keys 0x05E8C5B2
gpg: requesting key 05E8C5B2 from hkp server keys.gnupg.net
gpg: /home/staf/.gnupg/trustdb.gpg: trustdb created
gpg: key 05E8C5B2: public key "Leah Rowe (Libreboot signing key) &lt;info@minifree.org&gt;" imported
gpg: key 05E8C5B2: public key "Leah Rowe (Libreboot signing key) &lt;info@minifree.org&gt;" imported
gpg: no ultimately trusted keys found
gpg: Total number processed: 2
gpg:               imported: 2  (RSA: 2)
staf@petronella:~/libreboot$ 
</code></pre>

<h4>Verify the checksum file</h4>

<pre><code>staf@petronella:~/libreboot$ gpg --verify SHA512SUMS.sig SHA512SUMS
gpg: Signature made Don 08 Sep 2016 00:15:17 CEST using RSA key ID 05E8C5B2
gpg: Good signature from "Leah Rowe (Libreboot signing key) &lt;info@minifree.org&gt;"
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: CDC9 CAE3 2CB4 B7FC 84FD  C804 969A 9795 05E8 C5B2
staf@petronella:~/libreboot$ 
</code></pre>

<h4>Verify the checksum</h4>

<pre><code>staf@petronella:~/libreboot$ sha512sum -c SHA512SUMS | head -2
sha512sum: ./libreboot_r20160907_util.tar.xz: No such file or directory
sha512sum: ./rom/depthcharge/libreboot_r20160907_depthcharge_veyron_speedy.tar.xz: No such file or directory
sha512sum: ./rom/grub/libreboot_r20160907_grub_d510mo.tar.xz: No such file or directory
sha512sum: ./libreboot_r20160907_src.tar.xz: OK
./rom/grub/libreboot_r20160907_grub_ga-g41m-es2l.tar.xz./libreboot_r20160907_util.tar.xz: FAILED open or read
: No such file or directory
staf@petronella:~/libreboot$ 
</code></pre>

<h2>Build the modules</h2>

<h3>Git</h3>

<p>It&rsquo;s required to have git installed and to set the user email &amp; name if you don&rsquo;t do this the complilation will fail.</p>

<p>Install git</p>

<pre><code>staf@petronella:~/libreboot$ sudo apt-get install git
[sudo] password for staf: 
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following extra packages will be installed:
  git-man liberror-perl
Suggested packages:
  git-daemon-run git-daemon-sysvinit git-doc git-el git-email git-gui gitk
  gitweb git-arch git-bzr git-cvs git-mediawiki git-svn
The following NEW packages will be installed:
  git git-man liberror-perl
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 3.306 kB of archives.
After this operation, 21,9 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://fr.archive.trisquel.info/trisquel/ belenos/main liberror-perl all 0.17-1.1 [21,1 kB]
Get:2 http://fr.archive.trisquel.info/trisquel/ belenos-security/main git-man all 1:1.9.1-1ubuntu0.3 [699 kB]
Get:3 http://fr.archive.trisquel.info/trisquel/ belenos-security/main git amd64 1:1.9.1-1ubuntu0.3 [2.586 kB]
Fetched 3.306 kB in 4s (723 kB/s)
Selecting previously unselected package liberror-perl.
(Reading database ... 206214 files and directories currently installed.)
Preparing to unpack .../liberror-perl_0.17-1.1_all.deb ...
Unpacking liberror-perl (0.17-1.1) ...
Selecting previously unselected package git-man.
Preparing to unpack .../git-man_1%3a1.9.1-1ubuntu0.3_all.deb ...
Unpacking git-man (1:1.9.1-1ubuntu0.3) ...
Selecting previously unselected package git.
Preparing to unpack .../git_1%3a1.9.1-1ubuntu0.3_amd64.deb ...
Unpacking git (1:1.9.1-1ubuntu0.3) ...
Processing triggers for man-db (2.6.7.1-1ubuntu1) ...
Setting up liberror-perl (0.17-1.1) ...
Setting up git-man (1:1.9.1-1ubuntu0.3) ...
Setting up git (1:1.9.1-1ubuntu0.3) ...
staf@petronella:~/libreboot$ 
</code></pre>

<p>Set the git username and password.</p>

<pre><code>staf@petronella:~/libreboot$ git config --global user.email "staf@wagemakers.be"
staf@petronella:~/libreboot$ git config --global user.name "staf wagemakers"
staf@petronella:~/libreboot$ 
</code></pre>

<h3>Extract the source</h3>

<pre><code>staf@petronella:~/libreboot$ tar xf libreboot_r20160907_src.tar.xz 
staf@petronella:~/libreboot$ 
</code></pre>

<h3>Install the dependencies</h3>

<p>cd into the extracted directory</p>

<pre><code>staf@petronella:~/libreboot$ ls
SHA512SUMS  SHA512SUMS.sig  libreboot_r20160907_src  libreboot_r20160907_src.tar.xz
staf@petronella:~/libreboot$ cd libreboot_r20160907_src
</code></pre>

<p>run dependencies trisquel7 to install the software dependencies.</p>

<pre><code>staf@petronella:~/libreboot/libreboot_r20160907_src$ sudo ./build dependencies trisquel7
Reading package lists... Done
Building dependency tree       
Reading state information... Done
wget is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Reading package lists... Done
Building dependency tree       
Reading state information... Done
git is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following extra packages will be installed:
  fonts-lmodern fonts-texgyre latex-beamer latex-xcolor libintl-perl
  liblua5.1-0 libpaper-utils libptexenc1 libruby1.9.1 libtext-unidecode-perl
  libxml-libxml-perl libxml-namespacesupport-perl libxml-sax-base-perl
  libxml-sax-expat-perl libxml-sax-perl libyaml-0-2 lmodern luatex pandoc-data
  pgf prosper ps2eps ruby ruby1.9.1 tcl tcl8.6 tex-common tex-gyre
  texlive-base texlive-binaries texlive-extra-utils texlive-font-utils
</code></pre>

<p>&lt; snip &gt;</p>

<pre><code>(Reading database ... 236394 files and directories currently installed.)
Preparing to unpack .../lib32z1_1%3a1.2.8.dfsg-1ubuntu1_amd64.deb ...
Unpacking lib32z1 (1:1.2.8.dfsg-1ubuntu1) ...
Selecting previously unselected package lib32z1-dev.
Preparing to unpack .../lib32z1-dev_1%3a1.2.8.dfsg-1ubuntu1_amd64.deb ...
Unpacking lib32z1-dev (1:1.2.8.dfsg-1ubuntu1) ...
Setting up lib32z1 (1:1.2.8.dfsg-1ubuntu1) ...
Setting up lib32z1-dev (1:1.2.8.dfsg-1ubuntu1) ...
Processing triggers for libc-bin (2.19-0ubuntu6.9) ...
staf@petronella:~/libreboot/libreboot_r20160907_src$ 
</code></pre>

<h3>Build module all</h3>

<p>Build the modules by excuting build module all</p>

<pre><code>staf@petronella:~/libreboot/libreboot/libreboot_r20160907_src$ ./build module all
Building bucts
rm -f bucts bucts.o
gcc  -DVERSION='"withoutgit"' -c bucts.c
gcc -o bucts bucts.o  -lpci


Building the utilities in coreboot
make: Entering directory `/home/staf/libreboot/libreboot_r20160907_src/coreboot/15fca66bf08db45937ce88b950491963654805b9/15fca66bf08db45937ce88b950491963654805b9/util/cbfstool'
    HOSTCC     cbfstool/cbfstool.o
    HOSTCC     cbfstool/common.o
    HOSTCC     cbfstool/compress.o
    HOSTCC     cbfstool/cbfs_hash.o
    HOSTCC     cbfstool/cbfs_image.o
    HOSTCC     cbfstool/cbfs-mkstage.o
    HOSTCC     cbfstool/cbfs-mkpayload.o
    HOSTCC     cbfstool/elfheaders.o
    HOSTCC     cbfstool/rmodule.o
    HOSTCC     cbfstool/xdr.o
    HOSTCC     cbfstool/fit.o
    HOSTCC     cbfstool/partitioned_file.o
</code></pre>

<p>&lt; snip &gt;</p>

<pre><code>  Compile checking out/vgasrc/stdvgamodes.o
  Compile checking out/vgasrc/stdvgaio.o
  Compile checking out/vgasrc/clext.o
  Compile checking out/vgasrc/bochsvga.o
  Compile checking out/vgasrc/geodevga.o
  Compile checking out/vgasrc/cbvga.o
  Compiling whole program out/vgaccode16.raw.s
  Fixup VGA rom assembler
  Compiling (16bit) out/vgaentry.o
  Precompiling out/vgasrc/vgalayout.lds
  Linking out/vgarom.o
Version: ?-20170211_123929-petronella
  Extracting binary out/vgabios.bin.raw
  Finalizing rom out/vgabios.bin
staf@petronella:~/libreboot/libreboot_r20160907_src$ 
</code></pre>

<h2>Build the ROMS</h2>

<pre><code>staf@petronella:~/libreboot/libreboot_r20160907_src$ ./build roms withgrub
Building ROM images with the GRUB payload
Creating GRUB ELF executable for configuration 'txtmode'


Creating GRUB ELF executable for configuration 'vesafb'


GRUB Helper script: build ROM images for 'd510mo'
M       3rdparty/vboot
Switched to branch 'grub_d510mo'
Switched to branch 'grub_d510mo'
No submodule mapping found in .gitmodules for path '3rdparty/vboot'
No submodule mapping found in .gitmodules for path '3rdparty/vboot'
</code></pre>

<p>&lt; snip &gt;</p>

<pre><code>12288 bytes (12 kB) copied, 0,026113 s, 471 kB/s
12288+0 records in
12288+0 records out
12288 bytes (12 kB) copied, 0,0259776 s, 473 kB/s
12288+0 records in
12288+0 records out
12288 bytes (12 kB) copied, 0,0261767 s, 469 kB/s
12288+0 records in
12288+0 records out
12288 bytes (12 kB) copied, 0,0261144 s, 471 kB/s
12288+0 records in
12288+0 records out
12288 bytes (12 kB) copied, 0,0282761 s, 435 kB/s
12288+0 records in
12288+0 records out
12288 bytes (12 kB) copied, 0,0271539 s, 453 kB/s
12288+0 records in
12288+0 records out
12288 bytes (12 kB) copied, 0,0295147 s, 416 kB/s


staf@petronella:~/libreboot/libreboot_r20160907_src$ 
</code></pre>

<p>The rom build command creates a bin directory, verify that required roms are available.</p>

<pre><code>staf@petronella:~/libreboot/libreboot_r20160907_src$ cd bin/
staf@petronella:~/libreboot/libreboot_r20160907_src/bin$ ls -l
total 4
drwxrwxr-x 23 staf staf 4096 Feb  11 15:58 grub
staf@petronella:~/libreboot/libreboot_r20160907_src/bin$ cd grub/
staf@petronella:~/libreboot/libreboot_r20160907_src/bin/grub$ ls -l
total 84
drwxrwxr-x 2 staf staf 4096 Feb  11 15:28 d510mo
drwxrwxr-x 2 staf staf 4096 Feb  11 15:29 ga-g41m-es2l
drwxrwxr-x 2 staf staf 4096 Feb  11 15:30 kcma-d8
drwxrwxr-x 2 staf staf 4096 Feb  11 15:31 kgpe-d16
drwxrwxr-x 2 staf staf 4096 Feb  11 15:32 macbook21
drwxrwxr-x 2 staf staf 4096 Feb  11 15:33 qemu_i440fx_piix4
drwxrwxr-x 2 staf staf 4096 Feb  11 15:34 qemu_q35_ich9
drwxrwxr-x 2 staf staf 4096 Feb  11 15:59 r400_16mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:59 r400_4mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:59 r400_8mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:59 t400_16mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:59 t400_4mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:59 t400_8mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:59 t500_16mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:59 t500_4mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:59 t500_8mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:58 t60
drwxrwxr-x 2 staf staf 4096 Feb  11 15:59 x200_16mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:58 x200_4mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:58 x200_8mb
drwxrwxr-x 2 staf staf 4096 Feb  11 15:58 x60
staf@petronella:~/libreboot/libreboot_r20160907_src/bin/grub$ 
</code></pre>

<pre><code>staf@petronella:~/libreboot/libreboot_r20160907_src/bin/grub$ cd x60
staf@petronella:~/libreboot/libreboot_r20160907_src/bin/grub/x60$ ls -l
total 40960
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_deqwertz_txtmode.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_deqwertz_vesafb.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_esqwerty_txtmode.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_esqwerty_vesafb.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_frazerty_txtmode.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_frazerty_vesafb.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_frdvbepo_txtmode.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_frdvbepo_vesafb.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_itqwerty_txtmode.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_itqwerty_vesafb.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_svenska_txtmode.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_svenska_vesafb.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_ukdvorak_txtmode.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_ukdvorak_vesafb.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_ukqwerty_txtmode.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_ukqwerty_vesafb.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_usdvorak_txtmode.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_usdvorak_vesafb.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_usqwerty_txtmode.rom
-rw-rw-r-- 1 staf staf 2097152 Feb  11 15:58 x60_usqwerty_vesafb.rom
</code></pre>

<h1>Libreboot Installation</h1>

<h2>Backup</h2>

<p>Backups are important. We&rsquo;ll first backup the orginal proprietary <a href="https://en.wikipedia.org/wiki/BIOS">BIOS</a> before we free the laptop and install a <a href="https://en.wikipedia.org/wiki/Free_software">Free Software firmware</a></p>

<p>The documentation that I found (see Links below) describes that the backup has 2 step flashrom_lenovobios_sst &amp; flashrom_lenovobios_macronix.</p>

<p>The flashrom_lenovobios_macronix command fails on my Laptop/Table but I decided to continue with the installation since I didn&rsquo;t pay a lot for the laptop on ebay.be.</p>

<pre><code>staf@petronella:~/libreboot/libreboot_r20160907_src$ sudo flashrom/flashrom_lenovobios_sst -p internal -r factory.bin
[sudo] password for staf: 
flashrom v0.9.9-unknown on Linux 3.13.0-108-lowlatency (x86_64)
flashrom is free software, get the source code at https://flashrom.org

Calibrating delay loop... OK.
Found chipset "Intel ICH7M".
Enabling flash write... WARNING: SPI Configuration Lockdown activated.
OK.
Found SST flash chip "SST25VF016B" (2048 kB, SPI) mapped at physical address 0x00000000ffe00000.
Reading flash... done.
staf@petronella:~/libreboot/libreboot_r20160907_src$ 
</code></pre>

<pre><code>staf@petronella:~/libreboot/libreboot_r20160907_src/flashrom$ sudo ./flashrom_lenovobios_macronix -p internal -r factory.bin
flashrom v0.9.9-unknown on Linux 3.13.0-108-lowlatency (x86_64)
flashrom is free software, get the source code at https://flashrom.org

Calibrating delay loop... OK.
Found chipset "Intel ICH7M".
Enabling flash write... WARNING: SPI Configuration Lockdown activated.
OK.
No EEPROM/flash device found.
Note: flashrom can never write if the flash chip isn't found automatically.
staf@petronella:~/libreboot/libreboot_r20160907_src/flashrom$ 
</code></pre>

<h2>Install the rom</h2>

<pre><code>staf@petronella:~/libreboot/libreboot_r20160907_src$ sudo ./flash i945lenovo_firstflash bin/grub/x
x200_16mb/ x200_4mb/  x200_8mb/  x60/       
staf@petronella:~/libreboot/libreboot_r20160907_src$ sudo ./flash i945lenovo_firstflash bin/grub/x60/x60_
x60_deqwertz_txtmode.rom  x60_frazerty_txtmode.rom  x60_itqwerty_txtmode.rom  x60_ukdvorak_txtmode.rom  x60_usdvorak_txtmode.rom
x60_deqwertz_vesafb.rom   x60_frazerty_vesafb.rom   x60_itqwerty_vesafb.rom   x60_ukdvorak_vesafb.rom   x60_usdvorak_vesafb.rom
x60_esqwerty_txtmode.rom  x60_frdvbepo_txtmode.rom  x60_svenska_txtmode.rom   x60_ukqwerty_txtmode.rom  x60_usqwerty_txtmode.rom
x60_esqwerty_vesafb.rom   x60_frdvbepo_vesafb.rom   x60_svenska_vesafb.rom    x60_ukqwerty_vesafb.rom   x60_usqwerty_vesafb.rom
staf@petronella:~/libreboot/libreboot_r20160907_src$ sudo ./flash i945lenovo_firstflash bin/grub/x60/x60_us
x60_usdvorak_txtmode.rom  x60_usdvorak_vesafb.rom   x60_usqwerty_txtmode.rom  x60_usqwerty_vesafb.rom   
staf@petronella:~/libreboot/libreboot_r20160907_src$ sudo ./flash i945lenovo_firstflash bin/grub/x60/x60_usqwerty_vesafb.rom 
[sudo] password for staf: 
Mode selected: i945lenovo_firstflash
bucts utility version 'withoutgit'
Using LPC bridge 8086:27b9 at 0000:1f.00
Current BUC.TS=0 - 128kb address range 0xFFFE0000-0xFFFFFFFF is untranslated
Updated BUC.TS=1 - 64kb address ranges at 0xFFFE0000 and 0xFFFF0000 are swapped
flashrom v0.9.9-unknown on Linux 3.13.0-108-lowlatency (x86_64)
flashrom is free software, get the source code at https://flashrom.org

Calibrating delay loop... OK.
Found chipset "Intel ICH7M".
Enabling flash write... WARNING: SPI Configuration Lockdown activated.
OK.
Found SST flash chip "SST25VF016B" (2048 kB, SPI) mapped at physical address 0x00000000ffe00000.
Reading old flash chip contents... done.
Erasing and writing flash chip... spi_block_erase_20 failed during command execution at address 0x0
Reading current flash chip contents... done. Looking for another erase function.
spi_block_erase_52 failed during command execution at address 0x0
Reading current flash chip contents... done. Looking for another erase function.
Transaction error!
spi_block_erase_d8 failed during command execution at address 0x1f0000
Reading current flash chip contents... done. Looking for another erase function.
spi_chip_erase_60 failed during command execution
Reading current flash chip contents... done. Looking for another erase function.
spi_chip_erase_c7 failed during command execution
Looking for another erase function.
No usable erase functions left.
FAILED!
Uh oh. Erase/write failed. Checking if anything has changed.
Reading current flash chip contents... done.
Apparently at least some data has changed.
Your flash chip is in an unknown state.
Get help on IRC at chat.freenode.net (channel #flashrom) or
mail flashrom@flashrom.org with the subject "FAILED: &lt;your board name&gt;"!
-------------------------------------------------------------------------------
DO NOT REBOOT OR POWEROFF!
flashrom v0.9.9-unknown on Linux 3.13.0-108-lowlatency (x86_64)
flashrom is free software, get the source code at https://flashrom.org

Calibrating delay loop... OK.
Found chipset "Intel ICH7M".
Enabling flash write... WARNING: SPI Configuration Lockdown activated.
OK.
No EEPROM/flash device found.
Note: flashrom can never write if the flash chip isn't found automatically.
staf@petronella:~/libreboot/libreboot_r20160907_src$ 
</code></pre>

<p>Power down your system</p>

<pre><code>staf@petronella:~/libreboot/libreboot_r20160907_src$ sudo poweroff

Broadcast message from staf@petronella
        (/dev/pts/7) at 16:11 ...

The system is going down for power off NOW!
staf@petronella:~/libreboot/libreboot_r20160907_src$ Connection to petronella closed by remote host.
Connection to petronella closed.
[staf@vicky ~]$ 
</code></pre>

<p>Wait 2 minutes and boot the system again. If you&rsquo;re lucky the system will boot with the Free Libreboot firmware.
Logon the system again and continue with the secondflash phase</p>

<pre><code>[staf@vicky ~]$ ssh petronella 
C_GetAttributeValue failed: 18
no such identity: /home/staf/.ssh/id_rsa: No such file or directory
no such identity: /home/staf/.ssh/id_dsa: No such file or directory
no such identity: /home/staf/.ssh/id_ecdsa: No such file or directory
no such identity: /home/staf/.ssh/id_ed25519: No such file or directory
staf@petronella's password: 
Welcome to Trisquel GNU/Linux 7.0, Belenos (GNU/Linux 3.13.0-108-lowlatency x86_64)
   ___        ___               ___        ___       ___        ___        ___
  /\  \      /\  \      ___    /\  \      /\  \     /\__\      /\  \      /\__\
  \ \  \    /  \  \    /\  \  /  \  \    /  \  \   / /  /     /  \  \    / /  /
   \ \  \  / /\ \  \   \ \  \/ /\ \  \  / /\ \  \ / /  /     / /\ \  \  / /  /
   /  \  \/  \ \ \  \  /  \__\ \ \ \  \/ /  \ \  \ /  /  ___/  \ \ \  \/ /  /
  / /\ \__\/\ \ \ \__\/ /\/__/\ \ \ \__\/__/ \ \__\__/  /\__\/\ \ \ \__\/__/
 / /  \/__/_|  \/ /  / /  /\ \ \ \ \/__/\  \ / /  /  \ / /  /\ \ \ \/__/\  \
/ /  /      | |  /  / /__/  \ \ \ \__\ \ \/\/ /  / \  / /  /\ \ \ \__\ \ \  \
\/__/       | |\/__/\ \__\   \ \/ /  /  \    /  / \ \/ /  /  \ \ \/__/  \ \  \
            | |  |   \/__/    \  /  /    \  /  /   \  /  /    \ \__\     \ \__\
             \|__|             \/__/      \/__/     \/__/      \/__/      \/__/

Welcome to Trisquel GNU/Linux
Documentation: http://trisquel.info/wiki/

Last login: Sat Feb 11 15:43:11 2017 from 192.168.1.10
staf@petronella:~$ cd libreboot/libreboot
libreboot/               libreboot_r20160907_src/ 
staf@petronella:~$ cd libreboot/libreboot_r20160907_src/
staf@petronella:~/libreboot/libreboot_r20160907_src$  ./flash i945lenovo_secondflash bin/grub/x60/x60_usqwerty_vesafb.rom 
This script must be run as root
staf@petronella:~/libreboot/libreboot_r20160907_src$ ^C libreboot/libreboot_r20160907_src/
staf@petronella:~/libreboot/libreboot_r20160907_src$ sudo ./flash i945lenovo_secondflash bin/grub/x60/x60_usqwerty_vesafb.rom
[sudo] password for staf: 
Mode selected: i945lenovo_secondflash
flashrom v0.9.9-unknown on Linux 3.13.0-108-lowlatency (x86_64)
flashrom is free software, get the source code at https://flashrom.org

Calibrating delay loop... OK.
coreboot table found at 0xcbe9f000.
Found chipset "Intel ICH7M".
Enabling flash write... OK.
Found SST flash chip "SST25VF016B" (2048 kB, SPI) mapped at physical address 0x00000000ffe00000.
Reading old flash chip contents... done.
Erasing and writing flash chip... Erase/write done.
Verifying flash... VERIFIED.
bucts utility version 'withoutgit'
Using LPC bridge 8086:27b9 at 0000:1f.00
Current BUC.TS=1 - 64kb address ranges at 0xFFFE0000 and 0xFFFF0000 are swapped
Updated BUC.TS=0 - 128kb address range 0xFFFE0000-0xFFFFFFFF is untranslated
staf@petronella:~/libreboot/libreboot_r20160907_src$ 
</code></pre>

<p>The installation is completed! Reboot our system and enjoy your Free As In Freedom Laptop.</p>

<p><img class="centre" src="/images/x60_free.jpg" width="750" height="853" title="&ldquo;Thinkpad x60 open&rdquo;" ></p>

<p style="font-style: italic;">
Have fun
</p>


<h1>Links</h1>

<ul>
<li><a href="https://www.libreboot.org"><a href="https://www.libreboot.org">https://www.libreboot.org</a></a></li>
<li><a href="https://libreboot.org/docs/install/#rom"><a href="https://libreboot.org/docs/install/#rom">https://libreboot.org/docs/install/#rom</a></a></li>
<li><a href="https://www.coreboot.org/Board:lenovo/x60/Installation"><a href="https://www.coreboot.org/Board:lenovo/x60/Installation">https://www.coreboot.org/Board:lenovo/x60/Installation</a></a></li>
<li><a href="http://www.linuxjournal.com/content/libreboot-x60-part-ii-installation"><a href="http://www.linuxjournal.com/content/libreboot-x60-part-ii-installation">http://www.linuxjournal.com/content/libreboot-x60-part-ii-installation</a></a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lxc Templates in Fedora 20]]></title>
    <link href="https://stafwag.github.io/blog/blog/2014/06/09/lxc-templates-in-fedora-20/"/>
    <updated>2014-06-09T14:28:00+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2014/06/09/lxc-templates-in-fedora-20</id>
    <content type="html"><![CDATA[<p>I&rsquo;m a big fan of containers and used them a lot on <a href="http://en.wikipedia.org/wiki/Solaris_%28operating_system%29">Solaris</a> and <a href="http://www.freebsd.org/doc/handbook/jails.html">jails on Freebsd</a>. Containers/jails are the fastest way to spinup an new system and the easiest way to isolate services.</p>

<p>As always with virtualization you&rsquo;ve to careful with sharing systems or containers that doesn&rsquo;t below to the same customer or service on the same physical machine since you&rsquo;re never sure which traces are left behind in the memory etc.</p>

<p><a href="https://linuxcontainers.org/">Linux containers</a> are getting more popular since the release of <a href="http://www.docker.com/">docker</a></p>

<p>When I tried to create a few containers on Fedora 20, the first attempt (a debian container) wasn&rsquo;t an success.</p>

<p>On a newly create debian container networking didn&rsquo;t work.</p>

<h3>First debian container</h3>

<h4>Creating the container</h4>

<pre><code>[root@vicky ~]# lxc-create -n mydebian -t debian

lxc-create: No config file specified, using the default config /etc/lxc/default.conf
debootstrap is /sbin/debootstrap
Checking cache download in /var/cache/lxc/debian/rootfs-squeeze-i386 ... 
Copying rootfs to /var/lib/lxc/mydebian/rootfs...Generating locales (this might 
&amp;lt; snip &amp;gt;
'debian' template installed
'mydebian' created
</code></pre>

<h4>Booting</h4>

<pre><code>[root@vicky ~]# lxc-start -n mydebian
INIT: version 2.88 booting
Using makefile-style concurrent boot in runlevel S.
Cleaning up ifupdown....
Setting up networking....
Activating lvm and md swap...done.
Checking file systems...fsck from util-linux-ng 2.17.2
done.
Mounting local filesystems...done.
Activating swapfile swap...done.
Cleaning up temporary files....
Configuring network interfaces...ifup: failed to open statefile /etc/network/run/ifstate: No such file or directory
failed.
Setting kernel variables ...done.
Cleaning up temporary files....
INIT: Entering runlevel: 3
Using makefile-style concurrent boot in runlevel 3.
Starting OpenBSD Secure Shell server: sshd.

Debian GNU/Linux 6.0 mydebian console

mydebian login: root
Password: 
Last login: Tue Jun 21 08:05:41 UTC 2014 on console
Linux mydebian 3.14.5-200.fc20.i686 #1 SMP Mon Jun 21 08:13:19 UTC 2014 i686
</code></pre>

<h3>Network isn&rsquo;t working&hellip;</h3>

<pre><code>The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
root@mydebian:~# ifconfig -a
eth0      Link encap:Ethernet  HWaddr c2:71:98:d8:8f:c3  
          inet6 addr: fe80::c071:98ff:fed8:8fc3/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:13 errors:0 dropped:0 overruns:0 frame:0
          TX packets:9 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:908 (908.0 B)  TX bytes:738 (738.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

root@mydebian:~# ifup eth0
ifup: failed to open statefile /etc/network/run/ifstate: No such file or directory
root@mydebian:~# 
root@mydebian:~# cat /etc/network/interfaces 
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp
root@mydebian:~# 
</code></pre>

<h3>Fedora container</h3>

<p>A Fedora container worked better.</p>

<h4>Creating the fedora container</h4>

<pre><code>root@vicky ~]# lxc-create -n myfedora -t fedora

lxc-create: No config file specified, using the default config /etc/lxc/default.conf
Host CPE ID from /etc/os-release: cpe:/o:fedoraproject:fedora:20
Checking cache download in /var/cache/lxc/fedora/i686/20/rootfs ... 
Downloading fedora minimal ...
Fetching rpm name from http://be.mirror.eurid.eu/fedora/linux/releases/20/Everything/i386/os//Packages/f...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   290  100   290    0     0    904      0 --:--:-- --:--:-- --:--:--   903
  0     0    0  145k    0     0  47212      0 --:--:--  0:00:03 --:--:-- 58525

&lt;snip&gt;
Updated:
  fedora-release.noarch 0:20-3                                                  

Complete!
Download complete.
Copy /var/cache/lxc/fedora/i686/20/rootfs to /var/lib/lxc/myfedora/rootfs ... 
Copying rootfs to /var/lib/lxc/myfedora/rootfs ...setting root passwd to root
installing fedora-release package
Package fedora-release-20-3.noarch already installed and latest version
Nothing to do
unlink: cannot unlink ‘/var/lib/lxc/myfedora/rootfs/etc/systemd/system/default.target’: No such file or directory
container rootfs and config created
'fedora' template installed
'myfedora' created
[root@vicky ~]# 
</code></pre>

<h4>Booting</h4>

<pre><code>[root@vicky ~]# lxc-start -n myfedora
systemd 208 running in system mode. (+PAM +LIBWRAP +AUDIT +SELINUX +IMA +SYSVINIT +LIBCRYPTSETUP +GCRYPT +ACL +XZ)
Detected virtualization 'lxc'.

Welcome to Fedora 20 (Heisenbug)!

Set hostname to &lt;myfedora&gt;.
[  OK  ] Reached target Remote File Systems.
[  OK  ] Listening on Delayed Shutdown Socket.
[  OK  ] Created slice Root Slice.
[  OK  ] Created slice User and Session Slice.
[  OK  ] Started Login Service.
&amp;lt; snip &amp;gt;
[  OK  ] Reached target Multi-User System.

Fedora release 20 (Heisenbug)
Kernel 3.14.5-200.fc20.i686 on an i686 (console)

myfedora login: root
Password: 
Last login: Wed Jun 21 09:12:42 on console
</code></pre>

<h4>Networking</h4>

<pre><code>[root@myfedora ~]# ping 8.8.8.8
connect: Network is unreachable
[root@myfedora ~]# ip addr
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
16: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether 5a:89:44:04:99:2b brd ff:ff:ff:ff:ff:ff
    inet6 fe80::5889:44ff:fe04:992b/64 scope link 
       valid_lft forever preferred_lft forever
[root@myfedora ~]# ifup eth0

Determining IP information for eth0... done.
[root@myfedora ~]# ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
64 bytes from 8.8.8.8: icmp_seq=1 ttl=49 time=113 ms
64 bytes from 8.8.8.8: icmp_seq=2 ttl=49 time=123 ms
64 bytes from 8.8.8.8: icmp_seq=3 ttl=49 time=123 ms
^C
--- 8.8.8.8 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2002ms
rtt min/avg/max/mdev = 113.751/120.096/123.408/4.488 ms
[root@myfedora ~]# 
</code></pre>

<h3>New templates</h3>

<p>Since I wanted a Debian container I clone the lxc git on github and copied the templates.</p>

<h4>Getting the templates</h4>

<pre><code>[staf@vicky github]$ git clone https://github.com/lxc/lxc 
Cloning into 'lxc'...
remote: Reusing existing pack: 17997, done.
remote: Counting objects: 17, done.
remote: Compressing objects: 100% (17/17), done.
remote: Total 18014 (delta 9), reused 0 (delta 0)
Receiving objects: 100% (18014/18014), 9.14 MiB | 77.00 KiB/s, done.
Resolving deltas: 100% (11555/11555), done.
Checking connectivity... done.
[staf@vicky github]$ 
</code></pre>

<h4>Configure</h4>

<p>Create the configure script and it dependencies</p>

<pre><code>[staf@vicky lxc]$ autoreconf -i
configure.ac:31: installing 'config/compile'
configure.ac:30: installing 'config/config.guess'
configure.ac:30: installing 'config/config.sub'
configure.ac:29: installing 'config/install-sh'
configure.ac:29: installing 'config/missing'
src/lua-lxc/Makefile.am: installing 'config/depcomp'
[staf@vicky lxc]$ 
</code></pre>

<p>Run configure</p>

<pre><code>[staf@vicky lxc]$ ./configure 
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking for style of include used by make... GNU
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
&lt;snip&gt;
Documentation:
 - examples: yes
 - API documentation: no
 - user documentation: no

Debugging:
 - tests: no
 - mutex debugging: no

Paths:
 - Logs in configpath: no
[staf@vicky lxc]$ 
</code></pre>

<h4>Copy the templates</h4>

<p>Copy the newly created templates
<code>
[staf@vicky templates]$ shopt -s extglob
[staf@vicky templates]$
[staf@vicky templates]$ ls !(*\.in|Makefile*)
lxc-alpine     lxc-centos    lxc-fedora        lxc-oracle  lxc-ubuntu-cloud
lxc-altlinux   lxc-cirros    lxc-gentoo        lxc-plamo
lxc-archlinux  lxc-debian    lxc-openmandriva  lxc-sshd
lxc-busybox    lxc-download  lxc-opensuse      lxc-ubuntu
[staf@vicky templates]$ sudo cp !(*\.in|Makefile*)  /usr/share/lxc/templates[sudo] password for staf:
[staf@vicky templates]$
</code></p>

<h3>Debian container second try&hellip;</h3>

<p>And tried to create the debian container again.</p>

<pre><code>[root@vicky ~]# lxc-ls --fancy
NAME      STATE    IPV4  IPV6  
-----------------------------
mydebian  STOPPED  -     -     
myfedora  STOPPED  -     -     
[root@vicky ~]# lxc-destroy -n mydebian
[root@vicky ~]# lxc-ls --fancy
NAME      STATE    IPV4  IPV6  
-----------------------------
myfedora  STOPPED  -     -     
[root@vicky ~]# 
</code></pre>

<h4>Creating the container</h4>

<pre><code>[root@vicky ~]# lxc-create -n mydebian -t debian

lxc-create: No config file specified, using the default config /etc/lxc/default.conf
debootstrap is /sbin/debootstrap
Checking cache download in /usr/local/var/cache/lxc/debian/rootfs-wheezy-i386 ... 
Downloading debian minimal ...
W: Cannot check Release signature; keyring file not available /usr/share/keyrings/debian-archive-keyring.gpg
I: Retrieving Release 
I: Validating Packages 
I: Resolving dependencies of required packages...
I: Resolving dependencies of base packages...
I: Found additional required dependencies: insserv libbz2-1.0 libdb5.1 libsemanage-common libsemanage1 libslang2 libustr-1.0-1 
I: Found additional base dependencies: adduser debian-archive-keyring gnupg gpgv isc-dhcp-common libapt-pkg4.12 libbsd0 libclass-isa-perl libedit2 libgdbm3 libgssapi-krb5-2 libk5crypto3 libkeyutils1 libkrb5-3 libkrb5support0 libncursesw5 libprocps0 libreadline6 libssl1.0.0 libstdc++6 libswitch-perl libusb-0.1-4 libwrap0 openssh-client perl perl-modules procps readline-common 
I: Checking component main on http://cdn.debian.net/debian...
I: Validating libacl1 2.2.51-8
I: Validating adduser 3.113+nmu3
&lt;snip&gt;
I: Unpacking debconf...
I: Unpacking debconf-i18n...
I: Unpacking debianutils...
I: Unpacking diffutils...
I: Unpacking dpkg...
I: Unpacking e2fslibs:i386...
&lt;snip&gt;
I: Configuring apt...
I: Configuring openssh-client...
I: Configuring openssh-server...
I: Configuring perl-modules...
I: Configuring libswitch-perl...
I: Configuring perl...
I: Configuring libui-dialog-perl...
I: Base system installed successfully.
Download complete.
Copying rootfs to /var/lib/lxc/mydebian/rootfs...Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
update-rc.d: using dependency based boot sequencing
update-rc.d: using dependency based boot sequencing
update-rc.d: using dependency based boot sequencing
update-rc.d: using dependency based boot sequencing
Creating SSH2 RSA key; this may take some time ...
Creating SSH2 DSA key; this may take some time ...
Creating SSH2 ECDSA key; this may take some time ...
invoke-rc.d: policy-rc.d denied execution of restart.
Timezone in container is not configured. Adjust it manually.
Root password is 'root', please change !
'debian' template installed
'mydebian' created
[root@vicky ~]# 
</code></pre>

<h4>Booting</h4>

<pre><code>[root@vicky ~]# lxc-start -n mydebian
INIT: version 2.88 booting
Using makefile-style concurrent boot in runlevel S.
Cleaning up temporary files... /tmp /run /run/lock /run/shm.
Mount point '/dev/mqueue' does not exist. Skipping mount. ... (warning).
Mount point '/dev/hugepages' does not exist. Skipping mount. ... (warning).
Mount point '/sys/fs/cgroup/systemd' does not exist. Skipping mount. ... (warning).
Mount point '/sys/fs/cgroup/cpuset' does not exist. Skipping mount. ... (warning).
Mount point '/sys/fs/cgroup/cpu,cpuacct' does not exist. Skipping mount. ... (warning).
Mount point '/sys/fs/cgroup/memory' does not exist. Skipping mount. ... (warning).
Mount point '/sys/fs/cgroup/devices' does not exist. Skipping mount. ... (warning).
Mount point '/sys/fs/cgroup/freezer' does not exist. Skipping mount. ... (warning).
Mount point '/sys/fs/cgroup/net_cls' does not exist. Skipping mount. ... (warning).
Mount point '/sys/fs/cgroup/blkio' does not exist. Skipping mount. ... (warning).
Mount point '/sys/fs/cgroup/perf_event' does not exist. Skipping mount. ... (warning).
Filesystem type 'fuse.gvfsd-fuse' is not supported. Skipping mount. ... (warning).
Mount point '/run/media/staf/VBOXADDITIONS_4.3.12_93733' does not exist. Skipping mount. ... (warning).
Mount point '/var/lib/nfs/rpc_pipefs' does not exist. Skipping mount. ... (warning).
Mount point '/usr/lib/lxc/rootfs' does not exist. Skipping mount. ... (warning).
Mount point '/usr/lib/lxc/rootfs' does not exist. Skipping mount. ... (warning).
Mount point '/dev/console' does not exist. Skipping mount. ... (warning).
Activating lvm and md swap...done.
Checking file systems...fsck from util-linux 2.20.1
done.
Mounting local filesystems...done.

Debian GNU/Linux 7 mydebian console

mydebian login: root
Password: 
Linux mydebian 3.14.8-200.fc20.i686 #1 SMP Mon Jun 21 09:36:56 UTC 2014 i686

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
</code></pre>

<h4>Networking&hellip;.</h4>

<pre><code>root@mydebian:~# ifconfig eth0
eth0      Link encap:Ethernet  HWaddr 00:16:3e:34:d3:02  
          inet addr:192.168.122.198  Bcast:192.168.122.255  Mask:255.255.255.0
          inet6 addr: fe80::216:3eff:fe34:d302/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:32 errors:0 dropped:0 overruns:0 frame:0
          TX packets:13 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:3312 (3.2 KiB)  TX bytes:1806 (1.7 KiB)

root@mydebian:~# ping 8.8.8.8
-bash: ping: command not found
root@mydebian:~# apt-cache search ping | grep util
2ping - Ping utility to determine directional packet loss
galax-extra - XQuery implementation with static typing - utilities
inetutils-ping - ICMP echo tool
iputils-arping - Tool to send ICMP echo requests to an ARP address
iputils-ping - Tools to test the reachability of network hosts
libescape-ruby - HTML/URI/shell escaping utilities for Ruby
mapnik-utils - C++/Python toolkit for developing GIS applications (utilities)
ruby-escape-utils - Faster string escaping routines for your web apps
root@mydebian:~# apt-get install inetutils-ping
Reading package lists... Done
Building dependency tree... Done
The following NEW packages will be installed:
  inetutils-ping
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 169 kB of archives.
After this operation, 273 kB of additional disk space will be used.
WARNING: The following packages cannot be authenticated!
  inetutils-ping
Install these packages without verification [y/N]? y
Get:1 http://cdn.debian.net/debian/ wheezy/main inetutils-ping i386 2:1.9-2 [169 kB]
Fetched 169 kB in 6s (26.4 kB/s)                                               
debconf: delaying package configuration, since apt-utils is not installed
Selecting previously unselected package inetutils-ping.
(Reading database ... 9387 files and directories currently installed.)
Unpacking inetutils-ping (from .../inetutils-ping_2%3a1.9-2_i386.deb) ...
Setting up inetutils-ping (2:1.9-2) ...
root@mydebian:~# ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8): 56 data bytes
64 bytes from 8.8.8.8: icmp_seq=0 ttl=49 time=172.105 ms
64 bytes from 8.8.8.8: icmp_seq=1 ttl=49 time=111.011 ms
^C--- 8.8.8.8 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max/stddev = 111.011/141.558/172.105/30.547 ms
root@mydebian:~# 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora 19 Boottime on an Intel Core I7 4770 With a Samsung 840 Pro Series 256GB Ssd]]></title>
    <link href="https://stafwag.github.io/blog/blog/2013/09/01/fedora-19-boottime-on-an-intel-core-i7-4770-with-an-samsung-840-pro-series-256gb-ssd/"/>
    <updated>2013-09-01T12:21:00+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2013/09/01/fedora-19-boottime-on-an-intel-core-i7-4770-with-an-samsung-840-pro-series-256gb-ssd</id>
    <content type="html"><![CDATA[<p>I installed <a href="http://fedoraproject.org/">fedora 19</a> on <a href="http://stafwag.github.io/blog/blog/2013/08/25/the-benefits-of-stopping-smoking-dot-dot-dot/">my new pc</a> mainly to play with <a href="http://www.ovirt.org/">ovirt</a> which seems to be easier to install on  <a href="http://fedoraproject.org/">fedora</a> than on <a href="http://www.debian.org">Debian</a>.</p>

<p>Don&rsquo;t worry I still have a debian system at hand&hellip;</p>

<p>The boot time on a ssd is fast:</p>

<p><div class="embed-video-container"><iframe src="http://www.youtube.com/embed/V99FyD1qmzg "></iframe></div></p>

<h5>Sun Sep  8 15:30:18 CEST 2013 update;</h5>

<p>I did some tweaking to get a better bootime;</p>

<p>disabled plymouth;</p>

<pre><code># systemctl mask plymouth-.
# dracut -f -H -o plymouth
</code></pre>

<p>replaced firewalld by &ldquo;static&rdquo; iptables;
```</p>

<h1>yum install iptables-services</h1>

<h1>systemctl mask firewalld.service</h1>

<h1>systemctl enable iptables.service</h1>

<h1>systemctl enable ip6tables.service</h1>

<pre><code>
My /home was still on a regular harddisk I move it to the ssd.
</code></pre>

<p>$ systemd-analyze
Startup finished in 687ms (kernel) + 705ms (initrd) + 1.328s (userspace) = 2.721s
$ systemd-analyze blame
           546ms postfix.service
           537ms NetworkManager.service
           508ms accounts-daemon.service
           102ms nfs-lock.service
            62ms proc-fs-nfsd.mount
            59ms polkit.service
            55ms lvm2-monitor.service
            54ms NetworkManager-dispatcher.service
            54ms abrt-ccpp.service
            54ms jexec.service
            53ms udisks2.service
            52ms autofs.service
            49ms var-lib-nfs-rpc_pipefs.mount
            45ms avahi-daemon.service
            43ms colord.service
            41ms systemd-logind.service
            41ms rtkit-daemon.service
            40ms gdm.service
            37ms systemd-fsck-root.service
            33ms systemd-vconsole-setup.service
            32ms fedora-loadmodules.service
            28ms chronyd.service
            28ms systemd-udev-trigger.service
            26ms dev-hugepages.mount
            26ms dev-mqueue.mount
            26ms sys-kernel-debug.mount
            25ms lm_sensors.service
            24ms systemd-fsck@dev-disk-by\x2duuid-16608012\x2d1711\x2d42d7\x2d8652\x2d900e2d22ed40.service
            23ms tmp.mount
            22ms sys-kernel-config.mount
            19ms systemd-user-sessions.service
            16ms systemd-journal-flush.service
            16ms mcelog.service
            15ms proc-sys-fs-binfmt_misc.mount
            14ms bluetooth.service
            12ms systemd-sysctl.service
            12ms systemd-tmpfiles-setup-dev.service
            12ms rpcbind.service
            12ms xinetd.service
             8ms systemd-udevd.service
             7ms fedora-readonly.service
             7ms lvm2-lvmetad.service
             6ms sshd.service
             5ms systemd-readahead-collect.service
             5ms boot.mount
             5ms upower.service
             4ms dev-mapper-fedora_vicky\x2dswap.swap
             4ms systemd-remount-fs.service
             3ms systemd-tmpfiles-setup.service
             3ms systemd-update-utmp-runlevel.service
             2ms auditd.service
             1ms systemd-random-seed-load.service
             1ms systemd-readahead-done.service
             1ms sys-fs-fuse-connections.mount</p>

<p>```</p>

<p>Result:
<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/gp96Tt349DM "></iframe></div></p>
]]></content>
  </entry>
  
</feed>
