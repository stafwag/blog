<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Openstack | stafwag Blog]]></title>
  <link href="https://stafwag.github.io/blog/blog/categories/openstack/atom.xml" rel="self"/>
  <link href="https://stafwag.github.io/blog/"/>
  <updated>2019-05-05T10:55:07+02:00</updated>
  <id>https://stafwag.github.io/blog/</id>
  <author>
    <name><![CDATA[staf wagemakers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Howto Use Centos Cloud Images With Cloud-init on KVM/libvirtd]]></title>
    <link href="https://stafwag.github.io/blog/blog/2019/03/03/howto-use-centos-cloud-images-with-cloud-init/"/>
    <updated>2019-03-03T09:55:55+01:00</updated>
    <id>https://stafwag.github.io/blog/blog/2019/03/03/howto-use-centos-cloud-images-with-cloud-init</id>
    <content type="html"><![CDATA[<h1>Images versus unattended setup</h1>

<h2>Old-school</h2>

<h3>Unattended setup</h3>

<p>In a traditional environment, systems are installed from a CDROM. The configuration is executed by the system administrator through the installer. This soon becomes a borning and unpractical task when we need to set up a lot of systems also it is important  that systems are configured in same - and hopefully correct - way.</p>

<p>In a traditional environment, this can be automated by booting via BOOTP/PXE boot and configured is by a system that &ldquo;feeds&rdquo; the installer. Examples are:</p>

<ul>
<li><a href="https://en.wikipedia.org/wiki/JumpStart_(Solaris">Solaris Jumpstart</a></li>
<li><a href="https://en.wikipedia.org/wiki/Kickstart_(Linux">Redhat Kickstart</a>)</li>
<li><a href="https://wiki.debian.org/DebianInstaller/Preseed">DebianInstaller Preseed</a></li>
<li><a href="https://en.wikipedia.org/wiki/YaST#AutoYaST">Suse Autoyast</a></li>
<li>&hellip;</li>
</ul>


<h2>Cloud &amp; co</h2>

<h3>Cloud-init</h3>

<p>In a cloud environment, we use images to install systems. The system automation is generally done by <a href="https://cloud-init.io/">cloud-init</a>. Cloud-init was originally developed for Ubuntu GNU/Linux on the Amazon EC2 cloud. It has become the de facto installation configuration tool for most Unix like systems on most cloud environments.</p>

<p>Cloud-init uses a YAML file to configure the system.</p>

<h3>Images</h3>

<p>Most GNU/Linux distributions provide images that can be used to provision a new system.
You can find the complete list on the OpenStack website</p>

<p><a href="https://docs.openstack.org/image-guide/obtain-images.html">https://docs.openstack.org/image-guide/obtain-images.html</a></p>

<p>The OpenStack documentation also describes how you can create your own base images in the <a href="https://docs.openstack.org/image-guide/">OpenStack Virtual Machine Image Guide</a></p>

<h1>Use a centos cloud image with libvirtd</h1>

<h2>Download the cloud image</h2>

<h3>Download</h3>

<p>Download the latest &ldquo;GenericCloud&rdquo; centos 7 cloud image and sha256sum.txt.asc sha256sum.txt from:</p>

<p><a href="https://cloud.centos.org/centos/7/images/">https://cloud.centos.org/centos/7/images/</a></p>

<h3>Verify</h3>

<p>You should verify your download - as always against a trusted signing key -</p>

<p>On a centos 7 system, the public gpg is already installed at <code>/etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</code></p>

<h4>Verify the fingerprint</h4>

<p>Execute</p>

<pre><code>staf@centos7 iso]$ gpg --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
pub  4096R/F4A80EB5 2014-06-23 CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;
      Key fingerprint = 6341 AB27 53D7 8A78 A7C2  7BB1 24C6 A8A7 F4A8 0EB5
[staf@centos7 iso]$ gpg --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
</code></pre>

<p>and verify the fingerprint, the fingerprints that are used by centos are listed at:</p>

<p><a href="https://www.centos.org/keys/">https://www.centos.org/keys/</a></p>

<h4>Import key</h4>

<p>Import the pub centos gpg key:</p>

<pre><code>[staf@centos7 iso]$ gpg --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
gpg: key F4A80EB5: public key "CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
[staf@centos7 iso]$ 
</code></pre>

<p>List the trusted gpg key:</p>

<pre><code>staf@centos7 iso]$ gpg --list-keys
/home/staf/.gnupg/pubring.gpg
-----------------------------
pub   4096R/F4A80EB5 2014-06-23
uid                  CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;

[staf@centos7 iso]$ gpg --list-keys
</code></pre>

<h4>Verify the sha256sum file</h4>

<pre><code>[staf@centos7 iso]$ gpg --verify sha256sum.txt.asc
gpg: Signature made Thu 31 Jan 2019 04:28:30 PM CET using RSA key ID F4A80EB5
gpg: Good signature from "CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;"
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 6341 AB27 53D7 8A78 A7C2  7BB1 24C6 A8A7 F4A8 0EB5
[staf@centos7 iso]$ 
</code></pre>

<p>The key fingerprint must match the one of RPM-GPG-KEY-CentOS-7.</p>

<h4>Verify the iso file</h4>

<pre><code>[staf@centos7 iso]$ xz -d CentOS-7-x86_64-GenericCloud-1901.qcow2.xz
[staf@centos7 iso]$ sha256sum -c sha256sum.txt.asc 2&gt;&amp;1 | grep OK
CentOS-7-x86_64-GenericCloud-1901.qcow2: OK
[staf@centos7 iso]$ 
</code></pre>

<h2>Image</h2>

<h3>info</h3>

<p>The image we download is a normal qcow2 image, we can see the image information with <code>qemu-info</code></p>

<pre><code>[root@centos7 iso]# qemu-img info CentOS-7-x86_64-GenericCloud-1901.qcow2
image: CentOS-7-x86_64-GenericCloud-1901.qcow2
file format: qcow2
virtual size: 8.0G (8589934592 bytes)
disk size: 895M
cluster_size: 65536
Format specific information:
    compat: 0.10
[root@centos7 iso]# 
</code></pre>

<h3>Copy &amp; resize</h3>

<p>The default image is small - 8GB - we might be using the image to provision other systems so it better to leave it untouched.</p>

<p>Copy the image to the location where we&rsquo;ll run the virtual system.</p>

<pre><code>[root@centos7 iso]# cp -v CentOS-7-x86_64-GenericCloud-1901.qcow2 /var/lib/libvirt/images/tst/tst.qcow2
'CentOS-7-x86_64-GenericCloud-1901.qcow2' -&gt; '/var/lib/libvirt/images/tst/tst.qcow2'
[root@centos7 iso]# 
</code></pre>

<p>and resize it to the required size:</p>

<pre><code>[root@centos7 iso]# cd /var/lib/libvirt/images/tst
[root@centos7 tst]# qemu-img resize tst.qcow2 20G
Image resized.
[root@centos7 tst]# 
</code></pre>

<h2>cloud-init</h2>

<p>We&rsquo;ll create a simple cloud-init configuration file and generate an iso image with <code>cloud-localds</code>. This iso image holds the cloud-init configuration and will be used to setup the system during the bootstrap.</p>

<h3>Install cloud-utils</h3>

<p><span style="color:red"><strong> It&rsquo;s important to NOT install cloud-init on your KVM host machine. </strong></span> This creates a cloud-init service that runs during the boot and tries to reconfigure your host. Something that you probably don&rsquo;t want on your KVM hypervisor host.</p>

<p>The cloud-util package has all the tool we need to convert the cloud-init configuration files to an iso image.</p>

<pre><code>[root@centos7 tst]# yum install -y cloud-utils
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: centos.cu.be
 * extras: centos.cu.be
 * updates: centos.mirror.ate.info
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package cloud-utils.x86_64 0:0.27-20.el7.centos will be installed
--&gt; Processing Dependency: python-paramiko for package: cloud-utils-0.27-20.el7.centos.x86_64
--&gt; Processing Dependency: euca2ools for package: cloud-utils-0.27-20.el7.centos.x86_64
--&gt; Processing Dependency: cloud-utils-growpart for package: cloud-utils-0.27-20.el7.centos.x86_64
--&gt; Running transaction check
---&gt; Package cloud-utils-growpart.noarch 0:0.29-2.el7 will be installed
---&gt; Package euca2ools.noarch 0:2.1.4-1.el7.centos will be installed
--&gt; Processing Dependency: python-boto &gt;= 2.13.3-1 for package: euca2ools-2.1.4-1.el7.centos.noarch
--&gt; Processing Dependency: m2crypto for package: euca2ools-2.1.4-1.el7.centos.noarch
---&gt; Package python-paramiko.noarch 0:2.1.1-9.el7 will be installed
--&gt; Running transaction check
---&gt; Package m2crypto.x86_64 0:0.21.1-17.el7 will be installed
---&gt; Package python-boto.noarch 0:2.25.0-2.el7.centos will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

=======================================================================================
 Package                    Arch         Version                   Repository     Size
=======================================================================================
Installing:
 cloud-utils                x86_64       0.27-20.el7.centos        extras         43 k
Installing for dependencies:
 cloud-utils-growpart       noarch       0.29-2.el7                base           26 k
 euca2ools                  noarch       2.1.4-1.el7.centos        extras        319 k
 m2crypto                   x86_64       0.21.1-17.el7             base          429 k
 python-boto                noarch       2.25.0-2.el7.centos       extras        1.5 M
 python-paramiko            noarch       2.1.1-9.el7               updates       269 k

Transaction Summary
=======================================================================================
Install  1 Package (+5 Dependent packages)

Total download size: 2.5 M
Installed size: 12 M
Downloading packages:
(1/6): cloud-utils-growpart-0.29-2.el7.noarch.rpm               |  26 kB  00:00:01     
(2/6): cloud-utils-0.27-20.el7.centos.x86_64.rpm                |  43 kB  00:00:01     
(3/6): euca2ools-2.1.4-1.el7.centos.noarch.rpm                  | 319 kB  00:00:01     
(4/6): m2crypto-0.21.1-17.el7.x86_64.rpm                        | 429 kB  00:00:01     
(5/6): python-boto-2.25.0-2.el7.centos.noarch.rpm               | 1.5 MB  00:00:02     
(6/6): python-paramiko-2.1.1-9.el7.noarch.rpm                   | 269 kB  00:00:03     
---------------------------------------------------------------------------------------
Total                                                     495 kB/s | 2.5 MB  00:05     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : python-boto-2.25.0-2.el7.centos.noarch                              1/6 
  Installing : python-paramiko-2.1.1-9.el7.noarch                                  2/6 
  Installing : cloud-utils-growpart-0.29-2.el7.noarch                              3/6 
  Installing : m2crypto-0.21.1-17.el7.x86_64                                       4/6 
  Installing : euca2ools-2.1.4-1.el7.centos.noarch                                 5/6 
  Installing : cloud-utils-0.27-20.el7.centos.x86_64                               6/6 
  Verifying  : m2crypto-0.21.1-17.el7.x86_64                                       1/6 
  Verifying  : cloud-utils-growpart-0.29-2.el7.noarch                              2/6 
  Verifying  : python-paramiko-2.1.1-9.el7.noarch                                  3/6 
  Verifying  : python-boto-2.25.0-2.el7.centos.noarch                              4/6 
  Verifying  : euca2ools-2.1.4-1.el7.centos.noarch                                 5/6 
  Verifying  : cloud-utils-0.27-20.el7.centos.x86_64                               6/6 

Installed:
  cloud-utils.x86_64 0:0.27-20.el7.centos                                                                                                                                     

Dependency Installed:
  cloud-utils-growpart.noarch 0:0.29-2.el7      euca2ools.noarch 0:2.1.4-1.el7.centos      m2crypto.x86_64 0:0.21.1-17.el7      python-boto.noarch 0:2.25.0-2.el7.centos     
  python-paramiko.noarch 0:2.1.1-9.el7         

Complete!
[root@centos7 tst]# 
</code></pre>

<h3>Cloud-init configuration</h3>

<p>A complete overview of cloud-init configuration directives is available at <a href="https://cloudinit.readthedocs.io/en/latest/">https://cloudinit.readthedocs.io/en/latest/</a>.</p>

<p>We&rsquo;ll create a cloud-init configuration file to update all the packages - which is always a good idea - and to add a user to the system.</p>

<p>A cloud-init configuration file has to start with <code>#cloud-config</code>, remember this is YAML so only use spaces&hellip;</p>

<p>We&rsquo;ll create a password hash that we&rsquo;ll put into your cloud-init configuration, it&rsquo;s also possible to use a plain-text password in the configuration with <code>chpasswd</code> or to set the password for the default user. But it&rsquo;s better to use a hash so nobody can see the password. Keep in mind that is still possible to brute-force the password hash.</p>

<p>Some GNU/Linux distributions have the <code>mkpasswd</code> utility this is not available on centos. The <code>mkpasswd</code> utility is part of the <code>expect</code> package and is something else&hellip;</p>

<p>I used a python one-liner to generate the SHA512 password hash</p>

<pre><code>python -c 'import crypt,getpass; print(crypt.crypt(getpass.getpass(), crypt.mksalt(crypt.METHOD_SHA512)))'
</code></pre>

<p>Execute the one-liner and type in your password:</p>

<pre><code>[staf@centos7 ~]$ python -c 'import crypt,getpass; print(crypt.crypt(getpass.getpass(), crypt.mksalt(crypt.METHOD_SHA512)))'
Password: 
&lt;your hash&gt;
[staf@centos7 ~]$ 
</code></pre>

<p>Create config.yaml - replace <code>&lt;your_user&gt;</code>, <code>&lt;your_hash&gt;</code>, <code>&lt;your_ssh_pub_key&gt;</code> -  with your data:</p>

<pre><code>#cloud-config
package_upgrade: true
users:
  - name: &lt;your_user&gt;
    groups: wheel
    lock_passwd: false
    passwd: &lt;your_passord_hash&gt;
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    ssh-authorized-keys:
      - &lt;your_public_ssh_key&gt;
</code></pre>

<p>And generate the configuration iso image:</p>

<pre><code>root@centos7 tst]# cloud-localds config.iso config.yaml
wrote config.iso with filesystem=iso9660 and diskformat=raw
[root@centos7 tst]# 
</code></pre>

<h3>Create the virtual system</h3>

<p>Libvirt has predefined definitions for operating systems. You can query the predefined operation systems with the <code>osinfo-query os</code> command.</p>

<p>We use centos 7, we use <code>osinfo-query os</code> to find the correct definition.</p>

<pre><code>[root@centos7 tst]# osinfo-query  os | grep -i centos7
 centos7.0            | CentOS 7.0                                         | 7.0      | http://centos.org/centos/7.0            
[root@centos7 tst]# 
</code></pre>

<p>Create the virtual system:</p>

<pre><code>virt-install \
  --memory 2048 \
  --vcpus 2 \
  --name tst \
  --disk /var/lib/libvirt/images/tst/tst.qcow2,device=disk \
  --disk /var/lib/libvirt/images/tst/config.iso,device=cdrom \
  --os-type Linux \
  --os-variant centos7.0 \
  --virt-type kvm \
  --graphics none \
  --network default \
  --import
</code></pre>

<p>The default escape key - to get out the console is ^[  ( Ctrl + [ )</p>

<p><strong><em> Have fun! </em></strong></p>

<h1>Links</h1>

<ul>
<li><a href="https://wiki.centos.org/Download/Verify">https://wiki.centos.org/Download/Verify</a></li>
<li><a href="https://www.theurbanpenguin.com/using-cloud-images-in-kvm/">https://www.theurbanpenguin.com/using-cloud-images-in-kvm/</a></li>
<li><a href="https://docs.openstack.org/image-guide/">https://docs.openstack.org/image-guide/</a></li>
<li><a href="https://unix.stackexchange.com/questions/52108/how-to-create-sha512-password-hashes-on-command-line#76337">https://unix.stackexchange.com/questions/52108/how-to-create-sha512-password-hashes-on-command-line#76337</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up OpenStack-Ansible All-In-One on a Centos 7 System]]></title>
    <link href="https://stafwag.github.io/blog/blog/2019/01/21/settinp-up-openstack-ansible-all-in-one-on-a-centos-7-system/"/>
    <updated>2019-01-21T19:51:32+01:00</updated>
    <id>https://stafwag.github.io/blog/blog/2019/01/21/settinp-up-openstack-ansible-all-in-one-on-a-centos-7-system</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/openstack-logo.png" width="150" height="150" title="&ldquo;openstack-logo&rdquo;" ></p>

<p><a href="https://www.openstack.org/">Openstack</a> is a nice platform to deploy <a href="https://en.wikipedia.org/wiki/Cloud_computing#Infrastructure_as_a_service_.28IaaS.29">an Infrastructure as a service</a> and is a <a href="https://governance.openstack.org/tc/reference/projects/index.html">collection of projects</a> but it can be a bit difficult to setup. <a href="https://docs.openstack.org">The documentation</a> is really great if you want to setup openstack by hand and there are a few openstack distributions that makes it easier to install it.</p>

<p><a href="https://www.ansible.org">Ansible</a> is a very nice tool for system automatisation and is one that&rsquo;s easier to learn.</p>

<p><img class="left" src="/images/ansible-logo-red-t.png" width="150" height="150" title="&ldquo;ansible-logo-red&rdquo;" ></p>

<p>Wouldn&rsquo;t be nice if we could make the openstack installation easier with ansible? That&rsquo;s exactly what <a href="https://github.com/openstack/openstack-ansible">Openstack-Ansible</a>
 does.</p>

<p>In this blog post we&rsquo;ll setup <a href="https://docs.openstack.org/openstack-ansible/latest/user/aio/quickstart.html">&ldquo;an all-in-one&rdquo; openstack installation</a> on <a href="https://www.centos.org">Centos 7</a>. The installer will install openstack into <a href="https://linuxcontainers.org/">lxc containers</a> and it&rsquo;s nice way to learn how openstack works and how to operate it.</p>

<h1>Preparation</h1>

<h2>System requirements</h2>

<p>I use a Centos 7 virtual system running as a <a href="https://www.linux-kvm.org">KVM</a> instance with <a href="http://stafwag.github.io/blog/blog/2018/06/04/nested-virtualization-in-kvm/">nested KVM virtualasation enabled</a>. The system requiremensts
The minimun requiremenst are:</p>

<ul>
<li>8 CPU cores</li>
<li>50 GB of free diskspace</li>
<li>8GB RAM</li>
</ul>


<h2>update &hellip;.</h2>

<p>Make sure that your system is up-to-update</p>

<pre><code>[staf@openstack ~]$ sudo yum update -y

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for staf: 
Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
 * base: distrib-coffee.ipsl.jussieu.fr
 * extras: mirror.in2p3.fr
 * updates: centos.mirror.fr.planethoster.net
base                                                                                                                                    | 3.6 kB  00:00:00     
extras                                                                                                                                  | 3.4 kB  00:00:00     
updates                                                                                                                                 | 3.4 kB  00:00:00     
No packages marked for update
[staf@openstack ~]$ 
</code></pre>

<h2>Install git</h2>

<p>We&rsquo;ll need git to install the ansible playbooks and the Openstack-Ansible installation scripts.</p>

<pre><code>[staf@openstack ~]$ yum install git
Loaded plugins: fastestmirror
You need to be root to perform this command.
[staf@openstack ~]$ sudo yum install git
Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
 * base: mirror.in2p3.fr
 * extras: mirror.in2p3.fr
 * updates: centos.mirror.fr.planethoster.net
Package git-1.8.3.1-20.el7.x86_64 already installed and latest version
Nothing to do
[staf@openstack ~]$ 
</code></pre>

<h2>Ansible&hellip;.</h2>

<p>This is a bit of a pitfail&hellip; The Openstack-Ansible bootstrap script will download and install his own version of ansible and create a link to <code>/usr/local/bin</code>. So <code>/usr/local/bin</code> must be in your $PATH.  Ansible shouldn&rsquo;t be installed on your system or if it is installed  it shouln&rsquo;t be executed instead of the ansible version that is builded with Openstack-Ansible.</p>

<p>On most GNU/Linux distributions have <code>/usr/local/bin</code> and <code>/usr/local/sbin</code>  is in the $PATH but not on centos, so we&rsquo;ll need to add it.</p>

<h3>Make sure that ansible insn&rsquo;t installed</h3>

<pre><code>[staf@openstack ~]$ sudo rpm -qa | grep -i ansible
[sudo] password for staf: 
[staf@openstack ~]$ 
</code></pre>

<h3>Update your $PATH</h3>

<pre><code>[root@openstack ~]# export PATH=/usr/local/bin:$PATH
</code></pre>

<p>If you want to have <code>/usr/local/bin</code> in your $PATH  update <code>/etc/profile</code>  or <code>$HOME/.profile</code></p>

<h2>ssh password authentication</h2>

<p>The ansibe playbooks will disable <code>PasswordAuthentication</code>, make sure that you login with a ssh key. - Password authentication is obsolete anyway -</p>

<h2>firewalld</h2>

<p>Firewall is enabled on Centos by default, the default iptables rules prevent communication between the openstack containers.</p>

<h3>stop and disable firewalld</h3>

<pre><code>[root@openstack ~]# systemctl stop firewalld
[root@openstack ~]# systemctl disable firewalld
Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.
Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.
</code></pre>

<h3>verify</h3>

<pre><code>root@openstack ~]# iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination         

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination         

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination         
[root@openstack ~]# 
</code></pre>

<h1>Openstack installation</h1>

<p>The installation will take some time therefor it&rsquo;s recommended to use an session manager like <a href="https://github.com/tmux/tmux/">tmux</a> or <a href="https://www.gnu.org/software/screen/">GNU screen</a></p>

<h2>Bootstrap</h2>

<h3>git clone</h3>

<p>clone the <a href="https://git.openstack.org/openstack/openstack-ansible">openstack-ansible git repo</a></p>

<pre><code>[root@openstack ~]# git clone https://git.openstack.org/openstack/openstack-ansible /opt/openstack-ansible
Cloning into '/opt/openstack-ansible'...
remote: Counting objects: 67055, done.
remote: Compressing objects: 100% (32165/32165), done.
remote: Total 67055 (delta 45474), reused 52564 (delta 32073)
Receiving objects: 100% (67055/67055), 14.60 MiB | 720.00 KiB/s, done.
Resolving deltas: 100% (45474/45474), done.
[root@openstack ~]# 
</code></pre>

<pre><code>[root@openstack ~]# cd /opt/openstack-ansible
[root@openstack openstack-ansible]# 
</code></pre>

<h3>choose you Openstack releases</h3>

<p>Openstack has release shedule about every 6 months the current stable release is <a href="https://releases.openstack.org/rocky/index.html">Rocky</a>. Every Openstack release has his own branch in the git repo. Each Openstack-Ansible release is tagged in the git repo. So either you&rsquo;ll need checkout Openstack-Ansible release tag or the bracnh. We&rsquo;ll checkout the Rocky branch.</p>

<h4>get the list of branches</h4>

<pre><code>[root@openstack openstack-ansible]# git branch -a
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
  remotes/origin/stable/ocata
  remotes/origin/stable/pike
  remotes/origin/stable/queens
  remotes/origin/stable/rocky
[root@openstack openstack-ansible]# 
</code></pre>

<h5>checkout the branch</h5>

<pre><code>[root@openstack openstack-ansible]# git checkout stable/rocky
Branch stable/rocky set up to track remote branch stable/rocky from origin.
Switched to a new branch 'stable/rocky'
[root@openstack openstack-ansible]# 
</code></pre>

<h3>Bootstrap ansible</h3>

<p>Execute <code>scripts/bootstrap-ansible.sh</code> this will install the required packages and ansible playbooks.</p>

<pre><code>[root@openstack openstack-ansible]# scripts/bootstrap-ansible.sh
+ export HTTP_PROXY=
+ HTTP_PROXY=
+ export HTTPS_PROXY=
+ HTTPS_PROXY=
+ export ANSIBLE_PACKAGE=ansible==2.5.14
+ ANSIBLE_PACKAGE=ansible==2.5.14
+ export ANSIBLE_ROLE_FILE=ansible-role-requirements.yml
+ ANSIBLE_ROLE_FILE=ansible-role-requirements.yml
+ export SSH_DIR=/root/.ssh
+ SSH_DIR=/root/.ssh
+ export DEBIAN_FRONTEND=noninteractive
+ DEBIAN_FRONTEND=noninteractive
&lt;SNIP&gt;
+ unset ANSIBLE_LIBRARY
+ unset ANSIBLE_LOOKUP_PLUGINS
+ unset ANSIBLE_FILTER_PLUGINS
+ unset ANSIBLE_ACTION_PLUGINS
+ unset ANSIBLE_CALLBACK_PLUGINS
+ unset ANSIBLE_CALLBACK_WHITELIST
+ unset ANSIBLE_TEST_PLUGINS
+ unset ANSIBLE_VARS_PLUGINS
+ unset ANSIBLE_STRATEGY_PLUGINS
+ unset ANSIBLE_CONFIG
+ '[' false == true ']'
+ echo 'System is bootstrapped and ready for use.'
System is bootstrapped and ready for use.
[root@openstack openstack-ansible]# 
</code></pre>

<h4>Verify</h4>

<p> <code>scripts/bootstrap-ansible</code> created <code>/opt/ansible-runtime</code> and create amd updated <code>//usr/local/bin</code> with a few links.</p>

<pre><code>[root@openstack openstack-ansible]# ls -ld /opt/*
drwxr-xr-x.  5 root root   56 Jan 12 11:42 /opt/ansible-runtime
drwxr-xr-x. 14 root root 4096 Jan 12 11:43 /opt/openstack-ansible
[root@openstack openstack-ansible]# ls -ltr /usr/local/bin/
total 8
lrwxrwxrwx. 1 root root   32 Jan 12 11:43 ansible -&gt; /usr/local/bin/openstack-ansible
lrwxrwxrwx. 1 root root   39 Jan 12 11:43 ansible-config -&gt; /opt/ansible-runtime/bin/ansible-config
lrwxrwxrwx. 1 root root   43 Jan 12 11:43 ansible-connection -&gt; /opt/ansible-runtime/bin/ansible-connection
lrwxrwxrwx. 1 root root   40 Jan 12 11:43 ansible-console -&gt; /opt/ansible-runtime/bin/ansible-console
lrwxrwxrwx. 1 root root   39 Jan 12 11:43 ansible-galaxy -&gt; /opt/ansible-runtime/bin/ansible-galaxy
lrwxrwxrwx. 1 root root   36 Jan 12 11:43 ansible-doc -&gt; /opt/ansible-runtime/bin/ansible-doc
lrwxrwxrwx. 1 root root   42 Jan 12 11:43 ansible-inventory -&gt; /opt/ansible-runtime/bin/ansible-inventory
lrwxrwxrwx. 1 root root   32 Jan 12 11:43 ansible-playbook -&gt; /usr/local/bin/openstack-ansible
lrwxrwxrwx. 1 root root   37 Jan 12 11:43 ansible-pull -&gt; /opt/ansible-runtime/bin/ansible-pull
lrwxrwxrwx. 1 root root   38 Jan 12 11:43 ansible-vault -&gt; /opt/ansible-runtime/bin/ansible-vault
-rw-r--r--. 1 root root 3169 Jan 12 11:43 openstack-ansible.rc
-rwxr-xr-x. 1 root root 2638 Jan 12 11:43 openstack-ansible
</code></pre>

<p>Verify that ansible command is one that&rsquo;s installed bu the Openstack-Ansible bootstrap script.</p>

<pre><code>[root@openstack openstack-ansible]# which ansible
/usr/local/bin/ansible
</code></pre>

<h3>Bootstrap AIO</h3>

<pre><code>[root@openstack openstack-ansible]# scripts/bootstrap-aio.sh
+ export BOOTSTRAP_OPTS=
+ BOOTSTRAP_OPTS=
+++ dirname scripts/bootstrap-aio.sh
++ readlink -f scripts/..
+ export OSA_CLONE_DIR=/opt/openstack-ansible
TASK [Gathering Facts] *****************************************************************************************************
ok: [localhost]

TASK [sshd : Set OS dependent variables] ***********************************************************************************
ok: [localhost] =&gt; (item=/etc/ansible/roles/sshd/vars/RedHat_7.yml)

TASK [sshd : OS is supported] **********************************************************************************************
ok: [localhost] =&gt; {
    "changed": false, 
    "msg": "All assertions passed"
}

TASK [sshd : Install ssh packages] 
&lt;SNIP&gt;
EXIT NOTICE [Playbook execution success] **************************************
===============================================================================
+ popd
/opt/openstack-ansible
+ unset ANSIBLE_INVENTORY
+ unset ANSIBLE_VARS_PLUGINS
+ unset HOST_VARS_PATH
+ unset GROUP_VARS_PATH
[root@openstack openstack-ansible]# 
</code></pre>

<h3>Run the playbooks</h3>

<p>We&rsquo;ll to run a few playbooks to setup the containers and our Openstack environment.</p>

<p>Move to the openstack-ansible playbook directory.</p>

<pre><code>[root@aio1 ~]# cd /opt/openstack-ansible/playbooks/
[root@aio1 playbooks]# pwd
/opt/openstack-ansible/playbooks
[root@aio1 playbooks]# 
</code></pre>

<p>and exexcute the playbooks.</p>

<pre><code>[root@openstack playbooks]# openstack-ansible setup-hosts.yml
[root@openstack playbooks]# openstack-ansible setup-infrastructure.yml
[root@aio1 playbooks]# openstack-ansible setup-openstack.yml
</code></pre>

<p>If all goes well your openstack installation is completed.</p>

<p>You can verify the openstack containers with <code>lxc-ls</code></p>

<pre><code>[root@aio1 playbooks]# lxc-ls --fancy
NAME                                   STATE   AUTOSTART GROUPS            IPV4                                           IPV6 
aio1_cinder_api_container-c211b759     RUNNING 1         onboot, openstack 10.255.255.43, 172.29.237.244, 172.29.244.190  -    
aio1_galera_container-9a90cbd9         RUNNING 1         onboot, openstack 10.255.255.50, 172.29.239.126                  -    
aio1_glance_container-c05aab79         RUNNING 1         onboot, openstack 10.255.255.218, 172.29.236.160, 172.29.247.238 -    
aio1_horizon_container-81943ba2        RUNNING 1         onboot, openstack 10.255.255.160, 172.29.237.37                  -    
aio1_keystone_container-a5859104       RUNNING 1         onboot, openstack 10.255.255.40, 172.29.236.95                   -    
aio1_memcached_container-ab998d0e      RUNNING 1         onboot, openstack 10.255.255.175, 172.29.239.49                  -    
aio1_neutron_server_container-439aeb90 RUNNING 1         onboot, openstack 10.255.255.137, 172.29.239.13                  -    
aio1_nova_api_container-c83e5ef0       RUNNING 1         onboot, openstack 10.255.255.216, 172.29.236.52                  -    
aio1_rabbit_mq_container-4fd792fb      RUNNING 1         onboot, openstack 10.255.255.2, 172.29.239.62                    -    
aio1_repo_container-b39d88a1           RUNNING 1         onboot, openstack 10.255.255.227, 172.29.237.146                 -    
aio1_utility_container-fff0b6df        RUNNING 1         onboot, openstack 10.255.255.117, 172.29.237.82                  -    
[root@aio1 playbooks]# 
</code></pre>

<h3>Find the correct ip address</h3>

<p>You should see horizon running with netstat</p>

<pre><code>[root@aio1 ~]# netstat -pan | grep -i 443
tcp        0      0 172.29.236.100:443      0.0.0.0:*               LISTEN      12908/haproxy       
tcp        0      0 192.168.122.23:443      0.0.0.0:*               LISTEN      12908/haproxy       
unix  3      [ ]         STREAM     CONNECTED     73443    31134/tmux           
unix  2      [ ]         DGRAM                    1244303  23435/rsyslogd       
[root@aio1 ~]# 
</code></pre>

<h2>Logon to the openstack GUI (Horizon)</h2>

<h3>Password&hellip;</h3>

<pre><code>[root@aio1 ~]# grep keystone_auth_admin_password /etc/openstack_deploy/user_secrets.yml
</code></pre>

<p><img class="center" src="/images/openstack-ansible-aio-login.png" width="782" height="723" title="&ldquo;openstack-ansible-aio-login.png&rdquo;" ></p>

<p><strong><em> Have fun </em></strong></p>

<h1>Links</h1>

<ul>
<li><a href="https://docs.openstack.org/openstack-ansible/latest/user/aio/quickstart.html">https://docs.openstack.org/openstack-ansible/latest/user/aio/quickstart.html</a></li>
<li><a href="https://docs.openstack.org/project-deploy-guide/openstack-ansible/queens/deploymenthost.html">https://docs.openstack.org/project-deploy-guide/openstack-ansible/queens/deploymenthost.html</a></li>
<li><a href="https://bugs.launchpad.net/openstack-ansible/+bug/1792050">https://bugs.launchpad.net/openstack-ansible/+bug/1792050</a></li>
<li><a href="https://docs.openstack.org/openstack-ansible-security/latest/auto_controls-all.html">https://docs.openstack.org/openstack-ansible-security/latest/auto_controls-all.html</a></li>
<li><a href="https://blog.christophersmart.com/2016/08/09/setting-up-openstack-ansible-all-in-one-behind-a-proxy/">https://blog.christophersmart.com/2016/08/09/setting-up-openstack-ansible-all-in-one-behind-a-proxy/</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
