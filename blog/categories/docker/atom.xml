<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Docker | stafwag Blog]]></title>
  <link href="https://stafwag.github.io/blog/blog/categories/docker/atom.xml" rel="self"/>
  <link href="https://stafwag.github.io/blog/"/>
  <updated>2019-05-12T09:59:28+02:00</updated>
  <id>https://stafwag.github.io/blog/</id>
  <author>
    <name><![CDATA[staf wagemakers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building Your Own Docker Base Images (Part 3: Yum)]]></title>
    <link href="https://stafwag.github.io/blog/blog/2019/05/12/building-your-own-docker-base-images-part-3-yum/"/>
    <updated>2019-05-12T10:06:11+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2019/05/12/building-your-own-docker-base-images-part-3-yum</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/fedora_logo_small.png" width="140" height="140" title="&ldquo;fedora_logo_small.png&rdquo;" ></p>

<p>In my previous two posts (<a href="https://stafwag.github.io/blog/blog/2019/04/22/building-your-own-docker-images_part1/">1</a>,
<a href="https://stafwag.github.io/blog/blog/2019/04/22/building-your-own-docker-images_part1/">2</a> ), we created Docker <a href="https://www.debian.org/">Debian</a> and
 <a href="https://www.archlinux.org/">Arch</a>-based images from scratch for the <a href="https://en.wikipedia.org/wiki/Intel_80386">i386 architecture</a>.</p>

<p>In this blog post - last one in this series - we&rsquo;ll do the same for <a href="https://en.wikipedia.org/wiki/Yum_(software)">yum</a> based distributions like <a href="https://www.centos.org/">CentOS</a> and <a href="https://getfedora.org/">Fedora</a>.</p>

<p>Building your own Docker base images isn&rsquo;t difficult and let you trust your distribution Gpg signing keys instead of the <a href="https://hub.docker.com/">docker hub</a>. As explained in <a href="http://stafwag.github.io/blog/blog/2019/04/22/building-your-own-docker-images_part1/">the first blog post</a>. The mkimage scripts in the contrib directory of the <a href="https://mobyproject.org/">Moby project</a> git repository is a good place to start if you want to build own docker images.</p>

<p><img class="left" src="/images/centos_logo_small.png" width="267" height="79" title="&ldquo;centos_logo_small.png&rdquo;" ></p>

<p>Fedora is one of the GNU/Linux distributions that supports 32 bits systems. Centos has a <a href="https://wiki.centos.org/SpecialInterestGroup">Special Interest Groups</a>
 to support <a href="https://wiki.centos.org/SpecialInterestGroup/AltArch">alternative architectures</a>.
 <a href="https://wiki.centos.org/SpecialInterestGroup/AltArch">The Alternative Architecture SIG</a> create installation images for power, i386, armhfp (arm v732 bits)
 and aarch64 (arm v8 64-bit).</p>

<h1>Centos</h1>

<p>In this blog post, we will create centos based docker images. The procedure to create Fedora images is the same.</p>

<h2>Clone moby</h2>

<pre><code>staf@centos386 github]$ git clone https://github.com/moby/moby
Cloning into 'moby'...
remote: Enumerating objects: 7, done.
remote: Counting objects: 100% (7/7), done.
remote: Compressing objects: 100% (7/7), done.
remote: Total 269517 (delta 0), reused 1 (delta 0), pack-reused 269510
Receiving objects: 100% (269517/269517), 139.16 MiB | 3.07 MiB/s, done.
Resolving deltas: 100% (182765/182765), done.
[staf@centos386 github]$ 
</code></pre>

<h2>Go to the contrib directory</h2>

<pre><code>[staf@centos386 github]$ cd moby/contrib/
[staf@centos386 contrib]$ 
</code></pre>

<h2>mkimage-yum.sh</h2>

<p>When you run <code>mkimage-yum.sh</code> you get the usage message.</p>

<pre><code>[staf@centos386 contrib]$ ./mkimage-yum.sh 
mkimage-yum.sh [OPTIONS] &lt;name&gt;
OPTIONS:
  -p "&lt;packages&gt;"  The list of packages to install in the container.
                   The default is blank. Can use multiple times.
  -g "&lt;groups&gt;"    The groups of packages to install in the container.
                   The default is "Core". Can use multiple times.
  -y &lt;yumconf&gt;     The path to the yum config to install packages from. The
                   default is /etc/yum.conf for Centos/RHEL and /etc/dnf/dnf.conf for Fedora
  -t &lt;tag&gt;         Specify Tag information.
                   default is reffered at /etc/{redhat,system}-release
[staf@centos386 contrib]$
</code></pre>

<h2>build the image</h2>

<p>The <code>mkimage-yum.sh</code> script will use /etc/yum.conf or /etc/dnf.conf to build the image. <code>mkimage-yum.sh &lt;name&gt;</code> will create the image with name.</p>

<pre><code>[staf@centos386 contrib]$ sudo ./mkimage-yum.sh centos
[sudo] password for staf: 
+ mkdir -m 755 /tmp/mkimage-yum.sh.LeZQNh/dev
+ mknod -m 600 /tmp/mkimage-yum.sh.LeZQNh/dev/console c 5 1
+ mknod -m 600 /tmp/mkimage-yum.sh.LeZQNh/dev/initctl p
+ mknod -m 666 /tmp/mkimage-yum.sh.LeZQNh/dev/full c 1 7
+ mknod -m 666 /tmp/mkimage-yum.sh.LeZQNh/dev/null c 1 3
+ mknod -m 666 /tmp/mkimage-yum.sh.LeZQNh/dev/ptmx c 5 2
+ mknod -m 666 /tmp/mkimage-yum.sh.LeZQNh/dev/random c 1 8
+ mknod -m 666 /tmp/mkimage-yum.sh.LeZQNh/dev/tty c 5 0
+ mknod -m 666 /tmp/mkimage-yum.sh.LeZQNh/dev/tty0 c 4 0
+ mknod -m 666 /tmp/mkimage-yum.sh.LeZQNh/dev/urandom c 1 9
+ mknod -m 666 /tmp/mkimage-yum.sh.LeZQNh/dev/zero c 1 5
+ '[' -d /etc/yum/vars ']'
+ mkdir -p -m 755 /tmp/mkimage-yum.sh.LeZQNh/etc/yum
+ cp -a /etc/yum/vars /tmp/mkimage-yum.sh.LeZQNh/etc/yum/
+ [[ -n Core ]]
+ yum -c /etc/yum.conf --installroot=/tmp/mkimage-yum.sh.LeZQNh --releasever=/ --setopt=tsflags=nodocs --setopt=group_package_types=mandatory -y groupinstall Core
Loaded plugins: fastestmirror, langpacks
There is no installed groups file.
Maybe run: yum groups mark convert (see man yum)
&lt;snip&gt;
+ tar --numeric-owner -c -C /tmp/mkimage-yum.sh.LeZQNh .
+ docker import - centos:7.6.1810
sha256:7cdb02046bff4c5065de670604fb3252b1221c4853cb4a905ca04488f44f52a8
+ docker run -i -t --rm centos:7.6.1810 /bin/bash -c 'echo success'
success
+ rm -rf /tmp/mkimage-yum.sh.LeZQNh
[staf@centos386 contrib]$
</code></pre>

<h2>Rename</h2>

<p>A new image is created with the name centos.</p>

<pre><code>[staf@centos386 contrib]$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
centos              7.6.1810            7cdb02046bff        3 minutes ago       281 MB
[staf@centos386 contrib]$ 
</code></pre>

<p>You might want to rename to include your name or project name. You can do this by retag the image and remove the old image name.</p>

<pre><code>[staf@centos386 contrib]$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
centos              7.6.1810            7cdb02046bff        20 seconds ago      281 MB
[staf@centos386 contrib]$ docker rmi centos
Error response from daemon: No such image: centos:latest
[staf@centos386 contrib]$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
centos              7.6.1810            7cdb02046bff        3 minutes ago       281 MB
[staf@centos386 contrib]$ docker tag 7cdb02046bff stafwag/centos_386:7.6.1810 
[staf@centos386 contrib]$ docker images
REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE
centos               7.6.1810            7cdb02046bff        7 minutes ago       281 MB
stafwag/centos_386   7.6.1810            7cdb02046bff        7 minutes ago       281 MB
[staf@centos386 contrib]$ docker rmi centos:7.6.1810
Untagged: centos:7.6.1810
[staf@centos386 contrib]$ docker images
REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE
stafwag/centos_386   7.6.1810            7cdb02046bff        8 minutes ago       281 MB
[staf@centos386 contrib]$ 
</code></pre>

<h2>Test</h2>

<pre><code>[staf@centos386 contrib]$ docker run -it --rm stafwag/centos_386:7.6.1810 /bin/sh
sh-4.2# yum update -y
Loaded plugins: fastestmirror
Determining fastest mirrors
 * base: mirror.usenet.farm
 * extras: mirror.usenet.farm
 * updates: mirror.usenet.farm
base                                                                                                                   | 3.6 kB  00:00:00     
extras                                                                                                                 | 2.9 kB  00:00:00     
updates                                                                                                                | 2.9 kB  00:00:00     
(1/4): updates/7/i386/primary_db                                                                                       | 2.5 MB  00:00:00     
(2/4): extras/7/i386/primary_db                                                                                        | 157 kB  00:00:01     
(3/4): base/7/i386/group_gz                                                                                            | 166 kB  00:00:01     
(4/4): base/7/i386/primary_db                                                                                          | 4.6 MB  00:00:02     
No packages marked for update
sh-4.2# 
</code></pre>

<p><strong><em> Have fun! </em></strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building Your Own Docker Images (Part2: Arch GNU/Linux & Co)]]></title>
    <link href="https://stafwag.github.io/blog/blog/2019/05/05/building-your-own-docker-images-part2/"/>
    <updated>2019-05-05T11:03:05+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2019/05/05/building-your-own-docker-images-part2</id>
    <content type="html"><![CDATA[<p>In <a href="https://stafwag.github.io/blog/blog/2019/04/22/building-your-own-docker-images_part1/">my previous post</a>, we started with creating <a href="https://www.debian.org/">Debian</a> based docker images from scratch for the <a href="https://en.wikipedia.org/wiki/Intel_80386">i386 architecture</a>.</p>

<p>In this blog post, we&rsquo;ll create Arch GNU/Linux based images.</p>

<h1>Arch GNU/Linux</h1>

<p><a href="https://www.archlinux.org/">Arch Linux</a> stopped supporting i386 systems. When you want to run Archlinux on an i386 system there is a community maintained <a href="https://archlinux32.org/">Archlinux32</a> project and the <a href="https://en.wikipedia.org/wiki/Free_software">Free software</a> version <a href="https://www.parabola.nu/">Parabola GNU/Linux-libre</a>.</p>

<p>For the <a href="https://en.wikipedia.org/wiki/ARM_architecture">arm architecture</a>, there is <a href="https://archlinuxarm.org/">Archlinux Arm</a> project that I <a href="https://stafwag.github.io/blog/blog/2015/12/26/running-docker-on-arm/">used</a>.</p>

<h2>mkimage-arch.sh in moby</h2>

<p>I used <code>mkimage-arch.sh</code> from the <a href="https://mobyproject.org/">Moby/Docker project</a> in the past, but it failed when
I tried it this time&hellip;</p>

<p>I created a small patch to fix it and created <a href="https://github.com/moby/moby/pull/39165">a pull request</a>.
Till the issue is resolved, you can use the version in my <a href="https://github.com/stafwag/moby/blob/">cloned git repository</a>.</p>

<h2>Build the docker image</h2>

<h3>Install the required packages</h3>

<p>Make sure that your system is up-to-date.</p>

<pre><code>staf@archlinux32 contrib]$ sudo pacman -Syu
</code></pre>

<p>Install the required packages.</p>

<pre><code>[staf@archlinux32 contrib]$ sudo pacman -S arch-install-scripts expect wget
</code></pre>

<h3>Directory</h3>

<p>Create a directory that will hold the image data.</p>

<pre><code>[staf@archlinux32 ~]$ mkdir -p dockerbuild/archlinux32
[staf@archlinux32 ~]$ cd dockerbuild/archlinux32
[staf@archlinux32 archlinux32]$ 
</code></pre>

<h3>Get mkimage-arch.sh</h3>

<pre><code>[staf@archlinux32 archlinux32]$ wget https://raw.githubusercontent.com/stafwag/moby/master/contrib/mkimage-arch.sh
--2019-05-05 07:46:32--  https://raw.githubusercontent.com/stafwag/moby/master/contrib/mkimage-arch.sh
Loaded CA certificate '/etc/ssl/certs/ca-certificates.crt'
Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.36.133
Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.36.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3841 (3.8K) [text/plain]
Saving to: 'mkimage-arch.sh'

mkimage-arch.sh                 100%[====================================================&gt;]   3.75K  --.-KB/s    in 0s      

2019-05-05 07:46:33 (34.5 MB/s) - 'mkimage-arch.sh' saved [3841/3841]

[staf@archlinux32 archlinux32]$ 
</code></pre>

<p>Make it executable.</p>

<pre><code>[staf@archlinux32 archlinux32]$ chmod +x mkimage-arch.sh
[staf@archlinux32 archlinux32]$ 
</code></pre>

<h3>Setup your pacman.conf</h3>

<p>Copy your pacmnan.conf to the directory that holds <code>mkimage-arch.sh</code>.</p>

<pre><code>[staf@archlinux32 contrib]$ cp /etc/pacman.conf mkimage-arch-pacman.conf
[staf@archlinux32 contrib]$ 
</code></pre>

<h3>Build your image</h3>

<pre><code>[staf@archlinux32 archlinux32]$ TMPDIR=`pwd` sudo ./mkimage-arch.sh
spawn pacstrap -C ./mkimage-arch-pacman.conf -c -d -G -i /var/tmp/rootfs-archlinux-wqxW0uxy8X base bash haveged pacman pacman-mirrorlist --ignore dhcpcd,diffutils,file,inetutils,iproute2,iputils,jfsutils,licenses,linux,linux-firmware,lvm2,man-db,man-pages,mdadm,nano,netctl,openresolv,pciutils,pcmciautils,psmisc,reiserfsprogs,s-nail,sysfsutils,systemd-sysvcompat,usbutils,vi,which,xfsprogs
==&gt; Creating install root at /var/tmp/rootfs-archlinux-wqxW0uxy8X
==&gt; Installing packages to /var/tmp/rootfs-archlinux-wqxW0uxy8X
:: Synchronizing package databases...
 core                                              198.0 KiB   676K/s 00:00 [##########################################] 100%
 extra                                               2.4 MiB  1525K/s 00:02 [##########################################] 100%
 community                                           6.3 MiB   396K/s 00:16 [##########################################] 100%
:: dhcpcd is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: diffutils is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: file is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
&lt;snip&gt;
==&gt; WARNING: /var/tmp/rootfs-archlinux-wqxW0uxy8X is not a mountpoint. This may have undesirable side effects.
Generating locales...
  en_US.UTF-8... done
Generation complete.
tar: ./etc/pacman.d/gnupg/S.gpg-agent.ssh: socket ignored
tar: ./etc/pacman.d/gnupg/S.gpg-agent.extra: socket ignored
tar: ./etc/pacman.d/gnupg/S.gpg-agent: socket ignored
tar: ./etc/pacman.d/gnupg/S.gpg-agent.browser: socket ignored
sha256:41cd9d9163a17e702384168733a9ca1ade0c6497d4e49a2c641b3eb34251bde1
Success.
[staf@archlinux32 archlinux32]$ 
</code></pre>

<h3>Rename</h3>

<p>A new image is created with the name archlinux.</p>

<pre><code>[staf@archlinux32 archlinux32]$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
archlinux           latest              18e74c4d823c        About a minute ago   472MB
[staf@archlinux32 archlinux32]$ 
</code></pre>

<p>You might want to rename it. You can do this by retag the image and remove the old image name.</p>

<pre><code>[staf@archlinux32 archlinux32]$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
archlinux           latest              18e74c4d823c        About a minute ago   472MB
[staf@archlinux32 archlinux32]$ docker tag stafwag/archlinux:386 18e74c4d823c
Error response from daemon: No such image: stafwag/archlinux:386
[staf@archlinux32 archlinux32]$ docker tag 18e74c4d823c stafwag/archlinux:386             
[staf@archlinux32 archlinux32]$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
archlinux           latest              18e74c4d823c        3 minutes ago       472MB
stafwag/archlinux   386                 18e74c4d823c        3 minutes ago       472MB
[staf@archlinux32 archlinux32]$ docker rmi archlinux
Untagged: archlinux:latest
[staf@archlinux32 archlinux32]$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
stafwag/archlinux   386                 18e74c4d823c        3 minutes ago       472MB
[staf@archlinux32 archlinux32]$ 
</code></pre>

<h3>Test</h3>

<pre><code>[staf@archlinux32 archlinux32]$ docker run --rm -it stafwag/archlinux:386 /bin/sh
sh-5.0# pacman -Syu
:: Synchronizing package databases...
 core is up to date
 extra is up to date
 community is up to date
:: Starting full system upgrade...
 there is nothing to do
sh-5.0# 
</code></pre>

<p><strong><em> Have fun! </em></strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building Your Own Docker Base Images (Part 1: Debian GNU/Linux & Co)]]></title>
    <link href="https://stafwag.github.io/blog/blog/2019/04/22/building-your-own-docker-images_part1/"/>
    <updated>2019-04-22T10:36:01+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2019/04/22/building-your-own-docker-images_part1</id>
    <content type="html"><![CDATA[<p>I was using <a href="https://stafwag.github.io/blog/blog/2015/12/26/running-docker-on-arm/">docker on an Odroid U3</a>, but my Odroid stopped working. I switched to another system that is i386 only.</p>

<p>You&rsquo;ll find my journey to build docker images for i386 below.</p>

<h1>Reasons to build your own docker images</h1>

<p>If you want to use <a href="https://www.docker.com/">docker</a> you can start with docker images on the <a href="https://hub.docker.com/">docker registry</a>.
There are several reasons to build your own base images.</p>

<ul>
<li><h2>Security</h2></li>
</ul>


<p>The first reason is security, docker images are not signed by default.</p>

<p>Anyone can upload docker images to the public docker hub with bugs or malicious code.</p>

<p>There are &ldquo;official&rdquo; docker images available at <a href="https://docs.docker.com/docker-hub/official_images/">https://docs.docker.com/docker-hub/official_images/</a> when you execute a <code>docker search</code>  the official docker images are tagged on the official column and are also signed by Docker. To only allow signed docker images you need to set the <code>DOCKER_CONTENT_TRUST=1</code> environment variable. - This should be the default IMHO -</p>

<p>There is one distinction, the &ldquo;official&rdquo; docker images are signed by the &ldquo;Repo admin&rdquo; of the Docker hub, not by the official GNU/Linux distribution project.
If you want to trust the official project instead of the Docker repo admin you can resolve this building your own images.</p>

<ul>
<li><h2>Support other architectures</h2></li>
</ul>


<p>Docker images are generally built for <a href="https://en.wikipedia.org/wiki/X86-64">AMD64 architecture</a>. If you want to use other architectures - <a href="https://en.wikipedia.org/wiki/ARM_architecture">ARM</a>, <a href="https://en.wikipedia.org/wiki/Power.org#Power_Architecture">Power</a>, <a href="https://en.wikipedia.org/wiki/SPARC">SPARC</a> or even <a href="https://en.wikipedia.org/wiki/Intel_80386">i386</a> - you&rsquo;ll find some images on the Docker hub but these are usually not Official docker images.</p>

<ul>
<li><h2>Control</h2></li>
</ul>


<p>When you build your own images, you have more control over what goes or not goes into the image.</p>

<h1>Building your own docker base images</h1>

<p>There are several ways to build your own docker images.</p>

<p>The <a href="https://mobyproject.org/">Mobyproject</a> is Docker&rsquo;s development project - a bit like what Fedora is to RedHat -.
The Moby project has a few scripts that help you to create docker base images and is also a good start if you want to review how to build your own images.</p>

<h1>GNU/Linux distributions</h1>

<p>I build the images on the same GNU/Linux distribution (e.g. The debian images are build on a Debian system) to get the correct gpg keys.</p>

<h2>Debian GNU/Linux &amp; Co</h2>

<p>Debian GNU/Linux makes it very easy to build your own Docker base images. Only debootstrap is required.
I&rsquo;ll use the moby script to the Debian base image and debootstrap to build an i386 docker Ubuntu 18.04 image.</p>

<p>Ubuntu doesn&rsquo;t support i386 officially but includes the i386 userland so it&rsquo;s possible to build i386 Docker images.</p>

<h3>Clone moby</h3>

<pre><code>staf@whale:~/github$ git clone https://github.com/moby/moby
Cloning into 'moby'...
remote: Enumerating objects: 265639, done.
remote: Total 265639 (delta 0), reused 0 (delta 0), pack-reused 265640
Receiving objects: 99% (265640/265640), 137.75 MiB | 3.05 MiB/s, done.
Resolving deltas: 99% (179885/179885), done.
Checking out files: 99% (5508/5508), done.
staf@whale:~/github$ 
</code></pre>

<h3>Make sure that debootstrap is installed</h3>

<pre><code>staf@whale:~/github/moby/contrib$ sudo apt install debootstrap
[sudo] password for staf: 
Reading package lists... Done
Building dependency tree       
Reading state information... Done
debootstrap is already the newest version (1.0.114).
debootstrap set to manually installed.
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
staf@whale:~/github/moby/contrib$ 
</code></pre>

<h3>The Moby way</h3>

<h4>Go to the contrib directory</h4>

<pre><code>staf@whale:~/github$ cd moby/contrib/
staf@whale:~/github/moby/contrib$ 
</code></pre>

<h4>mkimage.sh</h4>

<p> <code>mkimage.sh --help</code> gives you more details howto use the script.</p>

<pre><code>staf@whale:~/github/moby/contrib$ ./mkimage.sh --help
usage: mkimage.sh [-d dir] [-t tag] [--compression algo| --no-compression] script [script-args]
   ie: mkimage.sh -t someuser/debian debootstrap --variant=minbase jessie
       mkimage.sh -t someuser/ubuntu debootstrap --include=ubuntu-minimal --components=main,universe trusty
       mkimage.sh -t someuser/busybox busybox-static
       mkimage.sh -t someuser/centos:5 rinse --distribution centos-5
       mkimage.sh -t someuser/mageia:4 mageia-urpmi --version=4
       mkimage.sh -t someuser/mageia:4 mageia-urpmi --version=4 --mirror=http://somemirror/
staf@whale:~/github/moby/contrib$ 
</code></pre>

<h4>build the image</h4>

<pre><code>staf@whale:~/github/moby/contrib$ sudo ./mkimage.sh -t stafwag/debian_i386:stretch debootstrap --variant=minbase stretch
[sudo] password for staf: 
+ mkdir -p /var/tmp/docker-mkimage.dY9y9apEoK/rootfs
+ debootstrap --variant=minbase stretch /var/tmp/docker-mkimage.dY9y9apEoK/rootfs
I: Target architecture can be executed
I: Retrieving InRelease 
I: Retrieving Release 
I: Retrieving Release.gpg 
I: Checking Release signature
I: Valid Release signature (key id 067E3C456BAE240ACEE88F6FEF0F382A1A7B6500)
I: Retrieving Packages 
&lt;snip&gt;
</code></pre>

<h4>Test</h4>

<p>Verify that images is imported.</p>

<pre><code>staf@whale:~/github/moby/contrib$ docker images
REPOSITORY            TAG                 IMAGE ID            CREATED              SIZE
stafwag/debian_i386   stretch             cb96d1663079        About a minute ago   97.6MB
staf@whale:~/github/moby/contrib$ 
</code></pre>

<p>Run a test docker instance</p>

<pre><code>staf@whale:~/github/moby/contrib$ docker run -t -i --rm stafwag/debian_i386:stretch /bin/sh
# cat /etc/debian_version 
9.8
# 
</code></pre>

<h3>The debootstrap way</h3>

<h4>Make sure that debootstrap is installed</h4>

<pre><code>staf@ubuntu184:~/github/moby$ sudo apt install debootstrap
Reading package lists... Done
Building dependency tree       
Reading state information... Done
Suggested packages:
  ubuntu-archive-keyring
The following NEW packages will be installed:
  debootstrap
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 35,7 kB of archives.
After this operation, 270 kB of additional disk space will be used.
Get:1 http://be.archive.ubuntu.com/ubuntu bionic-updates/main amd64 debootstrap all 1.0.95ubuntu0.3 [35,7 kB]
Fetched 35,7 kB in 0s (85,9 kB/s)    
Selecting previously unselected package debootstrap.
(Reading database ... 163561 files and directories currently installed.)
Preparing to unpack .../debootstrap_1.0.95ubuntu0.3_all.deb ...
Unpacking debootstrap (1.0.95ubuntu0.3) ...
Processing triggers for man-db (2.8.3-2ubuntu0.1) ...
Setting up debootstrap (1.0.95ubuntu0.3) ...
staf@ubuntu184:~/github/moby$ 
</code></pre>

<h4>bootsrap</h4>

<p>Create a directory that will hold the chrooted operating system.</p>

<pre><code>staf@ubuntu184:~$ mkdir -p dockerbuild/ubuntu
staf@ubuntu184:~/dockerbuild/ubuntu$ 
</code></pre>

<p>Bootstrap.</p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu$ sudo debootstrap --verbose --include=iputils-ping --arch i386 bionic ./chroot-bionic http://ftp.ubuntu.com/ubuntu/
I: Retrieving InRelease 
I: Checking Release signature
I: Valid Release signature (key id 790BC7277767219C42C86F933B4FE6ACC0B21F32)
I: Validating Packages 
I: Resolving dependencies of required packages...
I: Resolving dependencies of base packages...
I: Checking component main on http://ftp.ubuntu.com/ubuntu...
I: Retrieving adduser 3.116ubuntu1
I: Validating adduser 3.116ubuntu1
I: Retrieving apt 1.6.1
I: Validating apt 1.6.1
I: Retrieving apt-utils 1.6.1
I: Validating apt-utils 1.6.1
I: Retrieving base-files 10.1ubuntu2
&lt;snip&gt;
I: Configuring python3-yaml...
I: Configuring python3-dbus...
I: Configuring apt-utils...
I: Configuring netplan.io...
I: Configuring nplan...
I: Configuring networkd-dispatcher...
I: Configuring kbd...
I: Configuring console-setup-linux...
I: Configuring console-setup...
I: Configuring ubuntu-minimal...
I: Configuring libc-bin...
I: Configuring systemd...
I: Configuring ca-certificates...
I: Configuring initramfs-tools...
I: Base system installed successfully.
</code></pre>

<h4>Customize</h4>

<p>You can customize your installation before it goes into the image. One thing that you should customize is include update in the image.</p>

<p>Update <code>/etc/resolve.conf</code></p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu$ sudo vi chroot-bionic/etc/resolv.conf
</code></pre>

<pre><code>nameserver 9.9.9.9
</code></pre>

<p>Update <code>/etc/apt/sources.list</code></p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu$ sudo vi chroot-bionic/etc/apt/sources.list
</code></pre>

<p>And include the updates</p>

<pre><code>deb http://ftp.ubuntu.com/ubuntu bionic main
deb http://security.ubuntu.com/ubuntu bionic-security main
deb http://ftp.ubuntu.com/ubuntu/ bionic-updates main
</code></pre>

<p>Chroot into your installation and run <code>apt-get update</code></p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu$ sudo chroot $PWD/chroot-bionic
root@ubuntu184:/# apt update
Hit:1 http://ftp.ubuntu.com/ubuntu bionic InRelease
Get:2 http://ftp.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]   
Get:3 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]       
Get:4 http://ftp.ubuntu.com/ubuntu bionic/main Translation-en [516 kB]                  
Get:5 http://ftp.ubuntu.com/ubuntu bionic-updates/main i386 Packages [492 kB]           
Get:6 http://ftp.ubuntu.com/ubuntu bionic-updates/main Translation-en [214 kB]          
Get:7 http://security.ubuntu.com/ubuntu bionic-security/main i386 Packages [241 kB]     
Get:8 http://security.ubuntu.com/ubuntu bionic-security/main Translation-en [115 kB]
Fetched 1755 kB in 1s (1589 kB/s)      
Reading package lists... Done
Building dependency tree... Done
</code></pre>

<p>and <code>apt-get upgrade</code></p>

<pre><code>root@ubuntu184:/# apt upgrade
Reading package lists... Done
Building dependency tree... Done
Calculating upgrade... Done
The following NEW packages will be installed:
  python3-netifaces
The following packages will be upgraded:
  apt apt-utils base-files bsdutils busybox-initramfs console-setup console-setup-linux
  distro-info-data dpkg e2fsprogs fdisk file gcc-8-base gpgv initramfs-tools
  initramfs-tools-bin initramfs-tools-core keyboard-configuration kmod libapparmor1
  libapt-inst2.0 libapt-pkg5.0 libblkid1 libcom-err2 libcryptsetup12 libdns-export1100
  libext2fs2 libfdisk1 libgcc1 libgcrypt20 libglib2.0-0 libglib2.0-data libidn11
  libisc-export169 libkmod2 libmagic-mgc libmagic1 libmount1 libncurses5 libncursesw5
  libnss-systemd libpam-modules libpam-modules-bin libpam-runtime libpam-systemd
  libpam0g libprocps6 libpython3-stdlib libpython3.6-minimal libpython3.6-stdlib
  libseccomp2 libsmartcols1 libss2 libssl1.1 libstdc++6 libsystemd0 libtinfo5 libudev1
  libunistring2 libuuid1 libxml2 mount ncurses-base ncurses-bin netcat-openbsd
  netplan.io networkd-dispatcher nplan openssl perl-base procps python3 python3-gi
  python3-minimal python3.6 python3.6-minimal systemd systemd-sysv tar tzdata
  ubuntu-keyring ubuntu-minimal udev util-linux
84 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 26.6 MB of archives.
After this operation, 450 kB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://security.ubuntu.com/ubuntu bionic-security/main i386 netplan.io i386 0.40.1~18.04.4 [64.6 kB]
Get:2 http://ftp.ubuntu.com/ubuntu bionic-updates/main i386 base-files i386 10.1ubuntu2.4 [60.3 kB]
Get:3 http://security.ubuntu.com/ubuntu bionic-security/main i386 libapparmor1 i386 2.12-4ubuntu5.1 [32.7 kB]
Get:4 http://security.ubuntu.com/ubuntu bionic-security/main i386 libgcrypt20 i386 1.8.1-
&lt;snip&gt;
running python rtupdate hooks for python3.6...
running python post-rtupdate hooks for python3.6...
Setting up initramfs-tools-core (0.130ubuntu3.7) ...
Setting up initramfs-tools (0.130ubuntu3.7) ...
update-initramfs: deferring update (trigger activated)
Setting up python3-gi (3.26.1-2ubuntu1) ...
Setting up file (1:5.32-2ubuntu0.2) ...
Setting up python3-netifaces (0.10.4-0.1build4) ...
Processing triggers for systemd (237-3ubuntu10.20) ...
Setting up networkd-dispatcher (1.7-0ubuntu3.3) ...
Installing new version of config file /etc/default/networkd-dispatcher ...
Setting up netplan.io (0.40.1~18.04.4) ...
Setting up nplan (0.40.1~18.04.4) ...
Setting up ubuntu-minimal (1.417.1) ...
Processing triggers for libc-bin (2.27-3ubuntu1) ...
Processing triggers for initramfs-tools (0.130ubuntu3.7) ...
root@ubuntu184:/# 
staf@ubuntu184:~/dockerbuild/ubuntu$ 
</code></pre>

<h4>Import</h4>

<p>Go to your chroot installation.</p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu$ cd chroot-bionic/
staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ 
</code></pre>

<p>and import the image.</p>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ sudo tar cpf - . | docker import - stafwag/ubuntu_i386:bionic
sha256:83560ef3c8d48b737983ab8ffa3ec3836b1239664f8998038bfe1b06772bb3c2
staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ 
</code></pre>

<h4>Test</h4>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ docker images
REPOSITORY            TAG                 IMAGE ID            CREATED              SIZE
stafwag/ubuntu_i386   bionic              83560ef3c8d4        About a minute ago   315MB
staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ 
</code></pre>

<pre><code>staf@ubuntu184:~/dockerbuild/ubuntu/chroot-bionic$ docker run -it --rm stafwag/ubuntu_i386:bionic /bin/bash
root@665cec6ee24f:/# lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 18.04.2 LTS
Release:        18.04
Codename:       bionic
root@665cec6ee24f:/# 
</code></pre>

<p><strong><em> Have fun! </em></strong></p>

<h1>Links</h1>

<ul>
<li><a href="https://docs.docker.com/docker-hub/official_images/">https://docs.docker.com/docker-hub/official_images/</a></li>
<li><a href="https://docs.docker.com/engine/security/trust/content_trust/">https://docs.docker.com/engine/security/trust/content_trust/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jenkins Build With 20 Cores]]></title>
    <link href="https://stafwag.github.io/blog/blog/2017/09/30/jenkins-build-with-20-cores/"/>
    <updated>2017-09-30T19:18:14+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2017/09/30/jenkins-build-with-20-cores</id>
    <content type="html"><![CDATA[<p>I finally got the time to try out my jenkins build on my new <a href="http://stafwag.github.io/blog/blog/2017/09/16/20-core-dual-processor-jenkins-build-workstation/">20 Core Dual Processor Jenkins Build Workstation</a></p>

<p><div class="embed-video-container"><iframe src="http://www.youtube.com/embed/BNn9absXkE8 "></iframe></div></p>

<p>I&rsquo;m able to run all test on multiple operation systems now. I still need to review this setup and perhaps move some tests to <a href="https://www.docker.io">docker</a> instead of the virtual machines to save some memory. &hellip;but this jenkins setup was configured before docker was a thing.</p>

<p><strong><em>Have fun</em></strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running Docker on ARM]]></title>
    <link href="https://stafwag.github.io/blog/blog/2015/12/26/running-docker-on-arm/"/>
    <updated>2015-12-26T14:55:59+01:00</updated>
    <id>https://stafwag.github.io/blog/blog/2015/12/26/running-docker-on-arm</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/odroid_2_euro.jpg" width="500" height="256" title="&ldquo;odroid u3 2 euro&rdquo;" ></p>

<p>I own an <a href="http://www.hardkernel.com/main/products/prdt_info.php?g_code=g138745696275">odroid u3</a> that I used for my media center with <a href="https://xbmc.org/">xbmc</a> while I like the performance of the <a href="https://en.wikipedia.org/wiki/Exynos">Exynos4412 CPU</a> but the drivers for the <a href="https://en.wikipedia.org/wiki/Mali_%28GPU%29">Mali GPU</a> aren&rsquo;t <a href="https://en.wikipedia.org/wiki/Open_source">opensource</a>.</p>

<p>I like <a href="https://en.wikipedia.org/wiki/ARM_architecture">ARM</a> but unfortunatelly a lot of the ARM <a href="https://en.wikipedia.org/wiki/System_on_a_chip">soc</a>&rsquo;s  have no opensource drivers for the <a href="https://en.wikipedia.org/wiki/Graphics_processing_unit">GPU</a></p>

<p>The manufacturer of the odroid u3 - <a href="http://www.hardkernel.com/">hardkernel</a> - provides <a href="http://com.odroid.com/sigong/nf_file_board/nfile_board.php?tag=ODROID-U3">ubuntu 14.04 images</a> with xbmc and mali support. It isn&rsquo;t possible to get the newer of version of xbmc - now <a href="http://www.kodi.org">kodi</a> - running, or I didn&rsquo;t succeed withit. I&rsquo;ll look for another solution for my media server needs this might be my <a href="https://www.raspberrypi.org/">raspberry pi</a> <a href="https://www.raspberrypi.org/products/model-b-plus/">1 model B+</a> that is laying around doing nothing running <a href="http://openelec.tv/">openelec</a><br /><br />
<img class="left" src="/images/odroid_u3_with_usbdisk.jpg" width="500" height="352" title="&ldquo;odroid u3 with usb disk&rdquo;" ></p>

<p>Like I said I like the performance of the ordoid U3 that why I installed <a href="http://archlinuxarm.org/">archLinuxArm</a> to play with <a href="https://www.docker.com/">Docker</a>. I could have sticked with Ubuntu 14.04 but with Arch Linux I get more up-to-date software.</p>

<p><a href="http://archlinuxarm.org/platforms/armv7/samsung/odroid-u3">The installion</a> was pretty straightforward even the <a href="https://wiki.archlinux.org/index.php/Docker">docker installation</a> was the same as on a <a href="https://en.wikipedia.org/wiki/X86">x86 platform</a>.<br /></p>

<p>Since we are using docker on arm we have to build our own docker base images instead of using the <a href="https://hub.docker.com/_/registry/">docker registery</a>. I have security concerns about installtion and using unsigned non-verified software anyway. If you build your own image it possible to audit/verify the build process.</p>

<h2>Creating your own docker base images</h2>

<h3>Arch</h3>

<p>To build a Arch Base Image download mkimage-arch.sh and mkimage-arch-pacman.conf from the Docker source <a href="https://github.com/docker/docker/blob/master/contrib/"><a href="https://github.com/docker/docker/blob/master/contrib/">https://github.com/docker/docker/blob/master/contrib/</a></a></p>

<h4>Download mkimage-arch.sh</h4>

<pre><code>staf@fanny arch]$ wget https://raw.githubusercontent.com/docker/docker/master/contrib/mkimage-arch.sh
--2015-12-26 10:21:10--  https://raw.githubusercontent.com/docker/docker/master/contrib/mkimage-arch.sh
Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 23.235.43.133
Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|23.235.43.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 2351 (2.3K) [text/plain]
Saving to: 'mkimage-arch.sh'

mkimage-arch.sh                     100%[=====================================================================&gt;]   2.30K  --.-KB/s   in 0s     

2015-12-26 10:21:10 (144 MB/s) - 'mkimage-arch.sh' saved [2351/2351]

[staf@fanny arch]$ chmod +x mkimage-arch.sh 
[staf@fanny arch]$ 
</code></pre>

<h4>Increase the timeout</h4>

<pre><code>[staf@fanny arch]$ sed -i 's/timeout 60/timeout 120/' mkimage-arch.sh
[staf@fanny arch]$ 
</code></pre>

<h4>Copy pacman.conf</h4>

<pre><code>[staf@fanny arch]$ cp /etc/pacman.conf mkimage-arch-pacman.conf
[staf@fanny arch]$ 
</code></pre>

<h4>Install the arch keyring</h4>

<pre><code>[staf@fanny debian]$ sudo pacman -Ss keyring                                                                                                                                                                                                                                                                                                                                                                                             
core/archlinux-keyring 20151206-1                                                                                                                                                                                                                                                                                                                                                                                                        
    Arch Linux PGP keyring                                                                                                                                                                                                                                                                                                                                                                                                               
core/archlinuxarm-keyring 20140119-1                                                                                                                                                                                                                                                                                                                                                                                                     
    Arch Linux ARM PGP keyring                                                                                                                                                                                                                                                                                                                                                                                                           
extra/gnome-keyring 1:3.18.3-1 (gnome)                                                                                                                                                                                                                                                                                                                                                                                                   
    GNOME Password Management daemon                                                                                                                                                                                                                                                                                                                                                                                                     
extra/gnome-keyring-sharp 1.0.2-5                                                                                                                                                                                                                                                                                                                                                                                                        
    A fully managed implementation of libgnome-keyring                                                                                                                                                                                                                                                                                                                                                                                   
extra/libgnome-keyring 3.12.0-2                                                                                                                                                                                                                                                                                                                                                                                                          
    GNOME keyring client library                                                                                                                                                                                                                                                                                                                                                                                                         
extra/python2-gnomekeyring 2.32.0-15                                                                                                                                                                                                                                                                                                                                                                                                     
    Python bindings for libgnome-keyring                                                                                                                                                                                                                                                                                                                                                                                                 
community/python-keyring 5.7.1-1                                                                                                                                                                                                                                                                                                                                                                                                         
    Store and access your passwords safely.                                                                                                                                                                                                                                                                                                                                                                                              
community/python2-keyring 5.7.1-1                                                                                                                                                                                                                                                                                                                                                                                                        
    Store and access your passwords safely.                                                                                                                                                                                                                                                                                                                                                                                              
[staf@fanny debian]$ sudo pacman -S archlinuxarm-keyring                                                                                                                                                                                                                                                                                                                                                                                 
resolving dependencies...                                                                                                                                                                                                                                                                                                                                                                                                                
looking for conflicting packages...                                                                                                                                                                                                                                                                                                                                                                                                      

Packages (1) archlinuxarm-keyring-20140119-1                                                                                                                                                                                                                                                                                                                                                                                             

Total Download Size:   0.01 MiB                                                                                                                                                                                                                                                                                                                                                                                                          
Total Installed Size:  0.03 MiB                                                                                                                                                                                                                                                                                                                                                                                                          

:: Proceed with installation? [Y/n] y                                                                                                                                                                                                                                                                                                                                                                                                    
:: Retrieving packages ...                                                                                                                                                                                                                                                                                                                                                                                                               
 archlinuxarm-keyring-20140119-1-any                                                                                                                                                                                                    12.2 KiB  1218K/s 00:00 [##################################################################################################################################################################] 100%
(1/1) checking keys in keyring                                                                                                                                                                                                                                  [##################################################################################################################################################################] 100%
(1/1) checking package integrity                                                                                                                                                                                                                                [##################################################################################################################################################################] 100%
(1/1) loading package files                                                                                                                                                                                                                                     [##################################################################################################################################################################] 100%
(1/1) checking for file conflicts                                                                                                                                                                                                                               [##################################################################################################################################################################] 100%
(1/1) checking available disk space                                                                                                                                                                                                                             [##################################################################################################################################################################] 100%
(1/1) installing archlinuxarm-keyring                                                                                                                                                                                                                           [##################################################################################################################################################################] 100%
[staf@fanny debian]$ sudo pacman -S archlinux-keyring                                                                                                                                                                                                                                                                                                                                                                                    
resolving dependencies...                                                                                                                                                                                                                                                                                                                                                                                                                
looking for conflicting packages...                                                                                                                                                                                                                                                                                                                                                                                                      

Packages (1) archlinux-keyring-20151206-1                                                                                                                                                                                                                                                                                                                                                                                                

Total Download Size:   0.49 MiB                                                                                                                                                                                                                                                                                                                                                                                                          
Total Installed Size:  0.70 MiB                                                                                                                                                                                                                                                                                                                                                                                                          

:: Proceed with installation? [Y/n] y                                                                                                                                                                                                                                                                                                                                                                                                    
:: Retrieving packages ...                                                                                                                                                                                                                                                                                                                                                                                                               
 archlinux-keyring-20151206-1-any                                                                                                                                                                                                      505.5 KiB   231K/s 00:02 [##################################################################################################################################################################] 100%
(1/1) checking keys in keyring                                                                                                                                                                                                                                  [##################################################################################################################################################################] 100%
(1/1) checking package integrity                                                                                                                                                                                                                                [##################################################################################################################################################################] 100%
(1/1) loading package files                                                                                                                                                                                                                                     [##################################################################################################################################################################] 100%
(1/1) checking for file conflicts                                                                                                                                                                                                                               [##################################################################################################################################################################] 100%
(1/1) checking available disk space                                                                                                                                                                                                                             [##################################################################################################################################################################] 100%
(1/1) installing archlinux-keyring                                                                                                                                                                                                                              [##################################################################################################################################################################] 100%
[staf@fanny debian]$                                                                                                                                                                                                                                                                                                                                                                                                                     
</code></pre>

<h4>Create the base Arch Image</h4>

<pre><code>[staf@fanny arch]$ sudo LC_ALL=C TMPDIR=`pwd`/tmp ./mkimage-arch.sh
spawn pacstrap -C ./mkimage-arch-pacman.conf -c -d -G -i /home/staf/docker/docker/base-images/arch/tmp/rootfs-archlinux-eYGavMPZLd base haveged --ignore cryptsetup,device-mapper,dhcpcd,iproute2,jfsutils,linux,lvm2,man-db,man-pages,mdadm,nano,netctl,openresolv,pciutils,pcmciautils,reiserfsprogs,s-nail,systemd-sysvcompat,usbutils,vi,xfsprogs
==&gt; Creating install root at /home/staf/docker/docker/base-images/arch/tmp/rootfs-archlinux-eYGavMPZLd
==&gt; Installing packages to /home/staf/docker/docker/base-images/arch/tmp/rootfs-archlinux-eYGavMPZLd
:: Synchronizing package databases...
 core                                                         210.4 KiB   288K/s 00:01 [##################################################] 100%
 extra                                                          2.3 MiB   409K/s 00:06 [##################################################] 100%
 community                                                      3.2 MiB   314K/s 00:10 [##################################################] 100%
 alarm                                                        105.4 KiB  77.8K/s 00:01 [##################################################] 100%
 aur                                                           31.2 KiB   164K/s 00:00 [##################################################] 100%
:: cryptsetup is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: device-mapper is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: dhcpcd is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: iproute2 is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: jfsutils is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: lvm2 is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: man-db is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: man-pages is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: mdadm is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: nano is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: netctl is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: pciutils is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: reiserfsprogs is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: s-nail is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: systemd-sysvcompat is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: usbutils is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: vi is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: xfsprogs is in IgnorePkg/IgnoreGroup. Install anyway? [Y/n] n
:: There are 31 members in group base:
:: Repository core
   1) bash  2) bzip2  3) coreutils  4) diffutils  5) e2fsprogs  6) file  7) filesystem  8) findutils  9) gawk  10) gcc-libs  11) gettext
   12) glibc  13) grep  14) gzip  15) inetutils  16) iputils  17) less  18) licenses  19) logrotate  20) pacman  21) pacman-mirrorlist
   22) perl  23) procps-ng  24) psmisc  25) sed  26) shadow  27) sysfsutils  28) tar  29) texinfo  30) util-linux  31) which

Enter a selection (default=all): 
resolving dependencies...
looking for conflicting packages...

Packages (86) acl-2.2.52-2  attr-2.4.47-1  ca-certificates-20150402-1  ca-certificates-cacert-20140824-2  ca-certificates-mozilla-3.20.1-1
              ca-certificates-utils-20150402-1  cracklib-2.9.4-1  curl-7.46.0-1  db-5.3.28-3  expat-2.1.0-4  gdbm-1.11-1  glib2-2.46.2-2
              gmp-6.1.0-2  gnupg-2.1.10-3  gnutls-3.4.7-2  gpgme-1.6.0-2  iana-etc-20151016-1  keyutils-1.5.9-1  krb5-1.13.2-1
              libarchive-3.1.2-8  libassuan-2.4.2-1  libcap-2.24-2  libffi-3.2.1-1  libgcrypt-1.6.4-1  libgpg-error-1.21-1  libidn-1.32-1
              libksba-1.3.3-1  libldap-2.4.42-2  libsasl-2.1.26-7  libssh2-1.6.0-1  libsystemd-228-3  libtasn1-4.7-1  libtirpc-1.0.1-2
              libunistring-0.9.6-1  libutil-linux-2.27.1-1  linux-api-headers-4.1.4-1  lz4-131-1  lzo-2.09-1  mpfr-3.1.3.p4-1  ncurses-6.0-4
              nettle-3.1.1-1  npth-1.2-1  openssl-1.0.2.e-1  p11-kit-0.23.1-3  pam-1.2.1-3  pambase-20130928-1  pcre-8.38-2  pinentry-0.9.7-1
              popt-1.16-7  readline-6.3.008-3  sqlite-3.9.2-1  tzdata-2015g-1  xz-5.2.2-1  zlib-1.2.8-4  bash-4.3.042-4  bzip2-1.0.6-5
              coreutils-8.24-1  diffutils-3.3-2  e2fsprogs-1.42.13-1  file-5.25-1  filesystem-2015.09-1  findutils-4.4.2-6  gawk-4.1.3-1
              gcc-libs-5.3.0-3  gettext-0.19.6-2  glibc-2.22-3  grep-2.22-1  gzip-1.6-1  haveged-1.9.1-2  inetutils-1.9.4-2.1
              iputils-20140519.fad11dc-1  less-481-2  licenses-20140629-1  logrotate-3.9.1-1  pacman-4.2.1-4  pacman-mirrorlist-20151217-1
              perl-5.22.1-1  procps-ng-3.3.11-2  psmisc-22.21-3  sed-4.2.2-3  shadow-4.2.1-3  sysfsutils-2.1.0-9  tar-1.28-1  texinfo-6.0-1
              util-linux-2.27.1-1  which-2.21-1

Total Installed Size:  272.82 MiB

:: Proceed with installation? [Y/n] y
(86/86) checking keys in keyring                                                       [##################################################] 100%
(86/86) checking package integrity                                                     [##################################################] 100%
(86/86) loading package files                                                          [##################################################] 100%
(86/86) checking for file conflicts                                                    [##################################################] 100%
(86/86) checking available disk space                                                  [##################################################] 100%
( 1/86) installing linux-api-headers                                                   [##################################################] 100%
( 2/86) installing tzdata                                                              [##################################################] 100%
( 3/86) installing iana-etc                                                            [##################################################] 100%
( 4/86) installing filesystem                                                          [##################################################] 100%
( 5/86) installing glibc                                                               [##################################################] 100%
( 6/86) installing gcc-libs                                                            [##################################################] 100%
( 7/86) installing ncurses                                                             [##################################################] 100%
( 8/86) installing readline                                                            [##################################################] 100%
( 9/86) installing bash                                                                [##################################################] 100%
Optional dependencies for bash
    bash-completion: for tab completion
(10/86) installing bzip2                                                               [##################################################] 100%
(11/86) installing attr                                                                [##################################################] 100%
(12/86) installing acl                                                                 [##################################################] 100%
(13/86) installing gmp                                                                 [##################################################] 100%
(14/86) installing libcap                                                              [##################################################] 100%
(15/86) installing zlib                                                                [##################################################] 100%
(16/86) installing gdbm                                                                [##################################################] 100%
(17/86) installing db                                                                  [##################################################] 100%
(18/86) installing perl                                                                [##################################################] 100%
(19/86) installing openssl                                                             [##################################################] 100%
Optional dependencies for openssl
    ca-certificates [pending]
(20/86) installing coreutils                                                           [##################################################] 100%
(21/86) installing diffutils                                                           [##################################################] 100%
(22/86) installing libutil-linux                                                       [##################################################] 100%
(23/86) installing e2fsprogs                                                           [##################################################] 100%
(24/86) installing file                                                                [##################################################] 100%
(25/86) installing findutils                                                           [##################################################] 100%
(26/86) installing mpfr                                                                [##################################################] 100%
(27/86) installing gawk                                                                [##################################################] 100%
(28/86) installing pcre                                                                [##################################################] 100%
(29/86) installing libffi                                                              [##################################################] 100%
(30/86) installing glib2                                                               [##################################################] 100%
Optional dependencies for glib2
    python2: for gdbus-codegen and gtester-report
    libelf: gresource inspection tool
(31/86) installing libunistring                                                        [##################################################] 100%
(32/86) installing gettext                                                             [##################################################] 100%
Optional dependencies for gettext
    git: for autopoint infrastructure updates
(33/86) installing grep                                                                [##################################################] 100%
(34/86) installing less                                                                [##################################################] 100%
(35/86) installing gzip                                                                [##################################################] 100%
(36/86) installing cracklib                                                            [##################################################] 100%
(37/86) installing libsasl                                                             [##################################################] 100%
(38/86) installing libldap                                                             [##################################################] 100%
(39/86) installing keyutils                                                            [##################################################] 100%
(40/86) installing krb5                                                                [##################################################] 100%
(41/86) installing libtirpc                                                            [##################################################] 100%
(42/86) installing pambase                                                             [##################################################] 100%
(43/86) installing pam                                                                 [##################################################] 100%
(44/86) installing inetutils                                                           [##################################################] 100%
(45/86) installing sysfsutils                                                          [##################################################] 100%
(46/86) installing iputils                                                             [##################################################] 100%
Optional dependencies for iputils
    xinetd: for tftpd
(47/86) installing licenses                                                            [##################################################] 100%
(48/86) installing popt                                                                [##################################################] 100%
(49/86) installing logrotate                                                           [##################################################] 100%
(50/86) installing expat                                                               [##################################################] 100%
(51/86) installing lzo                                                                 [##################################################] 100%
(52/86) installing xz                                                                  [##################################################] 100%
(53/86) installing libarchive                                                          [##################################################] 100%
(54/86) installing texinfo                                                             [##################################################] 100%
(55/86) installing libtasn1                                                            [##################################################] 100%
(56/86) installing p11-kit                                                             [##################################################] 100%
(57/86) installing ca-certificates-utils                                               [##################################################] 100%
(58/86) installing ca-certificates-mozilla                                             [##################################################] 100%
(59/86) installing ca-certificates-cacert                                              [##################################################] 100%
(60/86) installing ca-certificates                                                     [##################################################] 100%
(61/86) installing libidn                                                              [##################################################] 100%
(62/86) installing libssh2                                                             [##################################################] 100%
(63/86) installing curl                                                                [##################################################] 100%
(64/86) installing libgpg-error                                                        [##################################################] 100%
(65/86) installing npth                                                                [##################################################] 100%
(66/86) installing libgcrypt                                                           [##################################################] 100%
(67/86) installing libksba                                                             [##################################################] 100%
(68/86) installing libassuan                                                           [##################################################] 100%
(69/86) installing pinentry                                                            [##################################################] 100%
Optional dependencies for pinentry
    gtk2: gtk2 backend
    qt5-base: qt backend
    gcr: gnome3 backend
(70/86) installing nettle                                                              [##################################################] 100%
(71/86) installing gnutls                                                              [##################################################] 100%
Optional dependencies for gnutls
    guile: for use with Guile bindings
(72/86) installing sqlite                                                              [##################################################] 100%
(73/86) installing gnupg                                                               [##################################################] 100%
Optional dependencies for gnupg
    libldap: gpg2keys_ldap [installed]
    libusb-compat: scdaemon
(74/86) installing gpgme                                                               [##################################################] 100%
(75/86) installing pacman-mirrorlist                                                   [##################################################] 100%
(76/86) installing pacman                                                              [##################################################] 100%
Optional dependencies for pacman
    fakeroot: for makepkg usage as normal user
(77/86) installing lz4                                                                 [##################################################] 100%
(78/86) installing libsystemd                                                          [##################################################] 100%
(79/86) installing procps-ng                                                           [##################################################] 100%
(80/86) installing psmisc                                                              [##################################################] 100%
(81/86) installing sed                                                                 [##################################################] 100%
(82/86) installing shadow                                                              [##################################################] 100%
(83/86) installing tar                                                                 [##################################################] 100%
(84/86) installing util-linux                                                          [##################################################] 100%
Optional dependencies for util-linux
    python: python bindings to libmount
(85/86) installing which                                                               [##################################################] 100%
(86/86) installing haveged                                                             [##################################################] 100%
gpg: /etc/pacman.d/gnupg/trustdb.gpg: trustdb created
gpg: no ultimately trusted keys found
gpg: starting migration from earlier GnuPG versions
gpg: porting secret keys from '/etc/pacman.d/gnupg/secring.gpg' to gpg-agent
gpg: migration succeeded
gpg: Generating pacman keyring master key...
gpg: key 4C4DCB68 marked as ultimately trusted
gpg: directory '/etc/pacman.d/gnupg/openpgp-revocs.d' created
gpg: Done
==&gt; Updating trust database...
gpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model
gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u
checking dependencies...

Packages (1) haveged-1.9.1-2

Total Removed Size:  0.18 MiB

:: Do you want to remove these packages? [Y/n] 
(1/1) removing haveged                                                                 [##################################################] 100%
==&gt; ERROR: The keyring file /usr/share/pacman/keyrings/archlinux.gpg does not exist.
Generating locales...
  en_US.UTF-8... done
Generation complete.
tar: ./etc/pacman.d/gnupg/S.gpg-agent: socket ignored
5de54cc959c36d2064ee4389c0cc50acdb2246b3eac4edeb5e83cac7f4d9b350
Success.
[staf@fanny arch]$
</code></pre>

<h4>Try it</h4>

<pre><code>[staf@fanny arch]$ docker run -t -i --rm archlinux /bin/bash
[root@6c24a79778f9 /]# 
</code></pre>

<h3>Debian</h3>

<p>To create a debian base images you need <a href="https://wiki.debian.org/Debootstrap">debootstrap</a>. There is a <a href="https://aur.archlinux.org/">aur</a> available.</p>

<h4>Install yaort</h4>

<p><a href="https://wiki.archlinux.org/index.php/Yaourt">Yaourt</a> is a nice tool to install aur ports.</p>

<h5>Install the base development tools</h5>

<pre><code>[staf@fanny ~]$ sudo pacman -Sy base-devel
:: Synchronizing package databases...
 core                                                                      210.4 KiB   198K/s 00:01 [##########################################################] 100%
 extra                                                                       2.3 MiB   385K/s 00:06 [##########################################################] 100%
 community                                                                   3.2 MiB   208K/s 00:16 [##########################################################] 100%
 alarm                                                                     105.4 KiB   335K/s 00:00 [##########################################################] 100%
 aur                                                                        31.2 KiB  49.1K/s 00:01 [##########################################################] 100%
:: There are 25 members in group base-devel:
:: Repository core
   1) autoconf  2) automake  3) binutils  4) bison  5) fakeroot  6) file  7) findutils  8) flex  9) gawk  10) gcc  11) gettext  12) grep  13) groff  14) gzip
   15) libtool  16) m4  17) make  18) pacman  19) patch  20) pkg-config  21) sed  22) sudo  23) texinfo  24) util-linux  25) which

Enter a selection (default=all): 
warning: autoconf-2.69-2 is up to date -- reinstalling
warning: automake-1.15-1 is up to date -- reinstalling
warning: binutils-2.25.1-3 is up to date -- reinstalling
warning: bison-3.0.4-1 is up to date -- reinstalling
warning: fakeroot-1.20.2-1 is up to date -- reinstalling
warning: file-5.25-1 is up to date -- reinstalling
warning: findutils-4.4.2-6 is up to date -- reinstalling
warning: flex-2.6.0-1 is up to date -- reinstalling
warning: gawk-4.1.3-1 is up to date -- reinstalling
warning: gcc-5.3.0-3 is up to date -- reinstalling
warning: gettext-0.19.6-2 is up to date -- reinstalling
warning: grep-2.22-1 is up to date -- reinstalling
warning: groff-1.22.3-5 is up to date -- reinstalling
warning: gzip-1.6-1 is up to date -- reinstalling
warning: libtool-2.4.6-4 is up to date -- reinstalling
warning: m4-1.4.17-1 is up to date -- reinstalling
warning: make-4.1-1 is up to date -- reinstalling
warning: pacman-4.2.1-4 is up to date -- reinstalling
warning: patch-2.7.5-1 is up to date -- reinstalling
warning: pkg-config-0.29-1 is up to date -- reinstalling
warning: sed-4.2.2-3 is up to date -- reinstalling
warning: sudo-1.8.15-1 is up to date -- reinstalling
warning: texinfo-6.0-1 is up to date -- reinstalling
warning: util-linux-2.27.1-1 is up to date -- reinstalling
warning: which-2.21-1 is up to date -- reinstalling
resolving dependencies...
looking for conflicting packages...

Packages (25) autoconf-2.69-2  automake-1.15-1  binutils-2.25.1-3  bison-3.0.4-1  fakeroot-1.20.2-1  file-5.25-1  findutils-4.4.2-6  flex-2.6.0-1  gawk-4.1.3-1
              gcc-5.3.0-3  gettext-0.19.6-2  grep-2.22-1  groff-1.22.3-5  gzip-1.6-1  libtool-2.4.6-4  m4-1.4.17-1  make-4.1-1  pacman-4.2.1-4  patch-2.7.5-1
              pkg-config-0.29-1  sed-4.2.2-3  sudo-1.8.15-1  texinfo-6.0-1  util-linux-2.27.1-1  which-2.21-1

Total Installed Size:  166.11 MiB
Net Upgrade Size:        0.00 MiB

:: Proceed with installation? [Y/n] y
(25/25) checking keys in keyring                                                                    [##########################################################] 100%
(25/25) checking package integrity                                                                  [##########################################################] 100%
(25/25) loading package files                                                                       [##########################################################] 100%
(25/25) checking for file conflicts                                                                 [##########################################################] 100%
(25/25) checking available disk space                                                               [##########################################################] 100%
( 1/25) reinstalling gawk                                                                           [##########################################################] 100%
( 2/25) reinstalling m4                                                                             [##########################################################] 100%
( 3/25) reinstalling autoconf                                                                       [##########################################################] 100%
( 4/25) reinstalling automake                                                                       [##########################################################] 100%
( 5/25) reinstalling binutils                                                                       [##########################################################] 100%
( 6/25) reinstalling bison                                                                          [##########################################################] 100%
( 7/25) reinstalling sed                                                                            [##########################################################] 100%
( 8/25) reinstalling util-linux                                                                     [##########################################################] 100%
( 9/25) reinstalling fakeroot                                                                       [##########################################################] 100%
(10/25) reinstalling file                                                                           [##########################################################] 100%
(11/25) reinstalling findutils                                                                      [##########################################################] 100%
(12/25) reinstalling flex                                                                           [##########################################################] 100%
(13/25) reinstalling gcc                                                                            [##########################################################] 100%
(14/25) reinstalling gettext                                                                        [##########################################################] 100%
(15/25) reinstalling grep                                                                           [##########################################################] 100%
(16/25) reinstalling groff                                                                          [##########################################################] 100%
(17/25) reinstalling gzip                                                                           [##########################################################] 100%
(18/25) reinstalling libtool                                                                        [##########################################################] 100%
(19/25) reinstalling texinfo                                                                        [##########################################################] 100%
(20/25) reinstalling make                                                                           [##########################################################] 100%
(21/25) reinstalling pacman                                                                         [##########################################################] 100%
(22/25) reinstalling patch                                                                          [##########################################################] 100%
(23/25) reinstalling pkg-config                                                                     [##########################################################] 100%
(24/25) reinstalling sudo                                                                           [##########################################################] 100%
(25/25) reinstalling which                                                                          [##########################################################] 100%
[staf@fanny ~]$ 
</code></pre>

<h5>Install git</h5>

<pre><code>staf@fanny ~]$ sudo pacman -S git        
warning: git-2.6.4-1 is up to date -- reinstalling
resolving dependencies...
looking for conflicting packages...

Packages (1) git-2.6.4-1

Total Installed Size:  22.92 MiB
Net Upgrade Size:       0.00 MiB

:: Proceed with installation? [Y/n] y
(1/1) checking keys in keyring                                                                      [##########################################################] 100%
(1/1) checking package integrity                                                                    [##########################################################] 100%
(1/1) loading package files                                                                         [##########################################################] 100%
(1/1) checking for file conflicts                                                                   [##########################################################] 100%
(1/1) checking available disk space                                                                 [##########################################################] 100%
(1/1) reinstalling git                                                                              [##########################################################] 100%
[staf@fanny ~]$ 
</code></pre>

<h5>Install package-query</h5>

<h6>git clone</h6>

<pre><code>[staf@fanny aur]$ git clone https://aur.archlinux.org/package-query.git 
Cloning into 'package-query'...
remote: Counting objects: 16, done.
remote: Compressing objects: 100% (16/16), done.
remote: Total 16 (delta 0), reused 16 (delta 0)
Unpacking objects: 100% (16/16), done.
Checking connectivity... done.
[staf@fanny aur]$ 
</code></pre>

<h5>makepkg</h5>

<pre><code>[staf@fanny aur]$ cd package-query/
[staf@fanny package-query]$ makepkg -sri
==&gt; Making package: package-query 1.7-1 (Fri Dec 25 14:33:39 UTC 2015)
==&gt; Checking runtime dependencies...
==&gt; Checking buildtime dependencies...
==&gt; Retrieving sources...
  -&gt; Downloading package-query-1.7.tar.gz...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  380k  100  380k    0     0   413k      0 --:--:-- --:--:-- --:--:--  413k
==&gt; Validating source files with md5sums...
    package-query-1.7.tar.gz ... Passed
==&gt; Extracting sources...
  -&gt; Extracting package-query-1.7.tar.gz with bsdtar
==&gt; Starting build()...
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
&lt;snip&gt;
config.status: executing depfiles commands
config.status: executing libtool commands
config.status: executing po-directories commands

package-query:

  Build information:
    source code location   : .
    prefix                 : /usr
    sysconfdir             : /etc
       conf file           : /etc/pacman.conf
    localstatedir          : /var
       database dir        : /var/lib/pacman/
    compiler               : gcc
    compiler flags         : -march=armv7-a -mfloat-abi=hard -mfpu=vfpv3-d16 -O2 -pipe -fstack-protector --param=ssp-buffer-size=4

    package-query version  : 1.7
    using git version      : no
       git ver             : 

  Variable information:
    root working directory : /
    aur base url           : https://aur.archlinux.org

make  all-recursive
make[1]: Entering directory '/home/staf/git/aur/package-query/src/package-query-1.7'
Making all in src
make[2]: Entering directory '/home/staf/git/aur/package-query/src/package-query-1.7/src'
gcc -DLOCALEDIR=\"/usr/share/locale\" -DCONFFILE=\"/etc/pacman.conf\" -DROOTDIR=\"/\" -DDBPATH=\"/var/lib/pacman/\" -DAUR_BASE_URL=\"https://aur.archlinux.org\" -DHAVE_CONFIG_H  -I. -I..   -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -march=armv7-a -mfloat-abi=hard -mfpu=vfpv3-d16 -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -MT aur.o -MD -MP -MF .deps/aur.Tpo -c -o aur.o aur.c
mv -f .deps/aur.Tpo .deps/aur.Po
gcc -DLOCALEDIR=\"/usr/share/locale\" -DCONFFILE=\"/etc/pacman.conf\" -DROOTDIR=\"/\" -DDBPATH=\"/var/lib/pacman/\" -DAUR_BASE_URL=\"https://aur.archlinux.org\" -DHAVE_CONFIG_H  -I. -I..   -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -march=armv7-a -mfloat-abi=hard -mfpu=vfpv3-d16 -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -MT alpm-query.o -MD -MP -MF .deps/alpm-query.Tpo -c -o alpm-query.o alpm-query.c
alpm-query.c: In function 'alpm_pkg_get_realsize':
 /usr/bin/mkdir -p '/home/staf/git/aur/package-query/pkg/package-query/usr/share/man/man8'
&lt;snip&gt;
 /usr/bin/install -c -m 644 package-query.8 '/home/staf/git/aur/package-query/pkg/package-query/usr/share/man/man8'
make[2]: Leaving directory '/home/staf/git/aur/package-query/src/package-query-1.7/doc'
make[1]: Leaving directory '/home/staf/git/aur/package-query/src/package-query-1.7/doc'
make[1]: Entering directory '/home/staf/git/aur/package-query/src/package-query-1.7'
make[2]: Entering directory '/home/staf/git/aur/package-query/src/package-query-1.7'
make[2]: Nothing to be done for 'install-exec-am'.
make[2]: Nothing to be done for 'install-data-am'.
make[2]: Leaving directory '/home/staf/git/aur/package-query/src/package-query-1.7'
make[1]: Leaving directory '/home/staf/git/aur/package-query/src/package-query-1.7'
==&gt; Tidying install...
  -&gt; Purging unwanted files...
  -&gt; Removing libtool files...
  -&gt; Removing static library files...
  -&gt; Compressing man and info pages...
  -&gt; Stripping unneeded symbols from binaries and libraries...
==&gt; Creating package "package-query"...
  -&gt; Generating .PKGINFO file...
  -&gt; Generating .MTREE file...
  -&gt; Compressing package...
==&gt; Leaving fakeroot environment.
==&gt; Finished making: package-query 1.7-1 (Fri Dec 25 14:34:02 UTC 2015)
==&gt; Installing package package-query with pacman -U...
[sudo] password for staf: 
loading packages...
warning: package-query-1.7-1 is up to date -- reinstalling
resolving dependencies...
looking for conflicting packages...

Packages (1) package-query-1.7-1

Total Installed Size:  0.07 MiB
Net Upgrade Size:      0.00 MiB

:: Proceed with installation? [Y/n] y
(1/1) checking keys in keyring                                                                      [##########################################################] 100%
(1/1) checking package integrity                                                                    [##########################################################] 100%
(1/1) loading package files                                                                         [##########################################################] 100%
(1/1) checking for file conflicts                                                                   [##########################################################] 100%
(1/1) checking available disk space                                                                 [##########################################################] 100%
(1/1) reinstalling package-query                                                                    [##########################################################] 100%
[staf@fanny package-query]$ 
</code></pre>

<h5>Install yaourt</h5>

<h6>git clone</h6>

<pre><code>[staf@fanny package-query]$ cd ~/git/aur   
staf@fanny aur]$ git clone https://aur.archlinux.org/yaourt.git  
Cloning into 'yaourt'...
remote: Counting objects: 14, done.
remote: Compressing objects: 100% (11/11), done.
remote: Total 14 (delta 3), reused 14 (delta 3)
Unpacking objects: 100% (14/14), done.
Checking connectivity... done.
[staf@fanny aur]$ 
</code></pre>

<h6>makepkg</h6>

<pre><code>[staf@fanny yaourt]$ makepkg -sri
==&gt; Making package: yaourt 1.7-1 (Fri Dec 25 14:44:12 UTC 2015)
==&gt; Checking runtime dependencies...
==&gt; Checking buildtime dependencies...
==&gt; Retrieving sources...
  -&gt; Downloading yaourt-1.7.tar.gz...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  123k  100  123k    0     0   222k      0 --:--:-- --:--:-- --:--:--  222k
==&gt; Validating source files with md5sums...
    yaourt-1.7.tar.gz ... Passed
==&gt; Extracting sources...
  -&gt; Extracting yaourt-1.7.tar.gz with bsdtar
==&gt; Starting build()...
        GEN yaourt.sh
        GEN pacdiffviewer.sh
        GEN yaourtrc
        GEN lib/util.sh
        GEN lib/pkgbuild.sh
        GEN lib/pacman.sh
        GEN lib/abs.sh
==&gt; Entering fakeroot environment...
==&gt; Starting package()...
/usr/bin/env install -d /home/staf/git/aur/yaourt/pkg/yaourt/usr/bin
/usr/bin/env install -d /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
/usr/bin/env install -d /home/staf/git/aur/yaourt/pkg/yaourt/etc
/usr/bin/env install -d /home/staf/git/aur/yaourt/pkg/yaourt/usr/share/bash-completion/completions
/usr/bin/env install -d /home/staf/git/aur/yaourt/pkg/yaourt/usr/share/man/man{5,8}
# Scripts
/usr/bin/env install -m755 yaourt.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/bin/yaourt
/usr/bin/env install -m755 pacdiffviewer.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/bin/pacdiffviewer
# Configuration
/usr/bin/env install -m644 yaourtrc /home/staf/git/aur/yaourt/pkg/yaourt/etc/yaourtrc
/usr/bin/env install -m644 bashcompletion /home/staf/git/aur/yaourt/pkg/yaourt/usr/share/bash-completion/completions/yaourt
# Libs
/usr/bin/env install -m644 lib/alpm_backup.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
/usr/bin/env install -m644 lib/alpm_query.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
/usr/bin/env install -m644 lib/alpm_stats.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
/usr/bin/env install -m644 lib/abs.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
/usr/bin/env install -m644 lib/aur.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
/usr/bin/env install -m644 lib/util.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
/usr/bin/env install -m644 lib/io.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
/usr/bin/env install -m644 lib/pacman.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
/usr/bin/env install -m644 lib/pkgbuild.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
/usr/bin/env install -m644 lib/misc.sh /home/staf/git/aur/yaourt/pkg/yaourt/usr/lib/yaourt
# Man
/usr/bin/env install -m644 man/*.5 /home/staf/git/aur/yaourt/pkg/yaourt/usr/share/man/man5
/usr/bin/env install -m644 man/*.8 /home/staf/git/aur/yaourt/pkg/yaourt/usr/share/man/man8
# Locales
test -x /usr/bin/msgfmt &amp;&amp; for file in po/*/*.po; \
do \
  package=$(echo $file | /bin/sed -e 's#po/\([^/]\+\).*#\1#'); \
  lang=$(echo $file | /bin/sed -e 's#.*/\([^/]\+\).po#\1#'); \
  /usr/bin/env install -d /home/staf/git/aur/yaourt/pkg/yaourt/usr/share/locale/$lang/LC_MESSAGES; \
  /usr/bin/msgfmt -o /home/staf/git/aur/yaourt/pkg/yaourt/usr/share/locale/$lang/LC_MESSAGES/$package.mo $file; \
done
==&gt; Tidying install...
  -&gt; Purging unwanted files...
  -&gt; Removing libtool files...
  -&gt; Removing static library files...
  -&gt; Compressing man and info pages...
  -&gt; Stripping unneeded symbols from binaries and libraries...
==&gt; Creating package "yaourt"...
  -&gt; Generating .PKGINFO file...
  -&gt; Generating .MTREE file...
  -&gt; Compressing package...
==&gt; Leaving fakeroot environment.
==&gt; Finished making: yaourt 1.7-1 (Fri Dec 25 14:44:16 UTC 2015)
==&gt; Installing package yaourt with pacman -U...
[sudo] password for staf: 
loading packages...
warning: yaourt-1.7-1 is up to date -- reinstalling
resolving dependencies...
looking for conflicting packages...

Packages (1) yaourt-1.7-1

Total Installed Size:  0.72 MiB
Net Upgrade Size:      0.00 MiB

:: Proceed with installation? [Y/n] y
(1/1) checking keys in keyring                                                                      [##########################################################] 100%
(1/1) checking package integrity                                                                    [##########################################################] 100%
(1/1) loading package files                                                                         [##########################################################] 100%
(1/1) checking for file conflicts                                                                   [##########################################################] 100%
(1/1) checking available disk space                                                                 [##########################################################] 100%
(1/1) reinstalling yaourt                                                                           [##########################################################] 100%
[staf@fanny yaourt]$ 
</code></pre>

<h4>Install debootstrap</h4>

<pre><code>[staf@fanny ~]$ yaourt debootstrap
1 aur/cdebootstrap-static 0.6.5-1 (10)
    Bootstrap a Debian system
2 aur/debootstrap 1.0.75-1 [installed] (224)
    A tool used to create a Debian base system from scratch, without requiring the availability of dpkg or apt
3 aur/rinse 3.0.2-2 (0)
    Bootstrap a rpm based distribution like debootstrap
==&gt; Enter n° of packages to be installed (ex: 1 2 3 or 1-3)
==&gt; --------------------------------------------------------
==&gt; 2


==&gt; Downloading debootstrap PKGBUILD from AUR...
x .SRCINFO
x .gitignore
x PKGBUILD
zeilenleser commented on 2015-07-29 10:49 
Thanks for maintaining this package.

just for your information, version 1.0.72 is out since 2015-07-28

Regards

zeilenleser commented on 2015-07-29 12:13 
I followed @Tigrouzens suggestion with this modification

DEF_MIRROR="http://mirrors.kernel.org/ubuntu"

Since only DEF_HTTPS_MIRROR is used in my case I don't know if this works. Testing with the browser was successful.

bricewge commented on 2015-12-07 16:58 (last edited on 2015-12-07 16:58 by bricewge) 
@Tigrouzens why don't you want to install ubuntu-keyring?

Your advice didn't work for me, I still had the error about GPG. But after installing gnupg1 and ubuntu-keyring, enrering the following command worked fine.
# debootstrap wily ubuntu https://mirrors.kernel.org/ubuntu

abeutot commented on 2015-12-08 11:57 
Seems like there is a missing dependency to binutils since ar is needed to extract deb packages.

JonnyJD commented on 2015-12-08 12:12 
binutils is in the "base-devel" group which is an implicit requirement before using the AUR altogether:
https://wiki.archlinux.org/index.php/Arch_User_Repository#Prerequisites

debootstrap 1.0.75-1  (2015-11-12 16:15)
( Unsupported package: Potentially dangerous ! )
==&gt; Edit PKGBUILD ? [Y/n] ("A" to abort)
==&gt; ------------------------------------
==&gt; n

==&gt; debootstrap dependencies:
 - wget (already installed)


==&gt; Continue building debootstrap ? [Y/n]
==&gt; -------------------------------------
==&gt; 
==&gt; Building and installing package
==&gt; Making package: debootstrap 1.0.75-1 (Fri Dec 25 14:48:55 UTC 2015)
==&gt; Checking runtime dependencies...
==&gt; Checking buildtime dependencies...
==&gt; Retrieving sources...
  -&gt; Downloading debootstrap_1.0.75_all.deb...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 65978  100 65978    0     0   155k      0 --:--:-- --:--:-- --:--:--  155k
==&gt; Validating source files with md5sums...
    debootstrap_1.0.75_all.deb ... Passed
==&gt; Extracting sources...
  -&gt; Extracting debootstrap_1.0.75_all.deb with bsdtar
==&gt; Entering fakeroot environment...
==&gt; Starting package()...
==&gt; Tidying install...
  -&gt; Purging unwanted files...
  -&gt; Removing libtool files...
  -&gt; Removing static library files...
  -&gt; Compressing man and info pages...
  -&gt; Stripping unneeded symbols from binaries and libraries...
==&gt; Creating package "debootstrap"...
  -&gt; Generating .PKGINFO file...
  -&gt; Generating .MTREE file...
  -&gt; Compressing package...
==&gt; Leaving fakeroot environment.
==&gt; Finished making: debootstrap 1.0.75-1 (Fri Dec 25 14:48:57 UTC 2015)

==&gt; Continue installing debootstrap ? [Y/n]
==&gt; [v]iew package contents [c]heck package with namcap
==&gt; ---------------------------------------------------
==&gt; y

loading packages...
warning: debootstrap-1.0.75-1 is up to date -- reinstalling
resolving dependencies...
looking for conflicting packages...

Packages (1) debootstrap-1.0.75-1

Total Installed Size:  0.19 MiB
Net Upgrade Size:      0.00 MiB

:: Proceed with installation? [Y/n] y
(1/1) checking keys in keyring                                                                      [##########################################################] 100%
(1/1) checking package integrity                                                                    [##########################################################] 100%
(1/1) loading package files                                                                         [##########################################################] 100%
(1/1) checking for file conflicts                                                                   [##########################################################] 100%
(1/1) checking available disk space                                                                 [##########################################################] 100%
(1/1) reinstalling debootstrap                                                                      [##########################################################] 100%
[staf@fanny ~]$ 
</code></pre>

<h4>gpg keyring</h4>

<p>debootrap needs gnupg1 there is an aur available <a href="https://aur.archlinux.org/packages/gnupg1/"><a href="https://aur.archlinux.org/packages/gnupg1/">https://aur.archlinux.org/packages/gnupg1/</a></a> but armv7h isn&rsquo;t include in the supported architectures so we&rsquo;ll need to add it.</p>

<h5>Install gnupg1</h5>

<h6>Git clone</h6>

<pre><code>[staf@fanny ~]$ cd ~/git/aur
staf@fanny aur]$ git clone https://aur.archlinux.org/gnupg1.git
Cloning into 'gnupg1'...
remote: Counting objects: 8, done.
remote: Compressing objects: 100% (8/8), done.
remote: Total 8 (delta 0), reused 8 (delta 0)
Unpacking objects: 100% (8/8), done.
Checking connectivity... done.
[staf@fanny aur]$ 
</code></pre>

<h6>Update PKGBUILD</h6>

<p>Edit PKGBUILD</p>

<pre><code>[staf@fanny gnupg1]$ vi PKGBUILD 
</code></pre>

<p>and add armv7h to the arch</p>

<pre><code>pkgdesc="GNU Privacy Guard - a PGP replacement tool"
arch=('i686' 'x86_64' 'armv6h' 'armv7h')
license=('GPL3')
depends=('zlib' 'bzip2' 'libldap&gt;=2.4.18' 'libusb-compat' 'curl&gt;=7.16.2' 'readline&gt;=6.0.00')
</code></pre>

<h6>Update the keyring</h6>

<pre><code>[staf@fanny gnupg1]$ gpg --keyserver pgpkeys.mit.edu --recv-keys 2071B08A33BD3F06 
gpg: key 33BD3F06: "NIIBE Yutaka (GnuPG Release Key) &lt;gniibe@fsij.org&gt;" not changed
gpg: Total number processed: 1
gpg:              unchanged: 1
[staf@fanny gnupg1]$ 
</code></pre>

<h6>makepkg</h6>

<pre><code>[staf@fanny gnupg1]$ makepkg -sri
&lt;snip&gt;
  -&gt; Adding install file...
  -&gt; Generating .MTREE file...
  -&gt; Compressing package...
==&gt; Leaving fakeroot environment.
==&gt; Finished making: gnupg1 1.4.19-4 (Sat Dec 26 13:49:19 UTC 2015)
==&gt; Installing package gnupg1 with pacman -U...
[sudo] password for staf: 
loading packages...
resolving dependencies...
looking for conflicting packages...

Packages (1) gnupg1-1.4.19-4

Total Installed Size:  4.97 MiB

:: Proceed with installation? [Y/n] y
(1/1) checking keys in keyring                                                         [##################################################] 100%
(1/1) checking package integrity                                                       [##################################################] 100%
(1/1) loading package files                                                            [##################################################] 100%
(1/1) checking for file conflicts                                                      [##################################################] 100%
(1/1) checking available disk space                                                    [##################################################] 100%
(1/1) installing gnupg1                                                                [##################################################] 100%
[staf@fanny gnupg1]$ 
</code></pre>

<h5>Install the  debian-archive-keyring aur</h5>

<pre><code>[staf@fanny debian]$ yaourt debian-archive-keyring 
1 aur/debian-archive-keyring 2014.3-2 (59)
    GnuPG archive keys of the Debian archive
==&gt; Enter n° of packages to be installed (ex: 1 2 3 or 1-3)
==&gt; --------------------------------------------------------
==&gt; 1


==&gt; Downloading debian-archive-keyring PKGBUILD from AUR...
x .SRCINFO
x PKGBUILD
eworm commented on 2013-05-13 12:20 
Please use package() function, recent makepkg warns about that.

hcartiaux commented on 2013-05-15 08:00 
Fixed

ansys commented on 2014-10-24 11:31 
New url http://ftp.fr.debian.org/debian/pool/main/d/debian-archive-keyring/debian-archive-keyring_2014.1_all.deb

kozaki commented on 2014-12-11 14:58 
Update
url: http://ftp.fr.debian.org/debian/pool/main/d/debian-archive-keyring/debian-archive-keyring_2014.3_all.deb
md5: 02b6818bd7cada9ef9d24534290b559c

Thank you.

debian-archive-keyring 2014.3-2  (2015-06-08 20:20)
( Unsupported package: Potentially dangerous ! )
==&gt; Edit PKGBUILD ? [Y/n] ("A" to abort)
==&gt; ------------------------------------
==&gt; n

==&gt; debian-archive-keyring dependencies:
 - gnupg (already installed)


==&gt; Continue building debian-archive-keyring ? [Y/n]
==&gt; ------------------------------------------------
==&gt; 
==&gt; Building and installing package
==&gt; Making package: debian-archive-keyring 2014.3-2 (Sat Dec 26 13:02:52 UTC 2015)
==&gt; Checking runtime dependencies...
==&gt; Checking buildtime dependencies...
==&gt; Retrieving sources...
  -&gt; Downloading debian-archive-keyring_2014.3_all.deb...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 40060  100 40060    0     0   103k      0 --:--:-- --:--:-- --:--:--  103k
==&gt; Validating source files with md5sums...
    debian-archive-keyring_2014.3_all.deb ... Passed
==&gt; Extracting sources...
  -&gt; Extracting debian-archive-keyring_2014.3_all.deb with bsdtar
==&gt; Entering fakeroot environment...
==&gt; Starting package()...
./
./usr/
./usr/share/
&lt;snip&gt;

==&gt; Continue installing debian-archive-keyring ? [Y/n]
==&gt; [v]iew package contents [c]heck package with namcap
==&gt; ---------------------------------------------------
==&gt; y

loading packages...
resolving dependencies...
looking for conflicting packages...

Packages (1) debian-archive-keyring-2014.3-2

Total Installed Size:  0.07 MiB

:: Proceed with installation? [Y/n] y
(1/1) checking keys in keyring                                                                                                                                                                                                                                  [##################################################################################################################################################################] 100%
(1/1) checking package integrity                                                                                                                                                                                                                                [##################################################################################################################################################################] 100%
(1/1) loading package files                                                                                                                                                                                                                                     [##################################################################################################################################################################] 100%
(1/1) checking for file conflicts                                                                                                                                                                                                                               [##################################################################################################################################################################] 100%
(1/1) checking available disk space                                                                                                                                                                                                                             [##################################################################################################################################################################] 100%
(1/1) installing debian-archive-keyring                                                                                                                                                                                                                         [##################################################################################################################################################################] 100%
[staf@fanny debian]$ 
</code></pre>

<h4>debootstrap</h4>

<pre><code>[staf@fanny debian]$ sudo debootstrap --verbose --include=iproute,iputils-ping --arch armhf jessie ./jessie-chroot http://http.debian.net/debian/
[staf@fanny debian]$ sudo debootstrap --verbose --include=iproute,iputils-ping --arch armhf jessie ./jessie-chroot http://http.debian.net/debian/
[sudo] password for staf: 
I: Retrieving Release 
I: Retrieving Release.gpg 
I: Checking Release signature
I: Valid Release signature (key id 75DDC3C4A499F1A18CB5F3C8CBF8D6FD518E17E1)
&lt;snip&gt;
I: Configuring libgnutls-openssl27:armhf...
I: Configuring iputils-ping...
I: Configuring isc-dhcp-common...
I: Configuring isc-dhcp-client...
I: Configuring tasksel...
I: Configuring tasksel-data...
I: Configuring libc-bin...
I: Configuring systemd...
I: Base system installed successfully.
</code></pre>

<h4>Import</h4>

<pre><code>staf@fanny jessie-chroot]$ sudo tar cpf - . | docker import - debian
[sudo] password for staf: 
1ec165fa2ccb264ab8196b8cd0c339b5d95e1b90879019cde0c633cca738277a
[staf@fanny jessie-chroot]$ 
</code></pre>

<h4>Try it</h4>

<pre><code>staf@fanny jessie-chroot]$ docker run -t -i --rm debian /bin/bash
root@81afce29909f:/# cat /etc/debian_version 
8.2
root@81afce29909f:/# 
</code></pre>

<p><strong><em> Have fun &hellip; </em></strong></p>

<h4>Links</h4>

<ul>
<li><a href="http://archlinuxarm.org/"><a href="http://archlinuxarm.org/">http://archlinuxarm.org/</a></a></li>
<li><a href="http://archlinuxarm.org/platforms/armv7/samsung/odroid-u3"><a href="http://archlinuxarm.org/platforms/armv7/samsung/odroid-u3">http://archlinuxarm.org/platforms/armv7/samsung/odroid-u3</a></a></li>
<li><a href="https://wiki.archlinux.org/index.php/Docker"><a href="https://wiki.archlinux.org/index.php/Docker">https://wiki.archlinux.org/index.php/Docker</a></a></li>
<li><a href="http://forum.odroid.com/viewtopic.php?f=98&t=6638"><a href="http://forum.odroid.com/viewtopic.php?f=98&amp;t=6638">http://forum.odroid.com/viewtopic.php?f=98&amp;t=6638</a>">[Docker] lightweight virtualisation for your odroid host</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
