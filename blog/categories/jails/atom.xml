<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jails | stafwag Blog]]></title>
  <link href="http://stafwag.github.io/blog/blog/categories/jails/atom.xml" rel="self"/>
  <link href="http://stafwag.github.io/blog/"/>
  <updated>2015-07-21T12:42:17+02:00</updated>
  <id>http://stafwag.github.io/blog/</id>
  <author>
    <name><![CDATA[staf wagemakers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using squid to cache FreeBSD packages]]></title>
    <link href="http://stafwag.github.io/blog/blog/2015/06/23/using-squid-to-cache-freebsd-packages/"/>
    <updated>2015-06-23T08:43:00+02:00</updated>
    <id>http://stafwag.github.io/blog/blog/2015/06/23/using-squid-to-cache-freebsd-packages</id>
    <content type="html"><![CDATA[<h2>PKGNG config</h2>

<p>I manage a few <a href="https://www.freebsd.org/doc/handbook/jails.html">FreeBSD jails</a> behind a <a href="http://www.squid-cache.org/">squid proxy</a>. <a href="https://wiki.freebsd.org/pkgng">pkgng</a> is configured to use the proxy:</p>

<p>```
root@rataplan:/root # cat /etc/pkg/FreeBSD.conf</p>

<h1>$FreeBSD: releng/10.1/etc/pkg/FreeBSD.conf 263938 2014-03-30 15:29:54Z bdrewery $</h1>

<p>#</p>

<h1>To disable this repository, instead of modifying or removing this file,</h1>

<h1>create a /usr/local/etc/pkg/repos/FreeBSD.conf file:</h1>

<p>#</p>

<h1>mkdir -p /usr/local/etc/pkg/repos</h1>

<h1>echo "FreeBSD: { enabled: no }" > /usr/local/etc/pkg/repos/FreeBSD.conf</h1>

<p>#</p>

<p>pkg_env: {</p>

<pre><code>    http_proxy: "http://xxx.xxx.xxx.xxx:3128"
</code></pre>

<p>}</p>

<p>FreeBSD: {
  url: "pkg+http://pkg.FreeBSD.org/${ABI}/latest",
  mirror_type: "srv",
  signature_type: "fingerprints",
  fingerprints: "/usr/share/keys/pkg",
  enabled: yes
}
root@rataplan:/root #</p>

<p>```</p>

<h2>SQUID config</h2>

<h3>Recompile</h3>

<p>The squid proxy doesn't cache to the FreeBSD packages. The squid pkgng package  is compiled with
"LAX_HTTP  Do not enforce strict HTTP compliance" option disabled. which doesn't allow you to override the cache headers sent by the remote site.</p>

<p>In order to cache the FreeBSD packages we need to recompile squid with "LAX_HTTPD" enabled.</p>

<h4>Updating the ports</h4>

<h5>Physical system</h5>

<p>If you use a physical FreeBSD system as your proxy run the "portsnap fetch" command.</p>

<p><code>
[root@rataplan ~]# portsnap fetch
Looking up portsnap.FreeBSD.org mirrors... 7 mirrors found.
Fetching snapshot tag from ec2-eu-west-1.portsnap.freebsd.org... done.
Fetching snapshot metadata... done.
Updating from Mon Jun 22 14:30:21 CEST 2015 to Tue Jun 23 08:39:41 CEST 2015.
Fetching 4 metadata patches... done.
Applying metadata patches... done.
Fetching 0 metadata files... done.
Fetching 417 patches.
(417/417) 100.00%  done.                                       
done.
Applying patches...
done.
Fetching 3 new ports or files... done.
[root@rataplan ~]#
</code></p>

<p>```
[root@rataplan ~]# portsnap extract
/usr/ports/.arcconfig
/usr/ports/.gitignore
/usr/ports/CHANGES
/usr/ports/CONTRIBUTING.md
/usr/ports/COPYRIGHT
/usr/ports/GIDs</p>

<p><snip></p>

<p>/usr/ports/x11/zenity/
Building new INDEX files... done.
[root@rataplan ~]#</p>

<p>```</p>

<h5>Jail</h5>

<p>If you use an <a href="http://erdgeist.org/arts/software/ezjail/">ezjail</a> as your proxy run the "ezjail-admin update -P" command.</p>

<h4>Build</h4>

<h5>Stop SQUID</h5>

<p><code>
root@stafproxy:/usr/ports/www/squid # /usr/local/etc/rc.d/squid stop
squid not running? (check /var/run/squid/squid.pid).
root@stafproxy:/usr/ports/www/squid #
</code></p>

<h5>Make config</h5>

<p><code>
root@stafproxy:/usr/ports/www/squid # cd
root@stafproxy:/root # cd /usr/ports/www/squid
root@stafproxy:/usr/ports/www/squid # make config
</code></p>

<p>```</p>

<pre><code>   ┌─────────────────────────────── squid-3.5.5 ──────────────────────────────────┐
   │ ┌──────────────────────────────────────────────────────────────────────────┐ │  
   │ │ [ ] ARP_ACL         ARP/MAC/EUI based authentification                   │ │  
   │ │ [ ] AUTH_LDAP       Install LDAP authentication helpers                  │ │  
   │ │ [x] AUTH_NIS        Install NIS/YP authentication helpers                │ │  
   │ │ [ ] AUTH_SASL       Install SASL authentication helpers                  │ │  
   │ │ [ ] AUTH_SMB        Install SMB auth. helpers (req. Samba)               │ │  
   │ │ [ ] AUTH_SQL        Install SQL based auth (uses MySQL)                  │ │  
   │ │ [ ] CACHE_DIGESTS   Use cache digests                                    │ │  
   │ │ [ ] DEBUG           Build with extended debugging support                │ │  
   │ │ [ ] DELAY_POOLS     Delay pools (bandwidth limiting)                     │ │  
   │ │ [x] DOCS            Build and/or install documentation                   │ │  
   │ │ [ ] ECAP            Loadable content adaptation modules                  │ │  
   │ │ [ ] ESI             ESI support                                          │ │  
   │ │ [x] EXAMPLES        Build and/or install examples                        │ │  
   │ │ [ ] FOLLOW_XFF      Support for the X-Following-For header               │ │  
   │ │ [x] FS_AUFS         AUFS (threaded-io) support                           │ │  
   │ │ [x] FS_DISKD        DISKD storage engine controlled by separate service  │ │  
   │ │ [ ] FS_ROCK         ROCK storage engine                                  │ │  
   │ │ [x] HTCP            HTCP support                                         │ │  
   │ │ [ ] ICAP            the ICAP client                                      │ │  
   │ │ [ ] ICMP            ICMP pinging and network measurement                 │ │  
   │ │ [x] IDENT           Ident lookups (RFC 931)                              │ │  
   │ │ [x] IPV6            IPv6 protocol support                                │ │  
   │ │ [x] KQUEUE          Kqueue(2) support                                    │ │  
   │ │ [ ] LARGEFILE       Support large (&gt;2GB) cache and log files             │ │  
   │ │ [x] LAX_HTTP        Do not enforce strict HTTP compliance                │ │  
   │ │ [ ] NETTLE          Nettle MD5 algorithm support                         │ │  
   │ │ [x] SNMP            SNMP support                                         │ │  
   │ │ [ ] SSL             SSL gatewaying support                               │ │  
   │ │ [ ] SSL_CRTD        Use ssl_crtd to handle SSL cert requests             │ │  
   │ │ [ ] STACKTRACES     Enable automatic backtraces on fatal errors          │ │  
   │ │ [ ] TP_IPF          Transparent proxying with IPFilter                   │ │  
   │ │ [ ] TP_IPFW         Transparent proxying with IPFW                       │ │  
   │ │ [ ] TP_PF           Transparent proxying with PF                         │ │  
   │ │ [ ] VIA_DB          Forward/Via database                                 │ │  
   │ └─────v(+)─────────────────────────────────────────────────────────82%─────┘ │  
   ├──────────────────────────────────────────────────────────────────────────────┤  
   │                       &lt;  OK  &gt;            &lt;Cancel&gt;                           │  
   └──────────────────────────────────────────────────────────────────────────────┘  
</code></pre>

<p>```</p>

<h5>Make install</h5>

<p>```
root@stafproxy:/usr/ports/www/squid # make
===>  License GPLv2 accepted by the user
===>  Found saved configuration for squid-3.5.5
===>   squid-3.5.5 depends on file: /usr/local/sbin/pkg - found
===> Fetching all distfiles required by squid-3.5.5 for building
===>  Extracting for squid-3.5.5
=> SHA256 Checksum OK for squid3.5/squid-3.5.5.tar.xz.</p>

<p><snip></p>

<p>Making install in test-suite
install  -m 0644 /var/ports/basejail/usr/ports/www/squid/work/squid-3.5.5/helpers/basic_auth/DB/passwd.sql  /var/ports/basejail/usr/ports/www/squid/work/stage/usr/local/share/examples/squid
(cd /var/ports/basejail/usr/ports/www/squid/work/squid-3.5.5 &amp;&amp; install  -m 0644 QUICKSTART README RELEASENOTES.html doc/debug-sections.txt /var/ports/basejail/usr/ports/www/squid/work/stage/usr/local/share/doc/squid)
/bin/mkdir -p /var/ports/basejail/usr/ports/www/squid/work/stage/var/squid/logs
/bin/rmdir /var/ports/basejail/usr/ports/www/squid/work/stage/var/run/squid
====> Compressing man pages (compress-man)
===> Staging rc.d startup script(s)
```</p>

<p>```
root@stafproxy:/usr/ports/www/squid # make install clean
===>  Installing for squid-3.5.5                                                                                                                                                                                                           <br/>
===>   squid-3.5.5 depends on file: /usr/local/bin/perl5.20.2 - found                                                                                                                                                                      <br/>
===>  Checking if squid already installed                                                                                                                                                                                                  <br/>
===>   Registering installation for squid-3.5.5</p>

<p><snip></p>

<p>===> SECURITY REPORT:</p>

<pre><code>  This port has installed the following files which may act as network
  servers and may therefore pose a remote security risk to the system.
</code></pre>

<p>/usr/local/libexec/squid/basic_radius_auth
/usr/local/sbin/squid</p>

<pre><code>  This port has installed the following startup scripts which may cause
  these network services to be started at boot time.
</code></pre>

<p>/usr/local/etc/rc.d/squid</p>

<pre><code>  If there are vulnerabilities in these programs there may be a security
  risk to the system. FreeBSD makes no guarantee about the security of
  ports included in the Ports Collection. Please type 'make deinstall'
  to deinstall the port if this is a concern.

  For more information, and contact details about the security
  status of this software, see the following webpage: 
</code></pre>

<p>http://www.squid-cache.org/</p>

<p>```</p>

<h5>pkg lock</h5>

<p>Lock the squid package to prevent the upgrade from pkgng tree.</p>

<p>```
root@stafproxy:/usr/ports/www/squid # pkg lock squid
squid-3.5.5: lock this package? [y/N]: y
Locking squid-3.5.5
root@stafproxy:/usr/ports/www/squid #</p>

<p>```</p>

<p>View the locked pkgng packages</p>

<p><code>
root@stafproxy:/usr/ports/www/squid # pkg lock -l
Currently locked packages:
squid-3.5.5
root@stafproxy:/usr/ports/www/squid #
</code></p>

<h3>SQUID config</h3>

<h4>Update squid.conf</h4>

<p>Edit the squid config:</p>

<p>```
root@stafproxy:/usr/ports/www/squid # cd /usr/local/etc/squid/
root@stafproxy:/usr/local/etc/squid # vi squid.conf</p>

<p>```</p>

<p>Add a "refresh_pattern" for "pkgmir.pkg.freebsd.org":</p>

<p><code>
refresh_pattern ^ftp:           1440    20%     10080
refresh_pattern ^http://pkgmir.pkg.freebsd.org/.*\.txz          1440    100%    10080 ignore-private ignore-must-revalidate override-expire ignore-no-cache
refresh_pattern ^gopher:        1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0     0%      0
refresh_pattern .               0       20%     4320
</code></p>

<h4>Start squid</h4>

<p>```
root@stafproxy:/usr/local/etc/squid # ../rc.d/squid start
Starting squid.
root@stafproxy:/usr/local/etc/squid #</p>

<p>```</p>

<h4>rc.conf</h4>

<p>Make sure that the system is configured to start squid during the system startup.</p>

<p>```
root@stafproxy:/usr/local/etc/squid # cat /etc/rc.conf
#</p>

<h1>squid</h1>

<p>#</p>

<p>squid_enable="YES"</p>

<p>root@stafproxy:/usr/local/etc/squid #
```</p>

<p>SQUID should cache the pkgng downloads now.</p>

<p><em>Have fun</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Freebsd 9.1 jails with Qjail]]></title>
    <link href="http://stafwag.github.io/blog/blog/2013/02/16/freebsd-9.1-jails-with-qjail/"/>
    <updated>2013-02-16T12:35:00+01:00</updated>
    <id>http://stafwag.github.io/blog/blog/2013/02/16/freebsd-9.1-jails-with-qjail</id>
    <content type="html"><![CDATA[<hr />


<p><strong></p>

<p>I'm using <em>ezjail</em> <a href="http://stafwag.github.io/blog/blog/2013/04/10/migrating-from-qjail-to-ezjail/">now</a>.</p>

<p>The reason for this is that the <a href="http://www.freshports.org/sysutils/qjail">port</a> is marked as RESTRICTED.
Since it seems to be a fork from <a href="http://erdgeist.org/arts/software/ezjail/">ezjail</a> without respecting the copyright and license <a href="https://lists.freebsd.org/pipermail/freebsd-jail/2013-March/002149.html">https://lists.freebsd.org/pipermail/freebsd-jail/2013-March/002149.html</a>.</p>

<p></strong></p>

<hr />


<p>I'm adding more services to my <a href="http://stafwag.github.io/blog/blog/2012/12/16/running-freebsd-9.0-on-asus-c60m1-i-motherboard/">freebsd system</a></p>

<p>I'm coming from the <a href="http://en.wikipedia.org/wiki/Solaris_(operating_system)">solaris world</a> where it's a common practice to run services in separated <a href="http://en.wikipedia.org/wiki/Solaris_Containers">containers</a> for security reasons.</p>

<p>On FreeBSD there are <a href="http://en.wikipedia.org/wiki/FreeBSD_jail">jails</a> to isolate services and improve security.</p>

<p>At first I didn't like jails the way the <a href="http://www.freebsd.org/doc/handbook/jails.html">freebsd handbook</a> describes it requires a buildworld which takes a long time on my system with a AMD C-60 CPU.</p>

<p>Lucky <a href="http://sourceforge.net/projects/qjail/">Qjail</a> makes the deployment a lot easier.</p>

<h3>Installing Qjail</h3>

<p>```
[root@rataplan ~]# cd /usr/ports/sysutils/qjail/
[root@rataplan /usr/ports/sysutils/qjail]# make install clean
===>  License BSD accepted by the user
=> qjail-1.7.tar.bz2 doesn't seem to exist in /usr/ports/distfiles/.
=> Attempting to fetch http://heanet.dl.sourceforge.net/project/qjail/qjail-1.7.tar.bz2
qjail-1.7.tar.bz2                             100% of   39 kB  139 kBps
===>  Extracting for qjail-1.7
=> SHA256 Checksum OK for qjail-1.7.tar.bz2.
===>  Patching for qjail-1.7
===>  Configuring for qjail-1.7
===>  Installing for qjail-1.7
===>   Generating temporary packing list
===>  Checking if sysutils/qjail already installed
#
Use the qjail utility to deploy small or large numbers of jails quickly.</p>

<p>First issue "rehash" command to enable the qjail command (if using csh).
Then issue "man qjail-intro" to read the qjail introduction.
After reading that do "man qjail" for the usage details.
#
===>   Compressing manual pages for qjail-1.7
===>   Registering installation for qjail-1.7
===>  Cleaning for qjail-1.7
[root@rataplan /usr/ports/sysutils/qjail]#
```</p>

<h3>Create /usr/jails</h3>

<p><code>
[root@rataplan ~]# zfs create zroot/usr/jails
</code></p>

<h3>mount the freebsd 9.1 dvd</h3>

<p><code>
root@rataplan:/root # mount_cd9660 /dev/cd0 /mnt/
</code></p>

<h3>qjail install</h3>

<p>```
root@rataplan:/root # qjail install -f /mnt/usr/freebsd-dist/</p>

<p>The base RELEASE distribution files are populating the fulljail.
Est LT 1 minute elapse time for this to complete.</p>

<p>The lib32 RELEASE distribution files are populating the fulljail.
Est LT 1 minute elapse time for this to complete.</p>

<p>Basejail &amp; newjail are being populated.
Est LT 1 minute elapse time for this to complete.</p>

<p>Successfully installed qjail system.</p>

<p>root@rataplan:/root #</p>

<p>```</p>

<h3>Creating a zfs filesystem for the jail</h3>

<p>```
root@rataplan:/usr/local/etc # zfs create zroot/usr/jails/stafdb
root@rataplan:/usr/local/etc #</p>

<p>```</p>

<h3>Creating a jail with Qjail</h3>

<p><code>
[root@rataplan ~]# qjail create -n re0 stafdb 192.168.1.43
Successfully created  stafdb
[root@rataplan ~]#
</code></p>

<h3>Start the jail</h3>

<p><code>
root@rataplan:/usr/local/etc # qjail start stafdb
Jail started successfully. stafdb
root@rataplan:/usr/local/etc #
</code></p>

<h3>List the jails</h3>

<p>```
root@rataplan:/usr/local/etc # qjail list</p>

<p>STA JID  NIC IP              Jailname</p>

<hr />

<p>DR  4    re0 192.168.1.42    stafmail
DR  3    re0 192.168.1.41    staffs
DR  6    re0 192.168.1.43    stafdb</p>

<p>root@rataplan:/usr/local/etc #</p>

<p>```</p>

<h3>console access</h3>

<p>```
root@rataplan:/usr/local/etc # qjail console stafdb
Last login: Sat Feb 23 16:19:32 on pts/0
FreeBSD 9.1-RELEASE (GENERIC) #0 r244912: Tue Jan  1 14:13:25 CET 2013</p>

<p>Welcome to your FreeBSD jail
stafdb /root >
```</p>

<h3>install the freebsd ports to the jail</h3>

<p>```
root@rataplan:/usr/local/etc # qjail update -p stafdb</p>

<p>Sat Feb 23 16:21:55 CET 2013</p>

<p>The elapse download time of the portsnap compressed ports file
is estimated at 25 minutes for the initial fetch.
Subsequent fetches will generally take less than a minute.</p>

<p>Looking up portsnap.FreeBSD.org mirrors... 6 mirrors found.
Fetching snapshot tag from ec2-eu-west-1.portsnap.freebsd.org... done.
Fetching snapshot metadata... done.
Updating from Sat Feb 16 11:47:49 CET 2013 to Sat Feb 23 15:58:32 CET 2013.
Fetching 4 metadata patches... done.
Applying metadata patches... done.
Fetching 0 metadata files... done.
Fetching 524 patches.....10....20....30....40....50....60....70....80....90....100....110....120....130....140....150....160....170....180....190....200....210....220....230....240....250....260....270....280....290....300....310....320....330....340....350....360....370....380....390....400....410....420....430....440....450....460....470....480....490....500....510....520.. done.
Applying patches... done.
Fetching 42 new ports or files... done.
Portsnap fetch completed successfully</p>

<p>Sat Feb 23 16:22:40 CET 2013</p>

<p>The ports basejail/usr/ports directory tree is being updated.
The elapse time for this to complete is estimated at 1 minute
to 10 minutes depending on how current your ports system is.</p>

<p>Portsnap update completed successfully
root@rataplan:/usr/local/etc #
```</p>

<h3>update the base jail</h3>

<p>```
root@rataplan:/usr/local/etc # qjail stop
Jail stopped successfully. stafmail
Jail stopped successfully. staffs
Jail already stopped.      stafdb
root@rataplan:/usr/local/etc #</p>

<p>root@rataplan:/usr/local/etc # qjail update -b</p>

<p>Deletion of basejail binaries successful for bin.
Deletion of basejail binaries successful for lib.
Deletion of basejail binaries successful for libexec.
Deletion of basejail binaries successful for sbin.
Deletion of basejail binaries successful for usr/bin.
Deletion of basejail binaries successful for usr/include.
Deletion of basejail binaries successful for usr/lib.
Deletion of basejail binaries successful for usr/libdata.
Deletion of basejail binaries successful for usr/libexec.
Deletion of basejail binaries successful for usr/sbin.
Deletion of basejail binaries successful for usr/lib32.</p>

<p>Copied host's binaries to basejail successfully for bin.
Copied host's binaries to basejail successfully for lib.
Copied host's binaries to basejail successfully for libexec.
Copied host's binaries to basejail successfully for sbin.
Copied host's binaries to basejail successfully for usr/bin.
Copied host's binaries to basejail successfully for usr/include.
Copied host's binaries to basejail successfully for usr/lib.
Copied host's binaries to basejail successfully for usr/libdata.
Copied host's binaries to basejail successfully for usr/libexec.
Copied host's binaries to basejail successfully for usr/sbin.
Copied host's binaries to basejail successfully for usr/lib32.</p>

<p>Host to basejail binaries update completed successfully.
root@rataplan:/usr/local/etc #</p>

<p>root@rataplan:/usr/local/etc # qjail start
Jail started successfully. stafmail
Jail started successfully. staffs
Jail started successfully. stafdb
root@rataplan:/usr/local/etc #</p>

<p>```</p>

<h3>update /etc/rc.conf</h3>

<p>```
#</p>

<h1>qjails</h1>

<p>#</p>

<p>qjail_enable="YES"</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
