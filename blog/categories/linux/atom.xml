<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | stafwag Blog]]></title>
  <link href="https://stafwag.github.io/blog/blog/categories/linux/atom.xml" rel="self"/>
  <link href="https://stafwag.github.io/blog/"/>
  <updated>2019-01-21T20:23:24+01:00</updated>
  <id>https://stafwag.github.io/blog/</id>
  <author>
    <name><![CDATA[staf wagemakers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting Up OpenStack-Ansible All-In-One on a Centos 7 System]]></title>
    <link href="https://stafwag.github.io/blog/blog/2019/01/21/settinp-up-openstack-ansible-all-in-one-on-a-centos-7-system/"/>
    <updated>2019-01-21T19:51:32+01:00</updated>
    <id>https://stafwag.github.io/blog/blog/2019/01/21/settinp-up-openstack-ansible-all-in-one-on-a-centos-7-system</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/openstack-logo.png" width="150" height="150" title="&ldquo;openstack-logo&rdquo;" ></p>

<p><a href="https://www.openstack.org/">Openstack</a> is nice platform to deploy <a href="https://en.wikipedia.org/wiki/Cloud_computing#Infrastructure_as_a_service_.28IaaS.29">an Infrastructure as a service</a> and is a <a href="https://governance.openstack.org/tc/reference/projects/index.html">collection of projects</a> but it can be a bit difficult to setup. <a href="https://docs.openstack.org">The documentation</a> is really great if you want to setup openstack by hand and there are a few openstack distributions that makes it easier to install it.</p>

<p><a href="https://www.ansible.org">Ansible</a> is a very nice tool for system automatisation and is one that&rsquo;s easier to learn.</p>

<p><img class="left" src="/images/ansible-logo-red-t.png" width="150" height="150" title="&ldquo;ansible-logo-red&rdquo;" ></p>

<p>Wouldn&rsquo;t be nice if we could make the openstack installation easier with ansible? That&rsquo;s exactly what <a href="https://github.com/openstack/openstack-ansible">Openstack-Ansible</a>
 does.</p>

<p>In this blog post we&rsquo;ll setup <a href="https://docs.openstack.org/openstack-ansible/latest/user/aio/quickstart.html">&ldquo;an all-in-one&rdquo; openstack installation</a> on <a href="https://www.centos.org">Centos 7</a>. The installer will install openstack into <a href="https://linuxcontainers.org/">lxc containers</a> and it&rsquo;s nice way to learn how openstack works and how to operate it.</p>

<h1>Preparation</h1>

<h2>System requirements</h2>

<p>I use a Centos 7 virtual system running as a <a href="https://www.linux-kvm.org">KVM</a> instance with <a href="http://stafwag.github.io/blog/blog/2018/06/04/nested-virtualization-in-kvm/">nested KVM virtualasation enabled</a>. The system requiremensts
The minimun requiremenst are:</p>

<ul>
<li>8 CPU cores</li>
<li>50 GB of free diskspace</li>
<li>8GB RAM</li>
</ul>


<h2>update &hellip;.</h2>

<p>Make sure that your system is up-to-update</p>

<pre><code>[staf@openstack ~]$ sudo yum update -y

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for staf: 
Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
 * base: distrib-coffee.ipsl.jussieu.fr
 * extras: mirror.in2p3.fr
 * updates: centos.mirror.fr.planethoster.net
base                                                                                                                                    | 3.6 kB  00:00:00     
extras                                                                                                                                  | 3.4 kB  00:00:00     
updates                                                                                                                                 | 3.4 kB  00:00:00     
No packages marked for update
[staf@openstack ~]$ 
</code></pre>

<h2>Install git</h2>

<p>We&rsquo;ll need git to install the ansible playbooks and the Openstack-Ansible installation scripts.</p>

<pre><code>[staf@openstack ~]$ yum install git
Loaded plugins: fastestmirror
You need to be root to perform this command.
[staf@openstack ~]$ sudo yum install git
Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
 * base: mirror.in2p3.fr
 * extras: mirror.in2p3.fr
 * updates: centos.mirror.fr.planethoster.net
Package git-1.8.3.1-20.el7.x86_64 already installed and latest version
Nothing to do
[staf@openstack ~]$ 
</code></pre>

<h2>Ansible&hellip;.</h2>

<p>This is a bit of a pitfail&hellip; The Openstack-Ansible bootstrap script will download and install his own version of ansible and create a link to <code>/usr/local/bin</code>. So <code>/usr/local/bin</code> must be in your $PATH.  Ansible shouldn&rsquo;t be installed on your system or if it is installed  it shouln&rsquo;t be executed instead of the ansible version that is builded with Openstack-Ansible.</p>

<p>On most GNU/Linux distributions have <code>/usr/local/bin</code> and <code>/usr/local/sbin</code>  is in the $PATH but not on centos, so we&rsquo;ll need to add it.</p>

<h3>Make sure that ansible insn&rsquo;t installed</h3>

<pre><code>[staf@openstack ~]$ sudo rpm -qa | grep -i ansible
[sudo] password for staf: 
[staf@openstack ~]$ 
</code></pre>

<h3>Update your $PATH</h3>

<pre><code>[root@openstack ~]# export PATH=/usr/local/bin:$PATH
</code></pre>

<p>If you want to have <code>/usr/local/bin</code> in your $PATH  update <code>/etc/profile</code>  or <code>$HOME/.profile</code></p>

<h2>ssh password authentication</h2>

<p>The ansibe playbooks will disable <code>PasswordAuthentication</code>, make sure that you login with a ssh key. - Password authentication is obsolete anyway -</p>

<h2>firewalld</h2>

<p>Firewall is enabled on Centos by default, the default iptables rules prevent communication between the openstack containers.</p>

<h3>stop and disable firewalld</h3>

<pre><code>[root@openstack ~]# systemctl stop firewalld
[root@openstack ~]# systemctl disable firewalld
Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.
Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.
</code></pre>

<h3>verify</h3>

<pre><code>root@openstack ~]# iptables -L
Chain INPUT (policy ACCEPT)
target     prot opt source               destination         

Chain FORWARD (policy ACCEPT)
target     prot opt source               destination         

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination         
[root@openstack ~]# 
</code></pre>

<h1>Openstack installation</h1>

<p>The installation will take some time therefor it&rsquo;s recommended to use an session manager like <a href="https://github.com/tmux/tmux/">tmux</a> or <a href="https://www.gnu.org/software/screen/">GNU screen</a></p>

<h2>Bootstrap</h2>

<h3>git clone</h3>

<p>clone the <a href="https://git.openstack.org/openstack/openstack-ansible">openstack-ansible git repo</a></p>

<pre><code>[root@openstack ~]# git clone https://git.openstack.org/openstack/openstack-ansible /opt/openstack-ansible
Cloning into '/opt/openstack-ansible'...
remote: Counting objects: 67055, done.
remote: Compressing objects: 100% (32165/32165), done.
remote: Total 67055 (delta 45474), reused 52564 (delta 32073)
Receiving objects: 100% (67055/67055), 14.60 MiB | 720.00 KiB/s, done.
Resolving deltas: 100% (45474/45474), done.
[root@openstack ~]# 
</code></pre>

<pre><code>[root@openstack ~]# cd /opt/openstack-ansible
[root@openstack openstack-ansible]# 
</code></pre>

<h3>choose you Openstack releases</h3>

<p>Openstack has release shedule about every 6 months the current stable release is <a href="https://releases.openstack.org/rocky/index.html">Rocky</a>. Every Openstack release has his own branch in the git repo. Each Openstack-Ansible release is tagged in the git repo. So either you&rsquo;ll need checkout Openstack-Ansible release tag or the bracnh. We&rsquo;ll checkout the Rocky branch.</p>

<h4>get the list of branches</h4>

<pre><code>[root@openstack openstack-ansible]# git branch -a
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
  remotes/origin/stable/ocata
  remotes/origin/stable/pike
  remotes/origin/stable/queens
  remotes/origin/stable/rocky
[root@openstack openstack-ansible]# 
</code></pre>

<h5>checkout the branch</h5>

<pre><code>[root@openstack openstack-ansible]# git checkout stable/rocky
Branch stable/rocky set up to track remote branch stable/rocky from origin.
Switched to a new branch 'stable/rocky'
[root@openstack openstack-ansible]# 
</code></pre>

<h3>Bootstrap ansible</h3>

<p>Execute <code>scripts/bootstrap-ansible.sh</code> this will install the required packages and ansible playbooks.</p>

<pre><code>[root@openstack openstack-ansible]# scripts/bootstrap-ansible.sh
+ export HTTP_PROXY=
+ HTTP_PROXY=
+ export HTTPS_PROXY=
+ HTTPS_PROXY=
+ export ANSIBLE_PACKAGE=ansible==2.5.14
+ ANSIBLE_PACKAGE=ansible==2.5.14
+ export ANSIBLE_ROLE_FILE=ansible-role-requirements.yml
+ ANSIBLE_ROLE_FILE=ansible-role-requirements.yml
+ export SSH_DIR=/root/.ssh
+ SSH_DIR=/root/.ssh
+ export DEBIAN_FRONTEND=noninteractive
+ DEBIAN_FRONTEND=noninteractive
&lt;SNIP&gt;
+ unset ANSIBLE_LIBRARY
+ unset ANSIBLE_LOOKUP_PLUGINS
+ unset ANSIBLE_FILTER_PLUGINS
+ unset ANSIBLE_ACTION_PLUGINS
+ unset ANSIBLE_CALLBACK_PLUGINS
+ unset ANSIBLE_CALLBACK_WHITELIST
+ unset ANSIBLE_TEST_PLUGINS
+ unset ANSIBLE_VARS_PLUGINS
+ unset ANSIBLE_STRATEGY_PLUGINS
+ unset ANSIBLE_CONFIG
+ '[' false == true ']'
+ echo 'System is bootstrapped and ready for use.'
System is bootstrapped and ready for use.
[root@openstack openstack-ansible]# 
</code></pre>

<h4>Verify</h4>

<p> <code>scripts/bootstrap-ansible</code> created <code>/opt/ansible-runtime</code> and create amd updated <code>//usr/local/bin</code> with a few links.</p>

<pre><code>[root@openstack openstack-ansible]# ls -ld /opt/*
drwxr-xr-x.  5 root root   56 Jan 12 11:42 /opt/ansible-runtime
drwxr-xr-x. 14 root root 4096 Jan 12 11:43 /opt/openstack-ansible
[root@openstack openstack-ansible]# ls -ltr /usr/local/bin/
total 8
lrwxrwxrwx. 1 root root   32 Jan 12 11:43 ansible -&gt; /usr/local/bin/openstack-ansible
lrwxrwxrwx. 1 root root   39 Jan 12 11:43 ansible-config -&gt; /opt/ansible-runtime/bin/ansible-config
lrwxrwxrwx. 1 root root   43 Jan 12 11:43 ansible-connection -&gt; /opt/ansible-runtime/bin/ansible-connection
lrwxrwxrwx. 1 root root   40 Jan 12 11:43 ansible-console -&gt; /opt/ansible-runtime/bin/ansible-console
lrwxrwxrwx. 1 root root   39 Jan 12 11:43 ansible-galaxy -&gt; /opt/ansible-runtime/bin/ansible-galaxy
lrwxrwxrwx. 1 root root   36 Jan 12 11:43 ansible-doc -&gt; /opt/ansible-runtime/bin/ansible-doc
lrwxrwxrwx. 1 root root   42 Jan 12 11:43 ansible-inventory -&gt; /opt/ansible-runtime/bin/ansible-inventory
lrwxrwxrwx. 1 root root   32 Jan 12 11:43 ansible-playbook -&gt; /usr/local/bin/openstack-ansible
lrwxrwxrwx. 1 root root   37 Jan 12 11:43 ansible-pull -&gt; /opt/ansible-runtime/bin/ansible-pull
lrwxrwxrwx. 1 root root   38 Jan 12 11:43 ansible-vault -&gt; /opt/ansible-runtime/bin/ansible-vault
-rw-r--r--. 1 root root 3169 Jan 12 11:43 openstack-ansible.rc
-rwxr-xr-x. 1 root root 2638 Jan 12 11:43 openstack-ansible
</code></pre>

<p>Verify that ansible command is one that&rsquo;s installed bu the Openstack-Ansible bootstrap script.</p>

<pre><code>[root@openstack openstack-ansible]# which ansible
/usr/local/bin/ansible
</code></pre>

<h3>Bootstrap AIO</h3>

<pre><code>[root@openstack openstack-ansible]# scripts/bootstrap-aio.sh
+ export BOOTSTRAP_OPTS=
+ BOOTSTRAP_OPTS=
+++ dirname scripts/bootstrap-aio.sh
++ readlink -f scripts/..
+ export OSA_CLONE_DIR=/opt/openstack-ansible
TASK [Gathering Facts] *****************************************************************************************************
ok: [localhost]

TASK [sshd : Set OS dependent variables] ***********************************************************************************
ok: [localhost] =&gt; (item=/etc/ansible/roles/sshd/vars/RedHat_7.yml)

TASK [sshd : OS is supported] **********************************************************************************************
ok: [localhost] =&gt; {
    "changed": false, 
    "msg": "All assertions passed"
}

TASK [sshd : Install ssh packages] 
&lt;SNIP&gt;
EXIT NOTICE [Playbook execution success] **************************************
===============================================================================
+ popd
/opt/openstack-ansible
+ unset ANSIBLE_INVENTORY
+ unset ANSIBLE_VARS_PLUGINS
+ unset HOST_VARS_PATH
+ unset GROUP_VARS_PATH
[root@openstack openstack-ansible]# 
</code></pre>

<h3>Run the playbooks</h3>

<p>We&rsquo;ll to run a few playbooks to setup the containers and our Openstack environment.</p>

<p>Move to the openstack-ansible playbook directory.</p>

<pre><code>[root@aio1 ~]# cd /opt/openstack-ansible/playbooks/
[root@aio1 playbooks]# pwd
/opt/openstack-ansible/playbooks
[root@aio1 playbooks]# 
</code></pre>

<p>and exexcute the playbooks.</p>

<pre><code>[root@openstack playbooks]# openstack-ansible setup-hosts.yml
[root@openstack playbooks]# openstack-ansible setup-infrastructure.yml
[root@aio1 playbooks]# openstack-ansible setup-openstack.yml
</code></pre>

<p>If all goes well your openstack installation is completed.</p>

<p>You can verify the openstack containers with <code>lxc-ls</code></p>

<pre><code>[root@aio1 playbooks]# lxc-ls --fancy
NAME                                   STATE   AUTOSTART GROUPS            IPV4                                           IPV6 
aio1_cinder_api_container-c211b759     RUNNING 1         onboot, openstack 10.255.255.43, 172.29.237.244, 172.29.244.190  -    
aio1_galera_container-9a90cbd9         RUNNING 1         onboot, openstack 10.255.255.50, 172.29.239.126                  -    
aio1_glance_container-c05aab79         RUNNING 1         onboot, openstack 10.255.255.218, 172.29.236.160, 172.29.247.238 -    
aio1_horizon_container-81943ba2        RUNNING 1         onboot, openstack 10.255.255.160, 172.29.237.37                  -    
aio1_keystone_container-a5859104       RUNNING 1         onboot, openstack 10.255.255.40, 172.29.236.95                   -    
aio1_memcached_container-ab998d0e      RUNNING 1         onboot, openstack 10.255.255.175, 172.29.239.49                  -    
aio1_neutron_server_container-439aeb90 RUNNING 1         onboot, openstack 10.255.255.137, 172.29.239.13                  -    
aio1_nova_api_container-c83e5ef0       RUNNING 1         onboot, openstack 10.255.255.216, 172.29.236.52                  -    
aio1_rabbit_mq_container-4fd792fb      RUNNING 1         onboot, openstack 10.255.255.2, 172.29.239.62                    -    
aio1_repo_container-b39d88a1           RUNNING 1         onboot, openstack 10.255.255.227, 172.29.237.146                 -    
aio1_utility_container-fff0b6df        RUNNING 1         onboot, openstack 10.255.255.117, 172.29.237.82                  -    
[root@aio1 playbooks]# 
</code></pre>

<h3>Find the correct ip address</h3>

<p>You should see horizon running with netstat</p>

<pre><code>[root@aio1 ~]# netstat -pan | grep -i 443
tcp        0      0 172.29.236.100:443      0.0.0.0:*               LISTEN      12908/haproxy       
tcp        0      0 192.168.122.23:443      0.0.0.0:*               LISTEN      12908/haproxy       
unix  3      [ ]         STREAM     CONNECTED     73443    31134/tmux           
unix  2      [ ]         DGRAM                    1244303  23435/rsyslogd       
[root@aio1 ~]# 
</code></pre>

<h2>Logon to the openstack GUI (Horizon)</h2>

<h3>Password&hellip;</h3>

<pre><code>[root@aio1 ~]# grep keystone_auth_admin_password /etc/openstack_deploy/user_secrets.yml
</code></pre>

<p><img class="center" src="/images/openstack-ansible-aio-login.png" width="782" height="723" title="&ldquo;openstack-ansible-aio-login.png&rdquo;" ></p>

<p><strong><em> Have fun </em></strong></p>

<h1>Links</h1>

<ul>
<li><a href="https://docs.openstack.org/openstack-ansible/latest/user/aio/quickstart.html">https://docs.openstack.org/openstack-ansible/latest/user/aio/quickstart.html</a></li>
<li><a href="https://docs.openstack.org/project-deploy-guide/openstack-ansible/queens/deploymenthost.html">https://docs.openstack.org/project-deploy-guide/openstack-ansible/queens/deploymenthost.html</a></li>
<li><a href="https://bugs.launchpad.net/openstack-ansible/+bug/1792050">https://bugs.launchpad.net/openstack-ansible/+bug/1792050</a></li>
<li><a href="https://docs.openstack.org/openstack-ansible-security/latest/auto_controls-all.html">https://docs.openstack.org/openstack-ansible-security/latest/auto_controls-all.html</a></li>
<li><a href="https://blog.christophersmart.com/2016/08/09/setting-up-openstack-ansible-all-in-one-behind-a-proxy/">https://blog.christophersmart.com/2016/08/09/setting-up-openstack-ansible-all-in-one-behind-a-proxy/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DNS Privacy With Stubby (Part 1 GNU/Linux)]]></title>
    <link href="https://stafwag.github.io/blog/blog/2018/09/09/dns-privacy-with-stubby-part1-gnulinux/"/>
    <updated>2018-09-09T10:30:03+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2018/09/09/dns-privacy-with-stubby-part1-gnulinux</id>
    <content type="html"><![CDATA[<p><strong><em> Installing and configuring an encrypted dns server is straightforward, there is no reason to use an unencrypted dns service. </em></strong></p>

<h1>DNS is not secure or private</h1>

<p>DNS traffic is insecure and runs over <a href="https://nl.wikipedia.org/wiki/User_Datagram_Protocol">UDP</a> port 53 (<a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol">TCP</a> for <a href="https://en.wikipedia.org/wiki/DNS_zone_transfer">zone transfers</a> ) unecrypted by default.</p>

<p>This make your unencrypted DNS traffic a <strong>privacy risk</strong> and a <strong>security risk</strong>:</p>

<ul>
<li>anyone that is able to sniff your network traffic can collect a lot information from your leaking DNS traffic.</li>
<li>with a DNS spoofing attack an attacker can trick you let go to malicious website or try to intercept your email traffic.</li>
</ul>


<h1>Encrypt your dns traffic</h1>

<p>Encrypting your network traffic is always a good idea for privacy and security reasons - <strong><em> we encrypt, because we can! </em></strong> -  .
More information about dns privacy can be found at <a href="https://dnsprivacy.org/">https://dnsprivacy.org/</a></p>

<p>On this site you&rsquo;ll find also the <a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Daemon+-+Stubby">DNS Privacy Daemon - Stubby</a> that let&rsquo;s you send your DNS request over TLS to an alternative DNS provider. You should use a DNS provider that you trust and has a no logging policy.  <a href="https://www.quad9.net/">quad9</a>, <a href="https://www.cloudflare.com/learning/dns/what-is-1.1.1.1/">cloudflare</a> and google dns are well-known alternative dns providers. At <a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Test+Servers">https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Test+Servers</a> you can find a few other options.</p>

<p>You&rsquo;ll find my journey to setup Stubby on a few operation systems I use (or I&rsquo;m force to use) below &hellip;</p>

<h1>GNU/Linux</h1>

<h2>Arch Linux</h2>

<p>I use <a href="https://www.archlinux.org/">Arch Linux</a> on my main workstation. Stubby is already in the Arch repositories this make installation straightforward.</p>

<h3>Install stubby</h3>

<pre><code>[root@vicky ~]# pacman -S stubby
resolving dependencies...
looking for conflicting packages...

Packages (5) fstrm-0.4.0-1  getdns-1.4.2-1  protobuf-c-1.3.0-3  unbound-1.7.3-4
             stubby-0.2.3-1

Total Download Size:   1.09 MiB
Total Installed Size:  5.68 MiB

:: Proceed with installation? [Y/n] 
:: Retrieving packages...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 88476  100 88476    0     0   403k      0 --:--:-- --:--:-- --:--:--  403k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 62480  100 62480    0     0  1271k      0 --:--:-- --:--:-- --:--:-- 1271k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  632k  100  632k    0     0   750k      0 --:--:-- --:--:-- --:--:--  749k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  302k  100  302k    0     0  1615k      0 --:--:-- --:--:-- --:--:-- 1606k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 34052  100 34052    0     0   831k      0 --:--:-- --:--:-- --:--:--  831k
(5/5) checking keys in keyring                       [###########################] 100%
(5/5) checking package integrity                     [###########################] 100%
(5/5) loading package files                          [###########################] 100%
(5/5) checking for file conflicts                    [###########################] 100%
(5/5) checking available disk space                  [###########################] 100%
:: Processing package changes...
(1/5) installing fstrm                               [###########################] 100%
(2/5) installing protobuf-c                          [###########################] 100%
(3/5) installing unbound                             [###########################] 100%
Optional dependencies for unbound
    expat: unbound-anchor [installed]
(4/5) installing getdns                              [###########################] 100%
(5/5) installing stubby                              [###########################] 100%
:: Running post-transaction hooks...
(1/4) Reloading system manager configuration...
(2/4) Creating system user accounts...
(3/4) Creating temporary files...
(4/4) Arming ConditionNeedsUpdate...
[root@vicky ~]# 
</code></pre>

<h4>choose your upstream dns provider</h4>

<p>Edit the stubby.yml file and uncomment the upstream dns server that you want the use.
Stubby will loadbalance the dns traffic to all configured upstream dns servers by default.
This is configured with the <code>round_robin_upstreams</code> directive, if set to <code>1</code> the traffic is loadbalanced, if set <code>0</code> stubby will use the first configured dns server.</p>

<pre><code>[staf@vicky ~]$ sudo vi /etc/stubby/stubby.yml
</code></pre>

<h4>enable and start stubby</h4>

<pre><code>[root@vicky ~]# systemctl enable stubby
Created symlink /etc/systemd/system/multi-user.target.wants/stubby.service -&gt; /usr/lib/systemd/system/stubby.service.
[root@vicky ~]# systemctl start stubby
[root@vicky ~]# 
</code></pre>

<h4>test</h4>

<pre><code>[root@vicky ~]# dig @127.0.0.1 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.13.2 &lt;&lt;&gt;&gt; @127.0.0.1 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 18226
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
; COOKIE: fe9d3618b821614f174436385b7acb64a4f4cc6657e14626 (good)
;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      86000   IN      CNAME   wagemakers.be.
wagemakers.be.          86000   IN      A       95.215.185.144

;; Query time: 128 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Mon Aug 20 16:08:36 CEST 2018
;; MSG SIZE  rcvd: 147

[root@vicky ~]# 
</code></pre>

<h3>Local dns cache with dnsmasq</h3>

<h4>Change the stubby port.</h4>

<p>Edit /etc/stubby/stubby.yml</p>

<pre><code>[root@vicky ~]# vi /etc/stubby/stubby.yml
</code></pre>

<p>And change the port by modifing the <code>listen_addresses</code> directive</p>

<pre><code>listen_addresses:
  - 127.0.0.1@53000
  - 0::1@53000
</code></pre>

<p>restart stubby</p>

<pre><code>[root@vicky ~]# systemctl restart stubby.service
</code></pre>

<p>and verify that the dns on 127.0.0.1:53 doesn&rsquo;t work anymore.</p>

<pre><code>[root@vicky ~]# dig @127.0.0.1 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.13.2 &lt;&lt;&gt;&gt; @127.0.0.1 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; connection timed out; no servers could be reached
[root@vicky ~]# 
</code></pre>

<p>ensure that stubby does work on port 53000</p>

<pre><code>[root@frija etc]# dig @127.0.0.1 -p 53000 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.13.2 &lt;&lt;&gt;&gt; @127.0.0.1 -p 53000 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 27173
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 65535
;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      43200   IN      CNAME   wagemakers.be.
wagemakers.be.          43200   IN      A       95.215.185.144

;; Query time: 250 msec
;; SERVER: 127.0.0.1#53000(127.0.0.1)
;; WHEN: Tue Aug 21 13:26:37 CEST 2018
;; MSG SIZE  rcvd: 119

[root@frija etc]# 
</code></pre>

<h4>Install dnsmasq</h4>

<pre><code>[root@vicky ~]# pacman -S dnsmasq
warning: dnsmasq-2.79-1 is up to date -- reinstalling
resolving dependencies...
looking for conflicting packages...

Packages (1) dnsmasq-2.79-1

Total Installed Size:  0.70 MiB
Net Upgrade Size:      0.00 MiB

:: Proceed with installation? [Y/n] y
(1/1) checking keys in keyring                       [###########################] 100%
(1/1) checking package integrity                     [###########################] 100%
(1/1) loading package files                          [###########################] 100%
(1/1) checking for file conflicts                    [###########################] 100%
(1/1) checking available disk space                  [###########################] 100%
:: Processing package changes...
(1/1) reinstalling dnsmasq                           [###########################] 100%
:: Running post-transaction hooks...
(1/3) Reloading system manager configuration...
(2/3) Creating system user accounts...
(3/3) Arming ConditionNeedsUpdate...
[root@vicky ~]# 
</code></pre>

<h4>Configure dnsmasq</h4>

<pre><code>[root@vicky etc]# cd /etc
[root@vicky etc]# mv /etc/dnsmasq.conf /etc/dnsmasq.conf_org
[root@vicky etc]# vi dnsmasq.conf
</code></pre>

<p>It is import to configure stubby to listen the localhost interface only.
If you use Linux KVM you probably have a dns serivce running on your bridge interfaces for your virtual machines.</p>

<pre><code>server=127.0.0.1#53000
listen-address=127.0.0.1
interface=lo
bind-interfaces
</code></pre>

<h4>Start and enable dnsmasq</h4>

<pre><code>[root@vicky ~]# systemctl start dnsmasq
[root@vicky ~]# systemctl enable dnsmasq
Created symlink /etc/systemd/system/multi-user.target.wants/dnsmasq.service -&gt; /usr/lib/systemd/system/dnsmasq.service.
[root@vicky ~]# 
</code></pre>

<h4>Reconfigure your system</h4>

<p>reconfigure your system to use dnsmasq as the dns service.</p>

<p>I use <a href="https://wiki.archlinux.org/index.php/Netctl">netctl</a> on my system. You can update the network configuration with <code>netctl</code></p>

<pre><code>[root@vicky netctl]# netctl edit &lt;network_name&gt;
[root@vicky netctl]# netctl restart  &lt;network_name&gt;
</code></pre>

<p>If you networkmanager you can use <code>nmcli</code>, <code>nmtui</code> or the GUI network configuration in your desktop environment.</p>

<h2>GNU/Linux is GNU/Linux</h2>

<p>The configuration on other GNU/Linux distributions is the same as on Arch apart from the installation process.
The same method can be use if your (favorite) Linux distribution doesn&rsquo;t have a stubby package, the installation method of the required package will be different of course.</p>

<h3>Debian</h3>

<h4>Current testing release Debian &ldquo;buster&rdquo;</h4>

<pre><code>$ sudo apt install stubby dnsmasq
</code></pre>

<h4>Current stable Debian 9 &ldquo;strech&rdquo;</h4>

<p>Stubby in the <code>getdns-utils</code> in Debian stretch, it&rsquo;s an older version.
Therefor I ended up with building stubby from the source code.</p>

<h5>Install the required packages</h5>

<p>Install the required packages to build stubby.</p>

<pre><code>staf@stretch:~/github$ sudo apt install build-essential git libtool autoconf libssl-dev libyaml-dev
</code></pre>

<h5>git clone</h5>

<p>The getdns git repo;</p>

<pre><code>staf@stretch:~/github$ git clone https://github.com/getdnsapi/getdns.git
Cloning into 'getdns'...
remote: Counting objects: 16154, done.
remote: Total 16154 (delta 0), reused 0 (delta 0), pack-reused 16154
Receiving objects: 100% (16154/16154), 9.72 MiB | 1.13 MiB/s, done.
Resolving deltas: 100% (12413/12413), done.
staf@stretch:~/github$ 
</code></pre>

<h5>checkout the latest stable release</h5>

<p>Verify the lastest release tag. The current stable release 1.4.2</p>

<pre><code>staf@stretch:~/github/getdns$ git tag
TNW2015
list
v0.1.0
v0.1.1
v0.1.2
&lt;snip&gt;
v1.4.0
v1.4.0-rc1
v1.4.1
v1.4.1-rc1
v1.4.2
v1.4.2-rc1
staf@stretch:~/github/getdns$ 
</code></pre>

<p>checkout the latest stable release.</p>

<pre><code>staf@stretch:~/github/getdns$ git checkout v1.4.2
Note: checking out 'v1.4.2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b &lt;new-branch-name&gt;

HEAD is now at e481273... Last minute update
staf@stretch:~/github/getdns$ 
</code></pre>

<h5>build it&hellip;</h5>

<pre><code>staf@stretch:~/github/getdns$ git submodule update --init
staf@stretch:~/github/getdns$ libtoolize -ci
staf@stretch:~/github/getdns$ autoreconf -fi
staf@stretch:~/github/getdns$ mkdir build
staf@stretch:~/github/getdns$ cd build/
staf@stretch:~/github/getdns/build$ ../configure --prefix=/usr/local --without-libidn --without-libidn2 --enable-stub-only --with-stubby
staf@stretch:~/github/getdns/build$ make
</code></pre>

<h5>make install</h5>

<pre><code>staf@stretch:~/github/getdns/build$ sudo make install
[sudo] password for staf: 
cd src &amp;&amp; make install
make[1]: Entering directory '/home/staf/github/getdns/build/src'
&lt;snip&gt;
make[1]: Leaving directory '/home/staf/github/getdns/build/doc'
***
***  !!! IMPORTANT !!!!
***
***  From release 1.2.0, getdns comes with built-in DNSSEC
***  trust anchor management.  External trust anchor management,
***  for example with unbound-anchor, is no longer necessary
***  and no longer recommended.
***
***  Previously installed trust anchors, in the default location -
***
***        /usr/local/etc/unbound/getdns-root.key
***
***  - will be preferred and used for DNSSEC validation, however
***  getdns will fallback to trust-anchors obtained via built-in
***  trust anchor management when the anchors from the default
***  location fail to validate the root DNSKEY rrset.
***
***  To prevent expired DNSSEC trust anchors to be used for
***  validation, we strongly recommend removing the trust anchors
***  on the default location when there is no active external
***  trust anchor management keeping it up-to-date.
***
staf@stretch:~/github/getdns/build$ sudo make install
</code></pre>

<h5>systemd service</h5>

<p>Stubby comes with a systemd service definition. Copy it to the correct location.</p>

<pre><code>staf@stretch:~/github/getdns/build$ cd ..
staf@stretch:~/github/getdns$ cd stubby/systemd/
staf@stretch:~/github/getdns/stubby/systemd$ sudo cp stubby.service /lib/systemd/system/
</code></pre>

<p>Update the path to /usr/local</p>

<pre><code>staf@stretch:~/github/getdns/stubby/systemd$ sudo vi /lib/systemd/system/stubby.service
</code></pre>

<pre><code>[Unit]
Description=stubby DNS resolver

[Service]
User=stubby
DynamicUser=yes
CacheDirectory=stubby
WorkingDirectory=/var/cache/stubby
ExecStart=/usr/local/bin/stubby
AmbientCapabilities=CAP_NET_BIND_SERVICE
CapabilityBoundingSet=CAP_NET_BIND_SERVICE

[Install]
WantedBy=multi-user.target
</code></pre>

<p>And create the stubby working directory</p>

<pre><code>root@stretch:~# mkdir /var/cache/stubby
</code></pre>

<h4>ldconfig</h4>

<p>update your library cache</p>

<pre><code>staf@stretch:~/github/getdns/stubby/systemd$ sudo ldconfig -v
</code></pre>

<h4>Update the configuration</h4>

<p>Edit the stubby.yml configuration file.</p>

<pre><code>staf@stretch:~/github/getdns/stubby/systemd$ sudo nvi /usr/local/etc/stubby/stubby.yml
</code></pre>

<p>Update the port where stubby will listen to and select the upstream dns service you want to use.</p>

<pre><code>listen_addresses:
  - 127.0.0.1@53000
  - 0::1@53000
</code></pre>

<h4>start and test</h4>

<p>Start stubby&hellip;.</p>

<pre><code>staf@stretch:~/github/getdns/stubby/systemd$ sudo systemctl list-unit-files | grep -i stubby
stubby.service                              disabled
staf@stretch:~/github/getdns/stubby/systemd$ sudo systemctl enable stubby
Created symlink /etc/systemd/system/multi-user.target.wants/stubby.service /lib/systemd/system/stubby.service.
staf@stretch:~/github/getdns/stubby/systemd$ sudo systemctl start stubby
staf@stretch:~/github/getdns/stubby/systemd$ 
</code></pre>

<p>and test it</p>

<pre><code>root@stretch:~# dig @127.0.0.1 -p 53000 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Debian &lt;&lt;&gt;&gt; @127.0.0.1 -p 53000 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 17510
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      49704   IN      CNAME   wagemakers.be.
wagemakers.be.          81815   IN      A       95.215.185.144

;; Query time: 72 msec
;; SERVER: 127.0.0.1#53000(127.0.0.1)
;; WHEN: Sun Sep 02 10:33:53 CEST 2018
;; MSG SIZE  rcvd: 119

root@stretch:~# 
</code></pre>

<h4>dnsmasq</h4>

<p>Install dnsmasq</p>

<pre><code>root@stretch:/etc# apt-get install dnsmasq
</code></pre>

<p>Configure dnsmasq</p>

<pre><code>root@stretch:/etc# mv dnsmasq.conf dnsmasq.conf_org
root@stretch:/etc# vi dnsmasq.conf
</code></pre>

<pre><code>server=127.0.0.1#53000
listen-address=127.0.0.1
interface=lo
bind-interfaces
</code></pre>

<p>Enable and start it&hellip;</p>

<pre><code>root@stretch:/etc# systemctl enable dnsmasq
Synchronizing state of dnsmasq.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable dnsmasq
root@stretch:/etc# systemctl restart dnsmasq
</code></pre>

<p>Verify</p>

<pre><code>root@stretch:/etc# dig @127.0.0.1 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Debian &lt;&lt;&gt;&gt; @127.0.0.1 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 57295
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      48645   IN      CNAME   wagemakers.be.
wagemakers.be.          80756   IN      A       95.215.185.144

;; Query time: 72 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Sun Sep 02 10:51:32 CEST 2018
;; MSG SIZE  rcvd: 119

root@stretch:/etc# 
</code></pre>

<p>reconfigure you system to use dnsmasq&hellip;.</p>

<pre><code>root@stretch:/etc# nvi resolv.conf
</code></pre>

<pre><code>nameserver 127.0.0.1
</code></pre>

<p><strong><em>Have fun!</em></strong></p>

<h2>Links</h2>

<ul>
<li><a href="https://dnsprivacy.org">https://dnsprivacy.org</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Stubby">https://wiki.archlinux.org/index.php/Stubby</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrate a Windows Vmware Virtual Machine to Linux KVM]]></title>
    <link href="https://stafwag.github.io/blog/blog/2018/07/01/migrate-a-windows-vmware-vrtual-machine-to-kvm/"/>
    <updated>2018-07-01T10:49:41+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2018/07/01/migrate-a-windows-vmware-vrtual-machine-to-kvm</id>
    <content type="html"><![CDATA[<p><a href="https://www.linux-kvm.org">Linux KVM</a> is getting more and more useable for desktop virtualization thanks to the the <a href="https://www.linux-kvm.org/page/Virtio">virtio</a> and <a href="https://www.linux-kvm.org/page/SPICE">QXL/SPICE</a> drivers.</p>

<p>Most Linux distributes have the virtio &amp; QXL drivers you might need to install the spice-vdagent.</p>

<p>On Windows you can download and install the virtio and QXL drivers.</p>

<p>Using the virtio drivers will improve your guest system performance and your virtualization experience.</p>

<h2>Convert the disk image</h2>

<h3>merge the vmware disk images&hellip;</h3>

<p>If you use split disk images on vmware ( or vmware player ) migrate them to a single disk images with the vmware-vdiskmanager command.</p>

<pre><code>$ vmware-vdiskmanager -r mywin.vmdk -t 0 /tmp/mywin._combined.vmdk
Creating disk '/var/lib/libvirt/images/tmp/mywin._combined.vmdk'
  Convert: 100% done.
Virtual disk conversion successful.
$
</code></pre>

<h3>convert the vmdk  image to qcow2</h3>

<p>Convert the VMDK disk image to qcow2</p>

<pre><code>[staf@vicky vboxes]$ qemu-img convert -f vmdk -O qcow2 mywin._combined.vmdk mywin.qcow2
</code></pre>

<h3>mv</h3>

<pre><code>[staf@vicky vboxes]$ sudo mv mywin_combined.qcow2 /var/lib/libvirt/images/
[sudo] password for staf: 
</code></pre>

<h2>Import the disk image to KVM</h2>

<p>We&rsquo;ll inport the disk image with <code>virt-install</code> it&rsquo;s also posible to import the images with <code>virt-manager</code> if you prefer a graphical interface or or just being lazy :-)</p>

<h2>Available os options</h2>

<p>To list the supported operation system you can use the <code>osinfo-query os</code> command</p>

<pre><code>[staf@vicky ~]$ osinfo-query os | head
 Short ID             | Name                                               | Version  | ID                                      
----------------------+----------------------------------------------------+----------+-----------------------------------------
 alpinelinux3.5       | Alpine Linux 3.5                                   | 3.5      | http://alpinelinux.org/alpinelinux/3.5  
 alpinelinux3.6       | Alpine Linux 3.6                                   | 3.6      | http://alpinelinux.org/alpinelinux/3.6  
 alpinelinux3.7       | Alpine Linux 3.7                                   | 3.7      | http://alpinelinux.org/alpinelinux/3.7  
 altlinux1.0          | Mandrake RE Spring 2001                            | 1.0      | http://altlinux.org/altlinux/1.0        
 altlinux2.0          | ALT Linux 2.0                                      | 2.0      | http://altlinux.org/altlinux/2.0        
 altlinux2.2          | ALT Linux 2.2                                      | 2.2      | http://altlinux.org/altlinux/2.2        
 altlinux2.4          | ALT Linux 2.4                                      | 2.4      | http://altlinux.org/altlinux/2.4        
 altlinux3.0          | ALT Linux 3.0                                      | 3.0      | http://altlinux.org/altlinux/3.0        
</code></pre>

<pre><code>[staf@vicky ~]$ osinfo-query os |  grep -i windows
 win1.0               | Microsoft Windows 1.0                              | 1.0      | http://microsoft.com/win/1.0            
 win10                | Microsoft Windows 10                               | 10.0     | http://microsoft.com/win/10             
 win2.0               | Microsoft Windows 2.0                              | 2.0      | http://microsoft.com/win/2.0            
 win2.1               | Microsoft Windows 2.1                              | 2.1      | http://microsoft.com/win/2.1            
 win2k                | Microsoft Windows 2000                             | 5.0      | http://microsoft.com/win/2k             
 win2k12              | Microsoft Windows Server 2012                      | 6.3      | http://microsoft.com/win/2k12           
 win2k12r2            | Microsoft Windows Server 2012 R2                   | 6.3      | http://microsoft.com/win/2k12r2         
 win2k16              | Microsoft Windows Server 2016                      | 10.0     | http://microsoft.com/win/2k16           
 win2k3               | Microsoft Windows Server 2003                      | 5.2      | http://microsoft.com/win/2k3            
 win2k3r2             | Microsoft Windows Server 2003 R2                   | 5.2      | http://microsoft.com/win/2k3r2          
 win2k8               | Microsoft Windows Server 2008                      | 6.0      | http://microsoft.com/win/2k8            
 win2k8r2             | Microsoft Windows Server 2008 R2                   | 6.1      | http://microsoft.com/win/2k8r2          
 win3.1               | Microsoft Windows 3.1                              | 3.1      | http://microsoft.com/win/3.1            
 win7                 | Microsoft Windows 7                                | 6.1      | http://microsoft.com/win/7              
 win8                 | Microsoft Windows 8                                | 6.2      | http://microsoft.com/win/8              
 win8.1               | Microsoft Windows 8.1                              | 6.3      | http://microsoft.com/win/8.1            
 win95                | Microsoft Windows 95                               | 4.0      | http://microsoft.com/win/95             
 win98                | Microsoft Windows 98                               | 4.1      | http://microsoft.com/win/98             
 winme                | Microsoft Windows Millennium Edition               | 4.9      | http://microsoft.com/win/me             
 winnt3.1             | Microsoft Windows NT Server 3.1                    | 3.1      | http://microsoft.com/winnt/3.1          
 winnt3.5             | Microsoft Windows NT Server 3.5                    | 3.5      | http://microsoft.com/winnt/3.5          
 winnt3.51            | Microsoft Windows NT Server 3.51                   | 3.51     | http://microsoft.com/winnt/3.51         
 winnt4.0             | Microsoft Windows NT Server 4.0                    | 4.0      | http://microsoft.com/winnt/4.0          
 winvista             | Microsoft Windows Vista                            | 6.0      | http://microsoft.com/win/vista          
 winxp                | Microsoft Windows XP                               | 5.1      | http://microsoft.com/win/xp             
[staf@vicky ~]$ 
</code></pre>

<h3>import</h3>

<p>We need to import the disk image as IDE device since we don&rsquo;t have the virtio driver in our windows disk image (yet).</p>

<pre><code>[root@vicky ~]# virt-install --name "mywin" --ram 8192 --cpu host --os-variant win10 --vcpu 8 --disk /var/lib/libvirt/images/mywin_combined.qcow2,bus=ide --network bridge=virbr0 --import

Starting install...

(virt-viewer:3361): GSpice-WARNING **: 16:49:26.546: Warning no automount-inhibiting implementation available
</code></pre>

<h2>Install the virtio drivers and QXL graphics drivers</h2>

<h3>Get them&hellip;</h3>

<h4>Type of virtio drivers</h4>

<p>The following virtio windows drivers are available.</p>

<ul>
<li>block (disk drivers)</li>
<li>network</li>
<li>baloon ((dynamic memory management)</li>
</ul>


<p>The fedoraproject provides pre compiled iso images containig all the virtio drivers and installation images for
windows XP.</p>

<h4>ISO contents</h4>

<ul>
<li>NetKVM/ - Virtio network driver</li>
<li>viostor/ - Virtio block driver</li>
<li>vioscsi/ - Virtio Small Computer System Interface (SCSI) driver</li>
<li>viorng/ - Virtio RNG driver</li>
<li>vioser/ - Virtio serial driver</li>
<li>Balloon/ - Virtio memory balloon driver</li>
<li>qxl/ - QXL graphics driver for Windows 7 and earlier. (build virtio-win-0.1.103-1 and later)</li>
<li>qxldod/ - QXL graphics driver for Windows 8 and later. (build virtio-win-0.1.103-2 and later)</li>
<li>pvpanic/ - QEMU pvpanic device driver (build virtio-win-0.1.103-2 and later)</li>
<li>guest-agent/ - QEMU Guest Agent 32bit and 64bit MSI installers</li>
<li>qemupciserial/ - QEMU PCI serial device driver</li>
<li>*.vfd VFD floppy images for using during install of Windows XP</li>
</ul>


<h4>Download</h4>

<p>The virtio windows driver images are available from
<a href="https://docs.fedoraproject.org/quick-docs/en-US/creating-windows-virtual-machines-using-virtio-drivers.html">https://docs.fedoraproject.org/quick-docs/en-US/creating-windows-virtual-machines-using-virtio-drivers.html</a></p>

<p>I use arch linux and download virtio-win AUR package with pacaur. You can download the images directly or use the installation packages for your Linux distribution.</p>

<pre><code>[staf@vicky ~]$ pacaur -S virtio-win
:: Package virtio-win not found in repositories, trying AUR...
:: resolving dependencies...
:: looking for inter-conflicts...

AUR Packages  (1) virtio-win-0.1.149.2-1  

:: Proceed with installation? [Y/n] 
&lt;snip&gt;
  -&gt; Compressing package...
==&gt; Leaving fakeroot environment.
==&gt; Finished making: virtio-win 0.1.149.2-1 (Sat Jun 16 20:00:22 2018)
==&gt; Cleaning up...
:: Installing virtio-win package(s)...
loading packages...
resolving dependencies...
looking for conflicting packages...

Packages (1) virtio-win-0.1.149.2-1

Total Installed Size:  314.84 MiB

:: Proceed with installation? [Y/n] 
(1/1) checking keys in keyring                                         [#######################################] 100%
(1/1) checking package integrity                                       [#######################################] 100%
(1/1) loading package files                                            [#######################################] 100%
(1/1) checking for file conflicts                                      [#######################################] 100%
(1/1) checking available disk space                                    [#######################################] 100%
:: Processing package changes...
(1/1) installing virtio-win                                            [#######################################] 100%
Optional dependencies for virtio-win
    qemu [installed]
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
[staf@vicky ~]$ ls -l /var/li
</code></pre>

<p>This install virtio images to <code>/usr/share/virtio/</code></p>

<pre><code>[staf@vicky ~]$  ls -l /usr/share/virtio/
total 321308
-rw-r--r-- 1 root root 324233216 Jun 16 19:58 virtio-win.iso
-rw-r--r-- 1 root root   2949120 Jun 16 19:58 virtio-win_x86_32.vfd
-rw-r--r-- 1 root root   2949120 Jun 16 19:58 virtio-win_x86_64.vfd
[staf@vicky ~]$ 
</code></pre>

<p><code>virtio-win.iso</code> is the ISO cdrom image containing all the drivers.</p>

<h2>Installation</h2>

<h3>mount the iso image</h3>

<p><img src="/images/virto_windows_install/mount_cdrom_000.png" width="816" height="689" title="&ldquo;mount_cdrom_000.png&rdquo;" ></p>

<p>Make sure that the cdrom is mounted in windows.</p>

<p><img src="/images/virto_windows_install/cdrom_mounted_000.png" width="798" height="605" title="&ldquo;mount_cdrom_000.png&rdquo;" ></p>

<h3>Install</h3>

<h4>Open Device Manager</h4>

<p>Open device Manager in the control panel or type <code>devmgmt.msc</code> on the command prompt.</p>

<p><img src="/images/virto_windows_install/devmgmt_msc_000.png" width="835" height="728" title="&ldquo;mount_cdrom_000.png&rdquo;" ></p>

<h4>Update the drivers</h4>

<ul>
<li>balloon, the balloon driver affects the PCI device</li>
<li>vioserial, affects the PCI simple communication controler</li>
<li>NetKVM, the network driver affects the Network adapters.</li>
<li>viostor, the block driver affects the Disk drives.</li>
</ul>


<h5>Update the PCI drivers</h5>

<p>In windows 10 the <strong>PCI device</strong> and the <strong>PCI Simple Communications Controller</strong> have the missing driver icon.
Right click on the <strong>PCI device</strong> and select <strong>update driver</strong> -> click on <strong>Browse my computer for driver software</strong>
Specify the cdrom as the search location and click <strong>Next</strong>, this will install the Balloon driver.</p>

<p>Do the same for the <strong>PCI Simple Communications Controller</strong> this will install the &ldquo;VirtIO Serial Driver&rdquo;</p>

<p><img src="/images/virto_windows_install/update_pci_000.png" width="790" height="586" title="&ldquo;update_pci_000.png&rdquo;" >
<img src="/images/virto_windows_install/update_pci_001.png" width="792" height="594" title="&ldquo;update_pci_001.png&rdquo;" >
<img src="/images/virto_windows_install/update_pci_002.png" width="792" height="577" title="&ldquo;update_pci_002.png&rdquo;" >
<img src="/images/virto_windows_install/update_pci_003.png" width="788" height="578" title="&ldquo;update_pci_003.png&rdquo;" ></p>

<h5>install the VioStor driver</h5>

<p>Add a temporary disk to the virtual machine and use <strong>VirtIO</strong> as the <strong>Bus Type</strong>
In the <strong>Device Manager</strong> you&rsquo;ll get a new device <strong>SCSI Controller</strong> right click it and update the driver.
This will install the <strong>Red Hat VirtIO SCSI controller</strong></p>

<p><img src="/images/virto_windows_install/install_viostor_000.png" width="552" height="567" title="&ldquo;install_viostor_000.png&rdquo;" >
<img src="/images/virto_windows_install/install_viostor_001.png" width="786" height="576" title="&ldquo;install_viostor_001.png&rdquo;" >
<img src="/images/virto_windows_install/install_viostor_002.png" width="622" height="461" title="&ldquo;install_viostor_002.png&rdquo;" ></p>

<p>Go to the device settings of your virtual machine and change the <strong>Disk bus</strong> to <strong>VirtIO</strong>
and shutdown you virtual machine.</p>

<p><img src="/images/virto_windows_install/install_viostor_003.png" width="705" height="689" title="&ldquo;install_viostor_003.png&rdquo;" ></p>

<p>You can remove the temporary disk now or leave it if you can find some use for it&hellip;</p>

<p>Make sure that you disk is selected as the bootable device.</p>

<p><img src="/images/virto_windows_install/install_viostor_004.png" width="885" height="689" title="&ldquo;install_viostor_004.png&rdquo;" ></p>

<p>Start the virtual machine and make sure that the system is bootable.</p>

<h6>install the netKVM driver</h6>

<p>Update the <strong>Device model</strong> to <strong>virtio</strong>.</p>

<p><img src="/images/virto_windows_install/use_virtio_net_000.png" width="699" height="689" title="&ldquo;use_virtio_net_000.png&rdquo;" ></p>

<p>Start <code>devmgmt.msc</code> and update the driver as we did before&hellip;.</p>

<p><img src="/images/virto_windows_install/install_netkvm_000.png" width="809" height="737" title="&ldquo;install_netkvm_000.png&rdquo;" >
<img src="/images/virto_windows_install/install_netkvm_001.png" width="788" height="586" title="&ldquo;install_netkvm_001.png&rdquo;" ></p>

<p>And verify that you network card works correctly.</p>

<p><img src="/images/virto_windows_install/install_netkvm_002.png" width="902" height="645" title="&ldquo;install_netkvm_002.png&rdquo;" ></p>

<h6>install the QXL graphical driver</h6>

<p>Update the <strong>Microsoft Basic Display Adapter</strong></p>

<p><img src="/images/virto_windows_install/install_qxl_000.png" width="792" height="581" title="&ldquo;install_qxl_000.png&rdquo;" >
<img src="/images/virto_windows_install/install_qxl_001.png" width="788" height="582" title="&ldquo;install_qxl_001.png&rdquo;" >
<img src="/images/virto_windows_install/install_qxl_002.png" width="863" height="597" title="&ldquo;install_qxl_002.png&rdquo;" ></p>

<p>After the installation you can change the the display resolution.</p>

<p><img src="/images/virto_windows_install/install_qxl_003.png" width="812" height="651" title="&ldquo;install_qxl_003.png&rdquo;" ></p>

<p>If you want to use higher screen resolutions you need to <a href="https://stafwag.github.io/blog/blog/2018/04/22/high-screen-resolution-on-a-kvm-virtual-machine-with-qxl/">increase the video ram</a></p>

<p><strong><em>Have fun!</em></strong></p>

<h2>Links</h2>

<ul>
<li><a href="https://raymii.org/s/articles/virt-install_introduction_and_copy_paste_distro_install_commands.html">https://raymii.org/s/articles/virt-install_introduction_and_copy_paste_distro_install_commands.html</a></li>
<li><a href="http://bart.vanhauwaert.org/hints/installing-win10-on-KVM.html">http://bart.vanhauwaert.org/hints/installing-win10-on-KVM.html</a></li>
<li><a href="https://docs.fedoraproject.org/quick-docs/en-US/creating-windows-virtual-machines-using-virtio-drivers.html">https://docs.fedoraproject.org/quick-docs/en-US/creating-windows-virtual-machines-using-virtio-drivers.html</a></li>
<li><a href="https://pve.proxmox.com/wiki/Windows_VirtIO_Drivers">https://pve.proxmox.com/wiki/Windows_VirtIO_Drivers</a></li>
<li><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/virtualization_host_configuration_and_guest_installation_guide/form-virtualization_host_configuration_and_guest_installation_guide-para_virtualized_drivers-mounting_the_image_with_virt_manager">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/virtualization_host_configuration_and_guest_installation_guide/form-virtualization_host_configuration_and_guest_installation_guide-para_virtualized_drivers-mounting_the_image_with_virt_manager</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nested Virtualization in KVM]]></title>
    <link href="https://stafwag.github.io/blog/blog/2018/06/04/nested-virtualization-in-kvm/"/>
    <updated>2018-06-04T19:58:06+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2018/06/04/nested-virtualization-in-kvm</id>
    <content type="html"><![CDATA[<h2>KVM</h2>

<p><a href="https://www.linux-kvm.org">Kernel-based Virtual Machine (KVM)</a> has become the defacto hypervisor on GNU/Linux systems it works with great performance as it utilizes the CPU virtualization extensions <a href="https://en.wikipedia.org/wiki/X86_virtualization#Intel_virtualization_(VT-x)">Inetl VT-x</a> or <a href="https://en.wikipedia.org/wiki/X86_virtualization#AMD_virtualization_(AMD-V)">AMD-V</a>). KVM doesn&rsquo;t emulate hardware but uses <a href="https://www.qemu.org/">QEMU</a> for this.</p>

<h2>Nested Virtual guest</h2>

<p>It&rsquo;s possible to use nested virtualization this make it possible to run a hypervisor inside a KVM virtual machine.</p>

<h2>Enabling nested virtualization in KVM</h2>

<h3>Verify</h3>

<p>To verify if nested virtualization is enabled on your system can check /sys/module/kvm_intel/parameters/nested on Intal systems or /sys/module/kvm_amd/parameters/nested</p>

<pre><code>[staf@frija ~]$ cat /sys/module/kvm_intel/parameters/nested
N
[staf@frija ~]$ 
</code></pre>

<h3>Enable</h3>

<h4>Shutdown all virtual machines</h4>

<p>Make sure that there no virtual machines running.</p>

<pre><code>[root@frija ~]# virsh 
Welcome to virsh, the virtualization interactive terminal.

Type:  'help' for help with commands
       'quit' to quit

virsh # list
 Id    Name                           State
----------------------------------------------------

virsh # 
</code></pre>

<h4>Unload KVM</h4>

<p>Unload the KVM kernel module.</p>

<pre><code>[root@frija ~]# modprobe -r kvm_intel
[root@frija ~]# 
</code></pre>

<h4>Load KVM and activate nested</h4>

<p>Reload the KVM with the nested feature enabled.</p>

<pre><code>[root@frija ~]# modprobe kvm_intel nested=1
[root@frija ~]# 
</code></pre>

<p>Verify</p>

<pre><code>[root@frija ~]# cat /sys/module/kvm_intel/parameters/nested
Y
[root@frija ~]# 
</code></pre>

<p>To enable the nested feature permanently create /etc/modprobe.d/kvm_intel.conf</p>

<pre><code>[root@frija ~]# vi /etc/modprobe.d/kvm_intel.conf
</code></pre>

<p>and enable the nested option.</p>

<pre><code>options kvm_intel nested=1
</code></pre>

<h2>Enabling nested virtialization in the virtual machine</h2>

<p>When you logon to a virtual machine and verify the virtualization extensions on the cpu the flags aren&rsquo;t available.</p>

<pre><code>[staf@centos7 ~]$ cat /proc/cpuinfo | grep  -i -E "vmx|svm"
[staf@centos7 ~]$ 
</code></pre>

<p>To enable nested virtualization in a vritual machine you can</p>

<ul>
<li>start <code>virsh</code> and and edit the the virtual machine and change the CPU line to <code>&lt;cpu mode='host-model' check='partial'/&gt;</code></li>
<li>Open virt-manager and select <strong>Copy host CPU configuration</strong> on the CPU configuration</li>
</ul>


<pre><code>root@frija ~]# virsh 
Welcome to virsh, the virtualization interactive terminal.

Type:  'help' for help with commands
       'quit' to quit

virsh # list
 Id    Name                           State
----------------------------------------------------
 1     centos7.0                      running

virsh # edit centos7.0 
</code></pre>

<p>Change the cpu settings</p>

<pre><code>  &lt;features&gt;
    &lt;acpi/&gt;
    &lt;apic/&gt;
    &lt;vmport state='off'/&gt;
  &lt;/features&gt;
  &lt;cpu mode='host-model' check='partial'&gt;
    &lt;model fallback='allow'/&gt;
  &lt;/cpu&gt;
</code></pre>

<p>Shutdown the virtual machine</p>

<pre><code>virsh # reboot centos7.0 
Domain centos7.0 is being rebooted

virsh # 
</code></pre>

<p>Start the virtual machine</p>

<pre><code>virsh # start centos7.0  
Domain centos7.0 started
</code></pre>

<p>Verify that the <code>feature policies</code> on the cpu are updated.</p>

<pre><code>virsh # dumpxml centos7.0 
</code></pre>

<pre><code> &lt;cpu mode='custom' match='exact' check='full'&gt;
    &lt;model fallback='forbid'&gt;Haswell-noTSX-IBRS&lt;/model&gt;
    &lt;vendor&gt;Intel&lt;/vendor&gt;
    &lt;feature policy='require' name='vme'/&gt;
    &lt;feature policy='require' name='ss'/&gt;
    &lt;feature policy='require' name='f16c'/&gt;
    &lt;feature policy='require' name='rdrand'/&gt;
    &lt;feature policy='require' name='hypervisor'/&gt;
    &lt;feature policy='require' name='arat'/&gt;
    &lt;feature policy='require' name='tsc_adjust'/&gt;
    &lt;feature policy='require' name='xsaveopt'/&gt;
    &lt;feature policy='require' name='pdpe1gb'/&gt;
    &lt;feature policy='require' name='abm'/&gt;
    &lt;feature policy='require' name='ibpb'/&gt;
 &lt;/cpu&gt;
</code></pre>

<p>Logon to the virtual machine and verify the cpu flags;</p>

<pre><code>[staf@centos7 ~]$ cat /proc/cpuinfo | grep -i vmx
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology eagerfpu pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt ibpb ibrs arat spec_ctrl
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology eagerfpu pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt ibpb ibrs arat spec_ctrl
[staf@centos7 ~]$ cat /proc/cpuinfo | grep  -i "vmx|svm"
[staf@centos7 ~]$ cat /proc/cpuinfo | grep  -i -E "vmx|svm"
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology eagerfpu pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt ibpb ibrs arat spec_ctrl
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology eagerfpu pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt ibpb ibrs arat spec_ctrl
</code></pre>

<p>Execute the <code>virt-host-validate</code></p>

<pre><code>[staf@centos7 ~]$ virt-host-validate
  QEMU: Checking for hardware virtualization                                 : PASS
  QEMU: Checking if device /dev/kvm exists                                   : PASS
  QEMU: Checking if device /dev/kvm is accessible                            : PASS
  QEMU: Checking if device /dev/vhost-net exists                             : PASS
  QEMU: Checking if device /dev/net/tun exists                               : PASS
  QEMU: Checking for cgroup 'memory' controller support                      : PASS
  QEMU: Checking for cgroup 'memory' controller mount-point                  : PASS
  QEMU: Checking for cgroup 'cpu' controller support                         : PASS
  QEMU: Checking for cgroup 'cpu' controller mount-point                     : PASS
  QEMU: Checking for cgroup 'cpuacct' controller support                     : PASS
  QEMU: Checking for cgroup 'cpuacct' controller mount-point                 : PASS
  QEMU: Checking for cgroup 'cpuset' controller support                      : PASS
  QEMU: Checking for cgroup 'cpuset' controller mount-point                  : PASS
  QEMU: Checking for cgroup 'devices' controller support                     : PASS
  QEMU: Checking for cgroup 'devices' controller mount-point                 : PASS
  QEMU: Checking for cgroup 'blkio' controller support                       : PASS
  QEMU: Checking for cgroup 'blkio' controller mount-point                   : PASS
  QEMU: Checking for device assignment IOMMU support                         : WARN (No ACPI DMAR table found, IOMMU either disabled in BIOS or not supported by this hardware platform)
   LXC: Checking for Linux &gt;= 2.6.26                                         : PASS
   LXC: Checking for namespace ipc                                           : PASS
   LXC: Checking for namespace mnt                                           : PASS
   LXC: Checking for namespace pid                                           : PASS
   LXC: Checking for namespace uts                                           : PASS
   LXC: Checking for namespace net                                           : PASS
   LXC: Checking for namespace user                                          : PASS
   LXC: Checking for cgroup 'memory' controller support                      : PASS
   LXC: Checking for cgroup 'memory' controller mount-point                  : PASS
   LXC: Checking for cgroup 'cpu' controller support                         : PASS
   LXC: Checking for cgroup 'cpu' controller mount-point                     : PASS
   LXC: Checking for cgroup 'cpuacct' controller support                     : PASS
   LXC: Checking for cgroup 'cpuacct' controller mount-point                 : PASS
   LXC: Checking for cgroup 'cpuset' controller support                      : PASS
   LXC: Checking for cgroup 'cpuset' controller mount-point                  : PASS
   LXC: Checking for cgroup 'devices' controller support                     : PASS
   LXC: Checking for cgroup 'devices' controller mount-point                 : PASS
   LXC: Checking for cgroup 'blkio' controller support                       : PASS
   LXC: Checking for cgroup 'blkio' controller mount-point                   : PASS
   LXC: Checking if device /sys/fs/fuse/connections exists                   : FAIL (Load the 'fuse' module to enable /proc/ overrides)
[staf@centos7 ~]$ 
</code></pre>

<p><strong><em>Have fun</em></strong></p>

<h2>Links</h2>

<ul>
<li><a href="https://docs.fedoraproject.org/quick-docs/en-US/using-nested-virtualization-in-kvm.html"><a href="https://docs.fedoraproject.org/quick-docs/en-US/using-nested-virtualization-in-kvm.html">https://docs.fedoraproject.org/quick-docs/en-US/using-nested-virtualization-in-kvm.html</a></a></li>
<li><a href="https://wiki.archlinux.org/index.php/KVM#Nested_virtualization"><a href="https://wiki.archlinux.org/index.php/KVM#Nested_virtualization">https://wiki.archlinux.org/index.php/KVM#Nested_virtualization</a></a></li>
<li><a href="https://www.linux-kvm.org/page/Nested_Guests"><a href="https://www.linux-kvm.org/page/Nested_Guests">https://www.linux-kvm.org/page/Nested_Guests</a></a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[High Screen Resolution on a KVM Virtual Machine With QXL]]></title>
    <link href="https://stafwag.github.io/blog/blog/2018/04/22/high-screen-resolution-on-a-kvm-virtual-machine-with-qxl/"/>
    <updated>2018-04-22T10:04:46+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2018/04/22/high-screen-resolution-on-a-kvm-virtual-machine-with-qxl</id>
    <content type="html"><![CDATA[<p>When you create an new virtual KVM virtual system the video ram is limited to 16MB by default to use a higer screen resolution you need
to increase the video ram. The available resolution reported by the virtual screen may also not include the resolution that you want to
utilize.</p>

<p>You&rsquo;ll find my journey to enable higher screen resolutions in my KVM (qemu) virtual systems below.</p>

<h2>Ubuntu 16.04</h2>

<p>There is an issue with Ubuntu 16.04 and the latest HWE kernel <a href="https://wiki.ubuntu.com/Kernel/LTSEnablementStack"><a href="https://wiki.ubuntu.com/Kernel/LTSEnablementStack">https://wiki.ubuntu.com/Kernel/LTSEnablementStack</a></a>. Even a full HD resultion (1920 x 1080 ) if you have the latest HWE kernel on your system.</p>

<p>To resolve this issue your can uninstall the latest kernel or install the LTS kernel.</p>

<h4>Install the LTS Kernel</h4>

<pre><code>staf@ubuntu:~$ sudo apt-get install linux-generic-lts-xenial
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following additional packages will be installed:
  linux-generic linux-headers-4.4.0-119 linux-headers-4.4.0-119-generic linux-headers-generic
  linux-image-4.4.0-119-generic linux-image-extra-4.4.0-119-generic linux-image-generic
Suggested packages:
  fdutils linux-doc-4.4.0 | linux-source-4.4.0 linux-tools
The following NEW packages will be installed:
  linux-generic linux-generic-lts-xenial linux-headers-4.4.0-119 linux-headers-4.4.0-119-generic
  linux-headers-generic linux-image-4.4.0-119-generic linux-image-extra-4.4.0-119-generic linux-image-generic
0 upgraded, 8 newly installed, 0 to remove and 0 not upgraded.
Need to get 69,3 MB of archives.
After this operation, 301 MB of additional disk space will be used.
Do you want to continue? [Y/n] 
&lt;snip&gt;
Setting up linux-image-generic (4.4.0.119.125) ...
Setting up linux-headers-4.4.0-119 (4.4.0-119.143) ...
Setting up linux-headers-4.4.0-119-generic (4.4.0-119.143) ...
Setting up linux-headers-generic (4.4.0.119.125) ...
Setting up linux-generic (4.4.0.119.125) ...
Setting up linux-generic-lts-xenial (4.4.0.119.125) ...
staf@ubuntu:~$ 
</code></pre>

<h4>Remove the HWE kernel</h4>

<pre><code>staf@ubuntu:~$ sudo apt-get purge linux-image-4.13*
Reading package lists... Done
Building dependency tree       
Reading state information... Done
&lt;snip&gt;
done
The link /vmlinuz.old is a damaged link
Removing symbolic link vmlinuz.old 
 you may need to re-run your boot loader[grub]
The link /initrd.img.old is a damaged link
Removing symbolic link initrd.img.old 
 you may need to re-run your boot loader[grub]
Purging configuration files for linux-image-4.13.0-38-generic (4.13.0-38.43~16.04.1) ...
Examining /etc/kernel/postrm.d .
run-parts: executing /etc/kernel/postrm.d/initramfs-tools 4.13.0-38-generic /boot/vmlinuz-4.13.0-38-generic
run-parts: executing /etc/kernel/postrm.d/zz-update-grub 4.13.0-38-generic /boot/vmlinuz-4.13.0-38-generic
</code></pre>

<h4>Cleanup</h4>

<pre><code>staf@ubuntu:~$ sudo apt autoremove
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following packages will be REMOVED:
  linux-headers-4.13.0-36 linux-headers-4.13.0-36-generic linux-headers-generic-hwe-16.04
0 upgraded, 0 newly installed, 3 to remove and 0 not upgraded.
After this operation, 83,1 MB disk space will be freed.
Do you want to continue? [Y/n] 
(Reading database ... 234149 files and directories currently installed.)
Removing linux-headers-4.13.0-36-generic (4.13.0-36.40~16.04.1) ...
Removing linux-headers-4.13.0-36 (4.13.0-36.40~16.04.1) ...
Removing linux-headers-generic-hwe-16.04 (4.13.0.38.57) ...
staf@ubuntu:~$ 
</code></pre>

<h4>Reboot</h4>

<p>After a reboot higher resolutions are possible on ubuntu 16.04</p>

<h1>Increase the video RAM</h1>

<h2>Required video ram</h2>

<p>When you create a new KVM virtual machine it has 16MB of video RAM.
Below you&rsquo;ll the calculation for the required video RAM for a 4k resolution ( 3840 x 2160 ).</p>

<p>3840 x 2160 = 8294400 <br/>
8294400 x 32 = 265420800 <br/ >
265420800 / 8 = 33177600 <br />
33177600 / (1024*1024) = 31.640625 MB</p>

<p>So 32 MB video ram is enough for a 4k resolution, to take some overhead into account we&rsquo;ll increase the video ram to 64 MB.</p>

<h2>list the domains</h2>

<pre><code>[swagemakers@staflaptop ~]$ sudo virsh
Welcome to virsh, the virtualization interactive terminal.

Type:  'help' for help with commands
       'quit' to quit

virsh # list --all
 Id    Name                           State
----------------------------------------------------
 -     centos7.0                      shut off
 -     debian                         shut off
 -     fedora27                       shut off

virsh # 
</code></pre>

<h4>edit the domain settings</h4>

<pre><code>virsh # edit --domain debian
</code></pre>

<h5>update the memory settings</h5>

<pre><code>    &lt;video&gt;
      &lt;model type='qxl' ram='65536' vram='65536' vgamem='16384' heads='1' primary='yes'/&gt;
      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0'/&gt;
    &lt;/video&gt;
    &lt;redirdev bus='usb' type='spicevmc'&gt;
</code></pre>

<p>to</p>

<pre><code>    &lt;video&gt;
      &lt;model type='qxl' ram='65536' vram='65536' vgamem='65536' heads='1' primary='yes'/&gt;
      &lt;address type='pci' domain='0x0000' bus='0x00' slot='0x02' function='0x0'/&gt;
    &lt;/video&gt;
</code></pre>

<h4>xrandr</h4>

<p>Even with the additional RAM higer resolution aren&rsquo;t possible (yet), the virtual screen doesn&rsquo;t report the higer screen resolution. It&rsquo;s possible to add the higher screen resolution with xrandr.</p>

<h5>display current settings</h5>

<pre><code>staf@debian:~$ xrandr 
Screen 0: minimum 320 x 200, current 1920 x 1080, maximum 8192 x 8192
Virtual-0 connected primary 1920x1080+0+0 0mm x 0mm
   1024x768      59.95 +
   1920x1200     59.95  
   1920x1080     60.00* 
   1600x1200     59.95  
   1680x1050     60.00  
   1400x1050     60.00  
   1280x1024     59.95  
   1440x900      59.99  
   1280x960      59.99  
   1280x854      59.95  
   1280x800      59.96  
   1280x720      59.97  
   1152x768      59.95  
   800x600       59.96  
   848x480       59.94  
   720x480       59.94  
   640x480       59.94  
Virtual-1 disconnected
Virtual-2 disconnected
Virtual-3 disconnected
staf@debian:~$ 
</code></pre>

<h6>get the modeline</h6>

<pre><code>staf@debian:~$ cvt 2560 1440 
# 2560x1440 59.96 Hz (CVT 3.69M9) hsync: 89.52 kHz; pclk: 312.25 MHz
Modeline "2560x1440_60.00"  312.25  2560 2752 3024 3488  1440 1443 1448 1493 -hsync +vsync
staf@debian:~$ 
</code></pre>

<h6># create the new mode line</h6>

<pre><code>staf@debian:~$ xrandr --newmode "2560x1440_60.00"  312.25  2560 2752 3024 3488  1440 1443 1448 1493 -hsync +vsync
staf@debian:~$ 
</code></pre>

<h6># add the mode to your screen</h6>

<pre><code>staf@debian:~$ xrandr --addmode Virtual-0 2560x1440_60.00
staf@debian:~$ 
</code></pre>

<h6># use the new mode</h6>

<pre><code>staf@debian:~$ xrandr --output Virtual-0 --mode 2560x1440_60.00
staf@debian:~$ 
</code></pre>

<h6>## 4k</h6>

<p>To use a 4k resolution you can use the commands</p>

<pre><code>staf@debian:~$  cvt 3840 2160
# 3840x2160 59.98 Hz (CVT 8.29M9) hsync: 134.18 kHz; pclk: 712.75 MHz
Modeline "3840x2160_60.00"  712.75  3840 4160 4576 5312  2160 2163 2168 2237 -hsync +vsync
staf@mydevolo:~$ xrandr --newmode "3840x2160_60.00"  712.75  3840 4160 4576 5312  2160 2163 2168 2237 -hsync +vsync
staf@mydevolo:~$ xrandr --addmode Virtual-0 3840x2160_60.00
staf@mydevolo:~$ xrandr --output Virtual-0 --mode 3840x2160_60.00
staf@mydevolo:~$ 
</code></pre>

<h2>Add the new screen resolution permanently</h2>

<h3>Debian &amp; Co</h3>

<p>Create a monitor configuration file in /usr/share/X11/xorg.conf.d</p>

<pre><code>root@mydevolo:/usr/share/X11/xorg.conf.d# vi 10-monitor.conf
</code></pre>

<p>And add the modeline fgor your screen resolution.
With the Option &ldquo;PreferredMode&rdquo; you can set the prferred resolution.</p>

<pre><code>section "Monitor"
    Identifier "Virtual-0 "
    Modeline "2560x1440_60.00"  312.25  2560 2752 3024 3488  1440 1443 1448 1493 -hsync +vsync
    Modeline "3840x2160_60.00"  712.75  3840 4160 4576 5312  2160 2163 2168 2237 -hsync +vsync
    Option "PreferredMode" "2560x1440_60.00"
EndSection
</code></pre>

<h3>Other GNU/Linux distros</h3>

<p>Most other GNU/Linux distribution use /etc/X11/xorg.conf.d/</p>

<p><strong><em> Have fun </em></strong></p>

<h1>Links</h1>

<ul>
<li><a href="https://wiki.archlinux.org/index.php/xrandr"><a href="https://wiki.archlinux.org/index.php/xrandr">https://wiki.archlinux.org/index.php/xrandr</a></a></li>
<li><a href="https://askubuntu.com/questions/994449/ubuntu-16-04-kvm-qxl-guest-cant-change-resolution"><a href="https://askubuntu.com/questions/994449/ubuntu-16-04-kvm-qxl-guest-cant-change-resolution">https://askubuntu.com/questions/994449/ubuntu-16-04-kvm-qxl-guest-cant-change-resolution</a></a></li>
</ul>

]]></content>
  </entry>
  
</feed>
