<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Cloud-init | stafwag Blog]]></title>
  <link href="https://stafwag.github.io/blog/blog/categories/cloud-init/atom.xml" rel="self"/>
  <link href="https://stafwag.github.io/blog/"/>
  <updated>2019-04-22T09:49:48+02:00</updated>
  <id>https://stafwag.github.io/blog/</id>
  <author>
    <name><![CDATA[staf wagemakers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Howto Use Centos Cloud Images With Cloud-init on KVM/libvirtd]]></title>
    <link href="https://stafwag.github.io/blog/blog/2019/03/03/howto-use-centos-cloud-images-with-cloud-init/"/>
    <updated>2019-03-03T09:55:55+01:00</updated>
    <id>https://stafwag.github.io/blog/blog/2019/03/03/howto-use-centos-cloud-images-with-cloud-init</id>
    <content type="html"><![CDATA[<h1>Images versus unattended setup</h1>

<h2>Old-school</h2>

<h3>Unattended setup</h3>

<p>In a traditional environment, systems are installed from a CDROM. The configuration is executed by the system administrator through the installer. This soon becomes a borning and unpractical task when we need to set up a lot of systems also it is important  that systems are configured in same - and hopefully correct - way.</p>

<p>In a traditional environment, this can be automated by booting via BOOTP/PXE boot and configured is by a system that &ldquo;feeds&rdquo; the installer. Examples are:</p>

<ul>
<li><a href="https://en.wikipedia.org/wiki/JumpStart_(Solaris">Solaris Jumpstart</a></li>
<li><a href="https://en.wikipedia.org/wiki/Kickstart_(Linux">Redhat Kickstart</a>)</li>
<li><a href="https://wiki.debian.org/DebianInstaller/Preseed">DebianInstaller Preseed</a></li>
<li><a href="https://en.wikipedia.org/wiki/YaST#AutoYaST">Suse Autoyast</a></li>
<li>&hellip;</li>
</ul>


<h2>Cloud &amp; co</h2>

<h3>Cloud-init</h3>

<p>In a cloud environment, we use images to install systems. The system automation is generally done by <a href="https://cloud-init.io/">cloud-init</a>. Cloud-init was originally developed for Ubuntu GNU/Linux on the Amazon EC2 cloud. It has become the de facto installation configuration tool for most Unix like systems on most cloud environments.</p>

<p>Cloud-init uses a YAML file to configure the system.</p>

<h3>Images</h3>

<p>Most GNU/Linux distributions provide images that can be used to provision a new system.
You can find the complete list on the OpenStack website</p>

<p><a href="https://docs.openstack.org/image-guide/obtain-images.html">https://docs.openstack.org/image-guide/obtain-images.html</a></p>

<p>The OpenStack documentation also describes how you can create your own base images in the <a href="https://docs.openstack.org/image-guide/">OpenStack Virtual Machine Image Guide</a></p>

<h1>Use a centos cloud image with libvirtd</h1>

<h2>Download the cloud image</h2>

<h3>Download</h3>

<p>Download the latest &ldquo;GenericCloud&rdquo; centos 7 cloud image and sha256sum.txt.asc sha256sum.txt from:</p>

<p><a href="https://cloud.centos.org/centos/7/images/">https://cloud.centos.org/centos/7/images/</a></p>

<h3>Verify</h3>

<p>You should verify your download - as always against a trusted signing key -</p>

<p>On a centos 7 system, the public gpg is already installed at <code>/etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</code></p>

<h4>Verify the fingerprint</h4>

<p>Execute</p>

<pre><code>staf@centos7 iso]$ gpg --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
pub  4096R/F4A80EB5 2014-06-23 CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;
      Key fingerprint = 6341 AB27 53D7 8A78 A7C2  7BB1 24C6 A8A7 F4A8 0EB5
[staf@centos7 iso]$ gpg --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
</code></pre>

<p>and verify the fingerprint, the fingerprints that are used by centos are listed at:</p>

<p><a href="https://www.centos.org/keys/">https://www.centos.org/keys/</a></p>

<h4>Import key</h4>

<p>Import the pub centos gpg key:</p>

<pre><code>[staf@centos7 iso]$ gpg --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
gpg: key F4A80EB5: public key "CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
[staf@centos7 iso]$ 
</code></pre>

<p>List the trusted gpg key:</p>

<pre><code>staf@centos7 iso]$ gpg --list-keys
/home/staf/.gnupg/pubring.gpg
-----------------------------
pub   4096R/F4A80EB5 2014-06-23
uid                  CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;

[staf@centos7 iso]$ gpg --list-keys
</code></pre>

<h4>Verify the sha256sum file</h4>

<pre><code>[staf@centos7 iso]$ gpg --verify sha256sum.txt.asc
gpg: Signature made Thu 31 Jan 2019 04:28:30 PM CET using RSA key ID F4A80EB5
gpg: Good signature from "CentOS-7 Key (CentOS 7 Official Signing Key) &lt;security@centos.org&gt;"
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 6341 AB27 53D7 8A78 A7C2  7BB1 24C6 A8A7 F4A8 0EB5
[staf@centos7 iso]$ 
</code></pre>

<p>The key fingerprint must match the one of RPM-GPG-KEY-CentOS-7.</p>

<h4>Verify the iso file</h4>

<pre><code>[staf@centos7 iso]$ xz -d CentOS-7-x86_64-GenericCloud-1901.qcow2.xz
[staf@centos7 iso]$ sha256sum -c sha256sum.txt.asc 2&gt;&amp;1 | grep OK
CentOS-7-x86_64-GenericCloud-1901.qcow2: OK
[staf@centos7 iso]$ 
</code></pre>

<h2>Image</h2>

<h3>info</h3>

<p>The image we download is a normal qcow2 image, we can see the image information with <code>qemu-info</code></p>

<pre><code>[root@centos7 iso]# qemu-img info CentOS-7-x86_64-GenericCloud-1901.qcow2
image: CentOS-7-x86_64-GenericCloud-1901.qcow2
file format: qcow2
virtual size: 8.0G (8589934592 bytes)
disk size: 895M
cluster_size: 65536
Format specific information:
    compat: 0.10
[root@centos7 iso]# 
</code></pre>

<h3>Copy &amp; resize</h3>

<p>The default image is small - 8GB - we might be using the image to provision other systems so it better to leave it untouched.</p>

<p>Copy the image to the location where we&rsquo;ll run the virtual system.</p>

<pre><code>[root@centos7 iso]# cp -v CentOS-7-x86_64-GenericCloud-1901.qcow2 /var/lib/libvirt/images/tst/tst.qcow2
'CentOS-7-x86_64-GenericCloud-1901.qcow2' -&gt; '/var/lib/libvirt/images/tst/tst.qcow2'
[root@centos7 iso]# 
</code></pre>

<p>and resize it to the required size:</p>

<pre><code>[root@centos7 iso]# cd /var/lib/libvirt/images/tst
[root@centos7 tst]# qemu-img resize tst.qcow2 20G
Image resized.
[root@centos7 tst]# 
</code></pre>

<h2>cloud-init</h2>

<p>We&rsquo;ll create a simple cloud-init configuration file and generate an iso image with <code>cloud-localds</code>. This iso image holds the cloud-init configuration and will be used to setup the system during the bootstrap.</p>

<h3>Install cloud-utils</h3>

<p><span style="color:red"><strong> It&rsquo;s important to NOT install cloud-init on your KVM host machine. </strong></span> This creates a cloud-init service that runs during the boot and tries to reconfigure your host. Something that you probably don&rsquo;t want on your KVM hypervisor host.</p>

<p>The cloud-util package has all the tool we need to convert the cloud-init configuration files to an iso image.</p>

<pre><code>[root@centos7 tst]# yum install -y cloud-utils
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: centos.cu.be
 * extras: centos.cu.be
 * updates: centos.mirror.ate.info
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package cloud-utils.x86_64 0:0.27-20.el7.centos will be installed
--&gt; Processing Dependency: python-paramiko for package: cloud-utils-0.27-20.el7.centos.x86_64
--&gt; Processing Dependency: euca2ools for package: cloud-utils-0.27-20.el7.centos.x86_64
--&gt; Processing Dependency: cloud-utils-growpart for package: cloud-utils-0.27-20.el7.centos.x86_64
--&gt; Running transaction check
---&gt; Package cloud-utils-growpart.noarch 0:0.29-2.el7 will be installed
---&gt; Package euca2ools.noarch 0:2.1.4-1.el7.centos will be installed
--&gt; Processing Dependency: python-boto &gt;= 2.13.3-1 for package: euca2ools-2.1.4-1.el7.centos.noarch
--&gt; Processing Dependency: m2crypto for package: euca2ools-2.1.4-1.el7.centos.noarch
---&gt; Package python-paramiko.noarch 0:2.1.1-9.el7 will be installed
--&gt; Running transaction check
---&gt; Package m2crypto.x86_64 0:0.21.1-17.el7 will be installed
---&gt; Package python-boto.noarch 0:2.25.0-2.el7.centos will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

=======================================================================================
 Package                    Arch         Version                   Repository     Size
=======================================================================================
Installing:
 cloud-utils                x86_64       0.27-20.el7.centos        extras         43 k
Installing for dependencies:
 cloud-utils-growpart       noarch       0.29-2.el7                base           26 k
 euca2ools                  noarch       2.1.4-1.el7.centos        extras        319 k
 m2crypto                   x86_64       0.21.1-17.el7             base          429 k
 python-boto                noarch       2.25.0-2.el7.centos       extras        1.5 M
 python-paramiko            noarch       2.1.1-9.el7               updates       269 k

Transaction Summary
=======================================================================================
Install  1 Package (+5 Dependent packages)

Total download size: 2.5 M
Installed size: 12 M
Downloading packages:
(1/6): cloud-utils-growpart-0.29-2.el7.noarch.rpm               |  26 kB  00:00:01     
(2/6): cloud-utils-0.27-20.el7.centos.x86_64.rpm                |  43 kB  00:00:01     
(3/6): euca2ools-2.1.4-1.el7.centos.noarch.rpm                  | 319 kB  00:00:01     
(4/6): m2crypto-0.21.1-17.el7.x86_64.rpm                        | 429 kB  00:00:01     
(5/6): python-boto-2.25.0-2.el7.centos.noarch.rpm               | 1.5 MB  00:00:02     
(6/6): python-paramiko-2.1.1-9.el7.noarch.rpm                   | 269 kB  00:00:03     
---------------------------------------------------------------------------------------
Total                                                     495 kB/s | 2.5 MB  00:05     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : python-boto-2.25.0-2.el7.centos.noarch                              1/6 
  Installing : python-paramiko-2.1.1-9.el7.noarch                                  2/6 
  Installing : cloud-utils-growpart-0.29-2.el7.noarch                              3/6 
  Installing : m2crypto-0.21.1-17.el7.x86_64                                       4/6 
  Installing : euca2ools-2.1.4-1.el7.centos.noarch                                 5/6 
  Installing : cloud-utils-0.27-20.el7.centos.x86_64                               6/6 
  Verifying  : m2crypto-0.21.1-17.el7.x86_64                                       1/6 
  Verifying  : cloud-utils-growpart-0.29-2.el7.noarch                              2/6 
  Verifying  : python-paramiko-2.1.1-9.el7.noarch                                  3/6 
  Verifying  : python-boto-2.25.0-2.el7.centos.noarch                              4/6 
  Verifying  : euca2ools-2.1.4-1.el7.centos.noarch                                 5/6 
  Verifying  : cloud-utils-0.27-20.el7.centos.x86_64                               6/6 

Installed:
  cloud-utils.x86_64 0:0.27-20.el7.centos                                                                                                                                     

Dependency Installed:
  cloud-utils-growpart.noarch 0:0.29-2.el7      euca2ools.noarch 0:2.1.4-1.el7.centos      m2crypto.x86_64 0:0.21.1-17.el7      python-boto.noarch 0:2.25.0-2.el7.centos     
  python-paramiko.noarch 0:2.1.1-9.el7         

Complete!
[root@centos7 tst]# 
</code></pre>

<h3>Cloud-init configuration</h3>

<p>A complete overview of cloud-init configuration directives is available at <a href="https://cloudinit.readthedocs.io/en/latest/">https://cloudinit.readthedocs.io/en/latest/</a>.</p>

<p>We&rsquo;ll create a cloud-init configuration file to update all the packages - which is always a good idea - and to add a user to the system.</p>

<p>A cloud-init configuration file has to start with <code>#cloud-config</code>, remember this is YAML so only use spaces&hellip;</p>

<p>We&rsquo;ll create a password hash that we&rsquo;ll put into your cloud-init configuration, it&rsquo;s also possible to use a plain-text password in the configuration with <code>chpasswd</code> or to set the password for the default user. But it&rsquo;s better to use a hash so nobody can see the password. Keep in mind that is still possible to brute-force the password hash.</p>

<p>Some GNU/Linux distributions have the <code>mkpasswd</code> utility this is not available on centos. The <code>mkpasswd</code> utility is part of the <code>expect</code> package and is something else&hellip;</p>

<p>I used a python one-liner to generate the SHA512 password hash</p>

<pre><code>python -c 'import crypt,getpass; print(crypt.crypt(getpass.getpass(), crypt.mksalt(crypt.METHOD_SHA512)))'
</code></pre>

<p>Execute the one-liner and type in your password:</p>

<pre><code>[staf@centos7 ~]$ python -c 'import crypt,getpass; print(crypt.crypt(getpass.getpass(), crypt.mksalt(crypt.METHOD_SHA512)))'
Password: 
&lt;your hash&gt;
[staf@centos7 ~]$ 
</code></pre>

<p>Create config.yaml - replace <code>&lt;your_user&gt;</code>, <code>&lt;your_hash&gt;</code>, <code>&lt;your_ssh_pub_key&gt;</code> -  with your data:</p>

<pre><code>#cloud-config
package_upgrade: true
users:
  - name: &lt;your_user&gt;
    groups: wheel
    lock_passwd: false
    passwd: &lt;your_passord_hash&gt;
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    ssh-authorized-keys:
      - &lt;your_public_ssh_key&gt;
</code></pre>

<p>And generate the configuration iso image:</p>

<pre><code>root@centos7 tst]# cloud-localds config.iso config.yaml
wrote config.iso with filesystem=iso9660 and diskformat=raw
[root@centos7 tst]# 
</code></pre>

<h3>Create the virtual system</h3>

<p>Libvirt has predefined definitions for operating systems. You can query the predefined operation systems with the <code>osinfo-query os</code> command.</p>

<p>We use centos 7, we use <code>osinfo-query os</code> to find the correct definition.</p>

<pre><code>[root@centos7 tst]# osinfo-query  os | grep -i centos7
 centos7.0            | CentOS 7.0                                         | 7.0      | http://centos.org/centos/7.0            
[root@centos7 tst]# 
</code></pre>

<p>Create the virtual system:</p>

<pre><code>virt-install \
  --memory 2048 \
  --vcpus 2 \
  --name tst \
  --disk /var/lib/libvirt/images/tst/tst.qcow2,device=disk \
  --disk /var/lib/libvirt/images/tst/config.iso,device=cdrom \
  --os-type Linux \
  --os-variant centos7.0 \
  --virt-type kvm \
  --graphics none \
  --network default \
  --import
</code></pre>

<p>The default escape key - to get out the console is ^[  ( Ctrl + [ )</p>

<p><strong><em> Have fun! </em></strong></p>

<h1>Links</h1>

<ul>
<li><a href="https://wiki.centos.org/Download/Verify">https://wiki.centos.org/Download/Verify</a></li>
<li><a href="https://www.theurbanpenguin.com/using-cloud-images-in-kvm/">https://www.theurbanpenguin.com/using-cloud-images-in-kvm/</a></li>
<li><a href="https://docs.openstack.org/image-guide/">https://docs.openstack.org/image-guide/</a></li>
<li><a href="https://unix.stackexchange.com/questions/52108/how-to-create-sha512-password-hashes-on-command-line#76337">https://unix.stackexchange.com/questions/52108/how-to-create-sha512-password-hashes-on-command-line#76337</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
