<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Dns | stafwag Blog]]></title>
  <link href="https://stafwag.github.io/blog/blog/categories/dns/atom.xml" rel="self"/>
  <link href="https://stafwag.github.io/blog/"/>
  <updated>2019-05-05T10:55:07+02:00</updated>
  <id>https://stafwag.github.io/blog/</id>
  <author>
    <name><![CDATA[staf wagemakers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Configure DNS-over-TLS on OPNsense]]></title>
    <link href="https://stafwag.github.io/blog/blog/2018/12/09/configure-dns-tls-on-opnsense/"/>
    <updated>2018-12-09T08:11:38+01:00</updated>
    <id>https://stafwag.github.io/blog/blog/2018/12/09/configure-dns-tls-on-opnsense</id>
    <content type="html"><![CDATA[<h1>DNS-over-TLS</h1>

<p>In my <a href="https://stafwag.github.io/blog/blog/2018/09/09/dns-privacy-with-stubby-part1-gnulinux/">previous blog posts</a> we configured <a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Daemon+-+Stubby">Stubby </a> on GNU/Linux and FreeBSD.</p>

<p><img class="right" src="/images/Logo_OPNsense.jpg" width="300" height="85" title="&ldquo;Logo_OPNsense.jpg&rdquo;" ></p>

<p>In this blog article we&rsquo;ll configure <a href="https://en.wikipedia.org/wiki/DNS_over_TLS">DNS-over-TLS</a> with <a href="https://nlnetlabs.nl/projects/unbound/about/">Unbound</a> on <a href="https://opnsense.org/">OPNsense</a>. Both <a href="https://nlnetlabs.nl/projects/getdns/">Stubby</a> and <a href="https://nlnetlabs.nl/projects/unbound/about/">Unbound</a> are written by <a href="https://nlnet.nl/">NLnet</a>.</p>

<h2>DNS resolvers</h2>

<p>Stubby is a small dns resolver to encrypt your dns traffic, which makes it perfect to increase end-user privacy. Stubby can be integrated into existing dns setups.</p>

<p><a href="http://http://www.thekelleys.org.uk/dnsmasq/doc.html">DNSmasq</a> is small dns resolver that can cache dns queries and forward dns traffic to other dns servers.</p>

<p>Unbound is fast validating, caching DNS resolver that supports DNS-over-TLS.
Unbound or dnsmaq are not full feature dns servers like <a href="https://www.isc.org/downloads/bind/">BIND</a>.</p>

<p>The main difference beteen Unbound and DNSmasq is that Unbound can talk the the <a href="https://www.iana.org/domains/root/servers">root servers</a> directly while dnsmasq always needs to forward your dns queries to another dns server - your ISP dns server or a public dns servicve like (<a href="https://www.quad9.net/">Quad9</a>, <a href="https://1.1.1.1/">cloudfare</a>, <a href="https://developers.google.com/speed/public-dns/">google</a>, &hellip;) -</p>

<p>Unbound has build-in support for DNS-over-TLS. DNSmasq needs an external DNS-over-TLS resolver like Stubby.</p>

<h2>Which one to use?</h2>

<p>It depends - as always -, Stubby can integrating easily in existing dns setups like dnsmasq. Unbound is one package that does it all and is more feature rich compared to DNSmasq.</p>

<h1>OPNsense</h1>

<p>I use <a href="https://opnsense.org/">OPNsense</a> as my firewall. Unbound is the default dns resolver on OPNsense so it makes (OPN)sense to use Unbound.</p>

<h2>Choose your upstream DNS service</h2>

<p>There&rsquo;re a few public DNS providers that supports DNS-over-tls the best known are <a href="https://www.quad9.net/">Quad9</a>, <a href="https://1.1.1.1/">cloudfare</a>. Quad9 will block malicious domains on the default dns servers 9.9.9.9/149.112.112.10 while 9.9.9.10 has no security blocklist.</p>

<p>In this article we&rsquo;ll use Quad9 but you could also with cloudfare or another dns provider that you trust and has support for DNS-over-tls.</p>

<h2>Enable DNS-over-TLS</h2>

<p><a href="https://stafwag.github.io/blog/images/opnsense_enable_dns_tls.png"><img src="https://stafwag.github.io/blog/images/opnsense_enable_dns_tls.png" class="left" width="300" height="458" alt="opnsense_enable_dns_tls.png" /> </a></p>

<p>You need to configure your firewall to use your upstream dns provider. You also want to make sure your isp dns servers aren&rsquo;t used.</p>

<h3>Sniffing</h3>

<p> If you snif the DNS traffic on your firewall <code>tcpdump -i wan_interface udp port 53</code> you&rsquo;ll see that the DNS traffic is unencrypted.</p>

<h3>Configuration</h3>

<p>To enable DNS-over-TLS we&rsquo;ll need to reconfigure unbound.</p>

<p>Go to <strong> [ Services ] -> [Unbound DNS ] -> [General] </strong>
And copy/paste the setting below</p>

<pre><code>server:
forward-zone:
name: "."
forward-ssl-upstream: yes
forward-addr: 9.9.9.9@853
forward-addr: 149.112.112.112@853
</code></pre>

<p>to <strong> Custom options </strong> these settings will reconfigure Unbound to forward the dns for the upstream dns servers Quad9 over ssl.</p>

<h3>Verify</h3>

<p>If you snif the udp  traffic on you firewall  with <code>tcpdump -i wan_interface udp port 53</code> you&rsquo;ll not see any unencrypted traffic anymore - unless not all your clients are configured to use your firewall as the dns server -.</p>

<p>If your snif TCP PORT 853 <code>tcpdump -i vr1 tcp port 853</code> we&rsquo;ll see your encrypted dns-over-tls traffic.</p>

<h2>General DNS settings</h2>

<p>You also want to make sure that your firewall isn&rsquo;t configure to use an unecrypted DNS server.</p>

<p><a href="https://stafwag.github.io/blog/images/opnsense_set_dns.png"><img src="https://stafwag.github.io/blog/images/opnsense_set_dns.png" class="right" width="300" height="693" alt="opnsense_set_dns.png" /> </a></p>

<h3>Configuration</h3>

<p>Go to <strong>[ system ] -> [ settings ] -> [ general ]</strong> and set the dns servers also make sure that <strong> [ ] Allow DNS server list to be overridden by DHCP/PPP on WAN </strong> is unchecked.</p>

<h3>Verify</h3>

<p>You can verify the configuration by logging on to your firewall over ssh and reviewing the contents of /etc/resolv.conf.</p>

<p><strong><em> Have fun! </em></strong></p>

<h1>Links</h1>

<ul>
<li><a href="https://nlnetlabs.nl/projects/unbound/">https://nlnetlabs.nl/projects/unbound/</a></li>
<li><a href="https://forum.opnsense.org/index.php?topic=7814.0">https://forum.opnsense.org/index.php?topic=7814.0</a></li>
<li><a href="https://news.ycombinator.com/item?id=17944423">https://news.ycombinator.com/item?id=17944423</a></li>
<li>[<a href="https://forum.opnsense.org/index.php?topic=9197.msg41265#msg41265">https://forum.opnsense.org/index.php?topic=9197.msg41265#msg41265</a>](<a href="https://forum.opnsense.org/index.php?topic=9197.msg41265#msg41265">https://forum.opnsense.org/index.php?topic=9197.msg41265#msg41265</a></li>
<li><a href="https://www.netgate.com/blog/dns-over-tls-with-pfsense.html">https://www.netgate.com/blog/dns-over-tls-with-pfsense.html</a></li>
<li><a href="https://forum.opnsense.org/index.php?topic=9197.msg41265#msg41265">https://forum.opnsense.org/index.php?topic=9197.msg41265#msg41265</a></li>
<li><a href="https://www.quad9.net/faq/">https://www.quad9.net/faq/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DNS Privacy With Stubby (Part 2 FreeBSD)]]></title>
    <link href="https://stafwag.github.io/blog/blog/2018/10/07/dns-privacy-with-stubby-part-2-freebsd/"/>
    <updated>2018-10-07T09:06:05+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2018/10/07/dns-privacy-with-stubby-part-2-freebsd</id>
    <content type="html"><![CDATA[<h1>FreeBSD</h1>

<p><a href="https://stafwag.github.io/blog/blog/2018/09/09/dns-privacy-with-stubby-part1-gnulinux/">In my previous blog article</a> we install on GNU/Linux which is my main desktop operation system. <a href="https://stafwag.github.io/blog/blog/2012/12/16/running-freebsd-9.0-on-asus-c60m1-i-motherboard/">My NAS</a> and the services that are required to be always running are on <a href="https://www.freebsd.org">FreeBSD</a>.</p>

<p>In this arcticle we will setup Stubby - the DNS Privacy Daemon - on FreeBSD.</p>

<h2>Jails</h2>

<p>FreeBSD jails are verify nice to keep services separated in a secure way.</p>

<h3>ezjail</h3>

<p><a href="https://erdgeist.org/arts/software/ezjail/">ezjail</a> is a very nice tool for managing FreeBSD jails.</p>

<pre><code>root@rataplan:~ # pkg install ezjail
</code></pre>

<h3>To loopback or not to loopback&hellip;.</h3>

<p>The loopback ip address is mapped to the jail ip address on FreeBSD by default.
There are two options</p>

<ul>
<li>use the jail ip address, make sure that you setup a firewall rule if you want disable traffic from external.</li>
<li>use a cloned loopback interface; keep in mind that with a cloned interface this interface is shared between your jails.</li>
</ul>


<p>We&rsquo;ll use the jail ip address.</p>

<h4>create the jail</h4>

<p>We create a new jail and we assign the cloned loop interface with a loopback ip address - this loopback ip address must be unique for each for each jail - and outside interface and ip address.</p>

<pre><code>root@rataplan:~ # ezjail-admin create stafdns 're0|192.168.1.53'
</code></pre>

<h4>start the jail</h4>

<pre><code>root@rataplan:/usr/local/etc/ezjail # ezjail-admin start stafdns
Starting jails: stafdns.
/etc/rc.d/jail: WARNING: Per-jail configuration via jail_* variables  is obsolete.  Please consider migrating to /etc/jail.conf.
root@rataplan:/usr/local/etc/ezjail #
</code></pre>

<h4>console login and install pkg</h4>

<p>Logon to the jail and install pkg we might need to configure a dns server or use a proxy sever to install pkg.</p>

<pre><code>root@rataplan:/usr/local/etc/ezjail # ezjail-admin console stafdns
root@stafdns:~ # echo "nameserver 9.9.9.9" &gt; /etc/resolv.conf
root@stafdns:~ # pkg
The package management tool is not yet installed on your system.
Do you want to fetch and install it now? [y/N]: y
Bootstrapping pkg from pkg+http://pkg.FreeBSD.org/FreeBSD:11:amd64/quarterly, please wait...
Verifying signature with trusted certificate pkg.freebsd.org.2013102301... done
[stafdns] Installing pkg-1.10.5_1...
[stafdns] Extracting pkg-1.10.5_1: 100%
pkg: not enough arguments
Usage: pkg [-v] [-d] [-l] [-N] [-j &lt;jail name or id&gt;|-c &lt;chroot path&gt;|-r &lt;rootdir&gt;] [-C &lt;configuration file&gt;] [-R &lt;repo config dir&gt;] [-o var=value] [-4|-6] &lt;command&gt; [&lt;args&gt;]

For more information on available commands and options see 'pkg help'.
root@stafdns:~ #
</code></pre>

<h2>Install stubby</h2>

<p>Stubby available in the <a href="https://www.freebsd.org/ports/">FreeBSD Ports</a> in the getdns package, &hellip;but it isn&rsquo;t installed when you install the binary package. To install stubby we need to it from source.</p>

<h3>dig</h3>

<p>To debug dns issues dig a handy tool to have&hellip;.</p>

<pre><code>root@rataplan:/usr/ports/dns/getdns # pkg install bind-tools
Updating FreeBSD repository catalogue...
FreeBSD repository is up to date.
All repositories are up to date.
Updating database digests format: 100%
The following 4 package(s) will be affected (of 0 checked):

New packages to be INSTALLED:
        bind-tools: 9.12.2P1
        idnkit: 1.0_7
        py27-ply: 3.11
        json-c: 0.13

Number of packages to be installed: 4

The process will require 42 MiB more space.
4 MiB to be downloaded.

Proceed with this action? [y/N]: y
</code></pre>

<h3>Update your ports tree</h3>

<h4>Physical system</h4>

<p>On a physical FreeBSD system execute <code>portsnap fetch</code> and <code>portsnap extract</code></p>

<pre><code>root@rataplan:~ # portsnap fetch
Looking up portsnap.FreeBSD.org mirrors... 6 mirrors found.
Fetching snapshot tag from ec2-eu-west-1.portsnap.freebsd.org... done.
Fetching snapshot metadata... done.
Updating from Sat Sep  8 09:31:35 CEST 2018 to Sun Sep  9 09:51:49 CEST 2018.
Fetching 4 metadata patches... done.
Applying metadata patches... done.
Fetching 0 metadata files... done.
Fetching 44 patches. 
(44/44) 100.00%  done.                                
done.
Applying patches... 
done.
Fetching 2 new ports or files... done.
root@rataplan:~ # 
</code></pre>

<pre><code>root@rataplan:~ # portsnap extract
/usr/ports/.arcconfig
/usr/ports/.gitattributes
/usr/ports/.gitauthors
/usr/ports/.gitignore
/usr/ports/.gitmessage
/usr/ports/CHANGES
/usr/ports/CONTRIBUTING.md
/usr/ports/COPYRIGHT
/usr/ports/GIDs
/usr/ports/Keywords/desktop-file-utils.ucl
/usr/ports/Keywords/fc.ucl
/usr/ports/Keywords/fcfontsdir.ucl

&lt;snip&gt;

/usr/ports/x11/xzoom/
/usr/ports/x11/yad/
/usr/ports/x11/yakuake-kde4/
/usr/ports/x11/yakuake/
/usr/ports/x11/yalias/
/usr/ports/x11/yeahconsole/
/usr/ports/x11/yelp/
/usr/ports/x11/zenity/
Building new INDEX files... done.
</code></pre>

<h4>Jail</h4>

<p>I use <a href="https://erdgeist.org/arts/software/ezjail/">ezjail</a> to manage my <a href="https://www.freebsd.org/doc/handbook/jails.html">FreeBSD jails</a>. Execute the <code>ezjail-admin update -P</code> to update the ports tree inside your jails.</p>

<pre><code>root@rataplan:~ # ezjail-admin update -P
Looking up portsnap.FreeBSD.org mirrors... 6 mirrors found.
Fetching snapshot tag from ec2-eu-west-1.portsnap.freebsd.org... done.
Ports tree hasn't changed since last snapshot.
No updates needed.
Removing old files and directories... done.
Extracting new files:
/usr/jails/basejail/usr/ports/archivers/py-lz4/
/usr/jails/basejail/usr/ports/astro/wmsolar/
/usr/jails/basejail/usr/ports/audio/musicpd/
/usr/jails/basejail/usr/ports/biology/seaview/
/usr/jails/basejail/usr/ports/deskutils/gsimplecal/
/usr/jails/basejail/usr/ports/deskutils/xfce4-tumbler/
/usr/jails/basejail/usr/ports/devel/eric6/
/usr/jails/basejail/usr/ports/devel/es-eric6/
/usr/jails/basejail/usr/ports/devel/ioncube/
/usr/jails/basejail/usr/ports/devel/liblouis/
/usr/jails/basejail/usr/ports/devel/monodevelop/
/usr/jails/basejail/usr/ports/devel/rudeconfig/
/usr/jails/basejail/usr/ports/emulators/ppsspp-qt5/
/usr/jails/basejail/usr/ports/emulators/ppsspp/
/usr/jails/basejail/usr/ports/german/eric6/
/usr/jails/basejail/usr/ports/java/linux-oracle-jdk10/
/usr/jails/basejail/usr/ports/java/linux-oracle-jre10/
/usr/jails/basejail/usr/ports/java/openjdk8/
/usr/jails/basejail/usr/ports/lang/gcc6-devel/
/usr/jails/basejail/usr/ports/lang/gcc7-devel/
/usr/jails/basejail/usr/ports/lang/gcc8-devel/
/usr/jails/basejail/usr/ports/lang/gcc9-devel/
/usr/jails/basejail/usr/ports/misc/ree/
/usr/jails/basejail/usr/ports/net-im/psi/
/usr/jails/basejail/usr/ports/net-mgmt/p5-Net-SNMP/
/usr/jails/basejail/usr/ports/net/Makefile
/usr/jails/basejail/usr/ports/net/charm/
/usr/jails/basejail/usr/ports/net/linknx/
/usr/jails/basejail/usr/ports/net/py-maxminddb/
/usr/jails/basejail/usr/ports/net/py-shodan/
/usr/jails/basejail/usr/ports/net/tcpreen/
/usr/jails/basejail/usr/ports/ports-mgmt/pkg-devel/
/usr/jails/basejail/usr/ports/print/ghostscript9-agpl-base/
/usr/jails/basejail/usr/ports/russian/eric6/
/usr/jails/basejail/usr/ports/science/Makefile
/usr/jails/basejail/usr/ports/science/metaphysicl/
/usr/jails/basejail/usr/ports/science/namd/
/usr/jails/basejail/usr/ports/security/sancp/
/usr/jails/basejail/usr/ports/security/testssl.sh/
/usr/jails/basejail/usr/ports/textproc/scim-bridge/
/usr/jails/basejail/usr/ports/www/orangehrm/
/usr/jails/basejail/usr/ports/www/smarty3/
/usr/jails/basejail/usr/ports/www/tinytinyhttpd/
/usr/jails/basejail/usr/ports/x11-wm/spectrwm/
/usr/jails/basejail/usr/ports/x11/plasma5-plasma-workspace/
/usr/jails/basejail/usr/ports/x11/sddm/
Building new INDEX files... done.
root@rataplan:~ # 
</code></pre>

<h3>Install stubby</h3>

<p>Go to the getdns ports directory</p>

<pre><code>root@stafproxy:/root # cd /usr/ports/dns/getdns/
root@stafproxy:/usr/ports/dns/getdns # make config
</code></pre>

<p>and run <code>make config</code> select <code>[ ] STUBBY    Build with Stubby DNS/TLS resolver</code></p>

<pre><code>┌─────────────────────────────── getdns-1.4.2 ─────────────────────────────────┐
│ ┌──────────────────────────────────────────────────────────────────────────┐ │
│ │+[x] DOCS      Build and/or install documentation                         │ │
│ │+[ ] LIBEV     Build with libev extension                                 │ │
│ │+[ ] LIBEVENT  Build with libevent extension                              │ │
│ │+[ ] LIBUV     Build with libuv extension                                 │ │
│ │+[x] STUBBY    Build with Stubby DNS/TLS resolver                         │ │
│ └──────────────────────────────────────────────────────────────────────────┘ │
├──────────────────────────────────────────────────────────────────────────────┤
│                       &lt;  OK  &gt;            &lt;Cancel&gt;                           │
└──────────────────────────────────────────────────────────────────────────────┘
</code></pre>

<p>run <code>make</code> and accept the defaults.</p>

<pre><code>root@stafproxy:/usr/ports/dns/getdns # make
===&gt;  License BSD3CLAUSE accepted by the user
===&gt;   getdns-1.4.2 depends on file: /usr/local/sbin/pkg - found
=&gt; getdns-1.4.2.tar.gz doesn't seem to exist in /var/ports/distfiles/.
=&gt; Attempting to fetch https://getdnsapi.net/dist/getdns-1.4.2.tar.gz
getdns-1.4.2.tar.gz                           100% of 1034 kB 1092 kBps 00m01s
===&gt; Fetching all distfiles required by getdns-1.4.2 for building
===&gt;  Extracting for getdns-1.4.2
=&gt; SHA256 Checksum OK for getdns-1.4.2.tar.gz.

&lt;snip&gt;

/usr/bin/install -c -m 644 getdns_service_sync.3 /var/ports/basejail/usr/ports/dns/getdns/work/stage/usr/local/man/man3
/usr/bin/install -c -m 644 getdns_validate_dnssec.3 /var/ports/basejail/usr/ports/dns/getdns/work/stage/usr/local/man/man3
/usr/bin/strip /var/ports/basejail/usr/ports/dns/getdns/work/stage/usr/local/lib/libgetdns*.so.*
/usr/bin/strip /var/ports/basejail/usr/ports/dns/getdns/work/stage/usr/local/bin/getdns_*
/usr/bin/strip /var/ports/basejail/usr/ports/dns/getdns/work/stage/usr/local/bin/stubby
/bin/mv /var/ports/basejail/usr/ports/dns/getdns/work/stage/usr/local/etc/stubby/stubby.yml  /var/ports/basejail/usr/ports/dns/getdns/work/stage/usr/local/etc/stubby/stubby.yml.sample
====&gt; Compressing man pages (compress-man)
===&gt; Staging rc.d startup script(s)
</code></pre>

<p>make install</p>

<pre><code>root@stafproxy:/usr/ports/dns/getdns # make install
===&gt;  Installing for getdns-1.4.2
===&gt;  Checking if getdns already installed
===&gt;   Registering installation for getdns-1.4.2
[stafproxy] Installing getdns-1.4.2...
***
***  !!! IMPORTANT !!!!  libgetdns needs a DNSSEC trust anchor!
***
***  For the library to be able to perform DNSSEC, the root
***  trust anchor needs to be present in presentation format
***  in the file:
***     /usr/local/etc/unbound/root.key
***
***  We recomend using unbound-anchor to retrieve and install
***  the root trust anchor like this:
***     su -m unbound -c /usr/local/sbin/unbound-anchor
***

===&gt; SECURITY REPORT: 
      This port has installed the following files which may act as network
      servers and may therefore pose a remote security risk to the system.
/usr/local/lib/libgetdns.a(stub.o)
/usr/local/lib/libgetdns.so.10.0.2
/usr/local/lib/libgetdns.a(server.o)

      This port has installed the following startup scripts which may cause
      these network services to be started at boot time.
/usr/local/etc/rc.d/stubby

      If there are vulnerabilities in these programs there may be a security
      risk to the system. FreeBSD makes no guarantee about the security of
      ports included in the Ports Collection. Please type 'make deinstall'
      to deinstall the port if this is a concern.

      For more information, and contact details about the security
      status of this software, see the following webpage: 
https://getdnsapi.net/
root@stafproxy:/usr/ports/dns/getdns # 
</code></pre>

<p>Lock the package to avoid that the package gets replaced by a getdns package without stubby.</p>

<pre><code>root@stafproxy:/usr/ports/dns/getdns # pkg lock getdns
getdns-1.4.2: lock this package? [y/N]: y
Locking getdns-1.4.2
root@stafproxy:/usr/ports/dns/getdns # 
</code></pre>

<h2>Configure stubby</h2>

<h3>Enable the stubby service</h3>

<p>Use <code>sysrc</code> to enable the stubby service&hellip;</p>

<pre><code>root@stafproxy:/usr/local/etc # service stubby start
Cannot 'start' stubby. Set stubby_enable to YES in /etc/rc.conf or use 'onestart' instead of 'start'.
root@stafproxy:/usr/local/etc # service stubby rcvar
# stubby
#
stubby_enable="NO"
#   (default: "")

root@stafproxy:/usr/local/etc # sysrc stubby_enable="YES"
stubby_enable:  -&gt; YES
root@stafproxy:/usr/local/etc # 
</code></pre>

<h3>choose your upstream dns provider</h3>

<p>Edit the stubby.yml file and uncomment the upstream dns server that you want the use. Stubby will loadbalance the dns traffic to all configured upstream dns servers by default. This is configured with the round_robin_upstreams directive, if set to 1 the traffic is loadbalanced, if set 0 stubby will use the first configured dns server.</p>

<pre><code>root@rataplan:/usr/local/etc # vi stubby/stubby.yml
</code></pre>

<h3>Change the port</h3>

<p>We&rsquo;ll setup dnsmasq to cache our dns requests modify the <code>listen_addresses</code> directive and set the port 53000</p>

<pre><code>listen_addresses:
  - 127.0.0.1@53000
  - 0::1@53000
</code></pre>

<h3>Start it</h3>

<pre><code>root@stafproxy:/usr/local/etc # service stubby start
Starting stubby.
[07:51:37.865826] STUBBY: Read config from file /usr/local/etc/stubby/stubby.yml
root@stafproxy:/usr/local/etc # 
</code></pre>

<h3>test it</h3>

<pre><code>root@stafproxy:/root # dig @&lt;ip_of_the_jail&gt; -p 53000 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.8.3-P4 &lt;&lt;&gt;&gt; @127.0.0.53 -p 53000 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 56970
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      85181   IN      CNAME   wagemakers.be.
wagemakers.be.          85181   IN      A       95.215.185.144

;; Query time: 110 msec
;; SERVER: 127.0.0.53#53000(127.0.0.53)
;; WHEN: Sat Sep 22 13:16:11 2018
;; MSG SIZE  rcvd: 119
</code></pre>

<h3>dnsmasq</h3>

<h4>Install dnsmasq.</h4>

<pre><code>root@stafproxy:/root # pkg install dnsmasq
Updating FreeBSD repository catalogue...
FreeBSD repository is up to date.
All repositories are up to date.
The following 1 package(s) will be affected (of 0 checked):

New packages to be INSTALLED:
        dnsmasq: 2.79,1

Number of packages to be installed: 1

329 KiB to be downloaded.

Proceed with this action? [y/N]: y
[stafproxy] [1/1] Fetching dnsmasq-2.79,1.txz: 100%  329 KiB 336.4kB/s    00:01
Checking integrity... done (0 conflicting)
[stafproxy] [1/1] Installing dnsmasq-2.79,1...
[stafproxy] [1/1] Extracting dnsmasq-2.79,1: 100%
Message from dnsmasq-2.79,1:

*** To enable dnsmasq, edit /usr/local/etc/dnsmasq.conf and
*** set dnsmasq_enable="YES" in /etc/rc.conf[.local]
***
*** Further options and actions are documented inside
*** /usr/local/etc/rc.d/dnsmasq
root@stafproxy:/root #
</code></pre>

<h4>Enable dnsmasq.</h4>

<p>Usae <code>sysrc</code> to enable the dnsmasq service.</p>

<pre><code>root@stafproxy:/root # sysrc dnsmasq_enable="YES"
dnsmasq_enable:  -&gt; YES
root@stafproxy:/root #
</code></pre>

<h4>Configure dnsmasq</h4>

<pre><code>root@stafproxy:/usr/local/etc # mv dnsmasq.conf dnsmasq.conf_org
root@stafproxy:/usr/local/etc # vi dnsmasq.conf
</code></pre>

<pre><code>server=&lt;ip_address_of_the_jail&gt;#53000
listen-address=&lt;ip_address_of_the_jail&gt;
interface=&lt;netork_interface_of_the_jail&gt;
bind-interfaces
</code></pre>

<h4>start dnsmasq</h4>

<pre><code>root@stafproxy:/usr/local/etc # service dnsmasq start
Starting dnsmasq.
root@stafproxy:/usr/local/etc #
</code></pre>

<h4>test it</h4>

<pre><code>root@stafproxy:/usr/local/etc # dig @192.168.1.45 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.8.3-P4 &lt;&lt;&gt;&gt; @192.168.1.45 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 32987
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      86000   IN      CNAME   wagemakers.be.
wagemakers.be.          86000   IN      A       95.215.185.144

;; Query time: 308 msec
;; SERVER: 192.168.1.45#53(192.168.1.45)
;; WHEN: Sun Oct  7 09:16:51 2018
;; MSG SIZE  rcvd: 119

root@stafproxy:/usr/local/etc #
</code></pre>

<h4>Update /etc/resolv.conf</h4>

<p>Update your <code>/etc/resolv.conf</code></p>

<pre><code>root@stafproxy:/usr/local/etc # vi /etc/resolv.conf
</code></pre>

<pre><code>nameserver &lt;ip_address_of_the_jail&gt;
</code></pre>

<p>and test it;</p>

<pre><code>root@stafproxy:/usr/local/etc # dig www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.8.3-P4 &lt;&lt;&gt;&gt; www.wagemakers.be
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 27629
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      85702   IN      CNAME   wagemakers.be.
wagemakers.be.          85702   IN      A       95.215.185.144

;; Query time: 1 msec
;; SERVER: 192.168.1.45#53(192.168.1.45)
;; WHEN: Sun Oct  7 09:21:49 2018
;; MSG SIZE  rcvd: 78

root@stafproxy:/usr/local/etc #
</code></pre>

<p><strong><em> Have fun! </em></strong></p>

<h1>Links</h1>

<ul>
<li><a href="https://stafwag.github.io/blog/blog/2018/09/09/dns-privacy-with-stubby-part1-gnulinux/">https://stafwag.github.io/blog/blog/2018/09/09/dns-privacy-with-stubby-part1-gnulinux/</a></li>
<li><a href="https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/jails-ezjail.html">https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/jails-ezjail.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DNS Privacy With Stubby (Part 1 GNU/Linux)]]></title>
    <link href="https://stafwag.github.io/blog/blog/2018/09/09/dns-privacy-with-stubby-part1-gnulinux/"/>
    <updated>2018-09-09T10:30:03+02:00</updated>
    <id>https://stafwag.github.io/blog/blog/2018/09/09/dns-privacy-with-stubby-part1-gnulinux</id>
    <content type="html"><![CDATA[<p><strong><em> Installing and configuring an encrypted dns server is straightforward, there is no reason to use an unencrypted dns service. </em></strong></p>

<h1>DNS is not secure or private</h1>

<p>DNS traffic is insecure and runs over <a href="https://nl.wikipedia.org/wiki/User_Datagram_Protocol">UDP</a> port 53 (<a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol">TCP</a> for <a href="https://en.wikipedia.org/wiki/DNS_zone_transfer">zone transfers</a> ) unecrypted by default.</p>

<p>This make your unencrypted DNS traffic a <strong>privacy risk</strong> and a <strong>security risk</strong>:</p>

<ul>
<li>anyone that is able to sniff your network traffic can collect a lot information from your leaking DNS traffic.</li>
<li>with a DNS spoofing attack an attacker can trick you let go to malicious website or try to intercept your email traffic.</li>
</ul>


<h1>Encrypt your dns traffic</h1>

<p>Encrypting your network traffic is always a good idea for privacy and security reasons - <strong><em> we encrypt, because we can! </em></strong> -  .
More information about dns privacy can be found at <a href="https://dnsprivacy.org/">https://dnsprivacy.org/</a></p>

<p>On this site you&rsquo;ll find also the <a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Daemon+-+Stubby">DNS Privacy Daemon - Stubby</a> that let&rsquo;s you send your DNS request over TLS to an alternative DNS provider. You should use a DNS provider that you trust and has a no logging policy.  <a href="https://www.quad9.net/">quad9</a>, <a href="https://www.cloudflare.com/learning/dns/what-is-1.1.1.1/">cloudflare</a> and google dns are well-known alternative dns providers. At <a href="https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Test+Servers">https://dnsprivacy.org/wiki/display/DP/DNS+Privacy+Test+Servers</a> you can find a few other options.</p>

<p>You&rsquo;ll find my journey to setup Stubby on a few operation systems I use (or I&rsquo;m force to use) below &hellip;</p>

<h1>GNU/Linux</h1>

<h2>Arch Linux</h2>

<p>I use <a href="https://www.archlinux.org/">Arch Linux</a> on my main workstation. Stubby is already in the Arch repositories this make installation straightforward.</p>

<h3>Install stubby</h3>

<pre><code>[root@vicky ~]# pacman -S stubby
resolving dependencies...
looking for conflicting packages...

Packages (5) fstrm-0.4.0-1  getdns-1.4.2-1  protobuf-c-1.3.0-3  unbound-1.7.3-4
             stubby-0.2.3-1

Total Download Size:   1.09 MiB
Total Installed Size:  5.68 MiB

:: Proceed with installation? [Y/n] 
:: Retrieving packages...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 88476  100 88476    0     0   403k      0 --:--:-- --:--:-- --:--:--  403k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 62480  100 62480    0     0  1271k      0 --:--:-- --:--:-- --:--:-- 1271k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  632k  100  632k    0     0   750k      0 --:--:-- --:--:-- --:--:--  749k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  302k  100  302k    0     0  1615k      0 --:--:-- --:--:-- --:--:-- 1606k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 34052  100 34052    0     0   831k      0 --:--:-- --:--:-- --:--:--  831k
(5/5) checking keys in keyring                       [###########################] 100%
(5/5) checking package integrity                     [###########################] 100%
(5/5) loading package files                          [###########################] 100%
(5/5) checking for file conflicts                    [###########################] 100%
(5/5) checking available disk space                  [###########################] 100%
:: Processing package changes...
(1/5) installing fstrm                               [###########################] 100%
(2/5) installing protobuf-c                          [###########################] 100%
(3/5) installing unbound                             [###########################] 100%
Optional dependencies for unbound
    expat: unbound-anchor [installed]
(4/5) installing getdns                              [###########################] 100%
(5/5) installing stubby                              [###########################] 100%
:: Running post-transaction hooks...
(1/4) Reloading system manager configuration...
(2/4) Creating system user accounts...
(3/4) Creating temporary files...
(4/4) Arming ConditionNeedsUpdate...
[root@vicky ~]# 
</code></pre>

<h4>choose your upstream dns provider</h4>

<p>Edit the stubby.yml file and uncomment the upstream dns server that you want the use.
Stubby will loadbalance the dns traffic to all configured upstream dns servers by default.
This is configured with the <code>round_robin_upstreams</code> directive, if set to <code>1</code> the traffic is loadbalanced, if set <code>0</code> stubby will use the first configured dns server.</p>

<pre><code>[staf@vicky ~]$ sudo vi /etc/stubby/stubby.yml
</code></pre>

<h4>enable and start stubby</h4>

<pre><code>[root@vicky ~]# systemctl enable stubby
Created symlink /etc/systemd/system/multi-user.target.wants/stubby.service -&gt; /usr/lib/systemd/system/stubby.service.
[root@vicky ~]# systemctl start stubby
[root@vicky ~]# 
</code></pre>

<h4>test</h4>

<pre><code>[root@vicky ~]# dig @127.0.0.1 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.13.2 &lt;&lt;&gt;&gt; @127.0.0.1 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 18226
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
; COOKIE: fe9d3618b821614f174436385b7acb64a4f4cc6657e14626 (good)
;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      86000   IN      CNAME   wagemakers.be.
wagemakers.be.          86000   IN      A       95.215.185.144

;; Query time: 128 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Mon Aug 20 16:08:36 CEST 2018
;; MSG SIZE  rcvd: 147

[root@vicky ~]# 
</code></pre>

<h3>Local dns cache with dnsmasq</h3>

<h4>Change the stubby port.</h4>

<p>Edit /etc/stubby/stubby.yml</p>

<pre><code>[root@vicky ~]# vi /etc/stubby/stubby.yml
</code></pre>

<p>And change the port by modifing the <code>listen_addresses</code> directive</p>

<pre><code>listen_addresses:
  - 127.0.0.1@53000
  - 0::1@53000
</code></pre>

<p>restart stubby</p>

<pre><code>[root@vicky ~]# systemctl restart stubby.service
</code></pre>

<p>and verify that the dns on 127.0.0.1:53 doesn&rsquo;t work anymore.</p>

<pre><code>[root@vicky ~]# dig @127.0.0.1 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.13.2 &lt;&lt;&gt;&gt; @127.0.0.1 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; connection timed out; no servers could be reached
[root@vicky ~]# 
</code></pre>

<p>ensure that stubby does work on port 53000</p>

<pre><code>[root@frija etc]# dig @127.0.0.1 -p 53000 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.13.2 &lt;&lt;&gt;&gt; @127.0.0.1 -p 53000 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 27173
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 65535
;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      43200   IN      CNAME   wagemakers.be.
wagemakers.be.          43200   IN      A       95.215.185.144

;; Query time: 250 msec
;; SERVER: 127.0.0.1#53000(127.0.0.1)
;; WHEN: Tue Aug 21 13:26:37 CEST 2018
;; MSG SIZE  rcvd: 119

[root@frija etc]# 
</code></pre>

<h4>Install dnsmasq</h4>

<pre><code>[root@vicky ~]# pacman -S dnsmasq
warning: dnsmasq-2.79-1 is up to date -- reinstalling
resolving dependencies...
looking for conflicting packages...

Packages (1) dnsmasq-2.79-1

Total Installed Size:  0.70 MiB
Net Upgrade Size:      0.00 MiB

:: Proceed with installation? [Y/n] y
(1/1) checking keys in keyring                       [###########################] 100%
(1/1) checking package integrity                     [###########################] 100%
(1/1) loading package files                          [###########################] 100%
(1/1) checking for file conflicts                    [###########################] 100%
(1/1) checking available disk space                  [###########################] 100%
:: Processing package changes...
(1/1) reinstalling dnsmasq                           [###########################] 100%
:: Running post-transaction hooks...
(1/3) Reloading system manager configuration...
(2/3) Creating system user accounts...
(3/3) Arming ConditionNeedsUpdate...
[root@vicky ~]# 
</code></pre>

<h4>Configure dnsmasq</h4>

<pre><code>[root@vicky etc]# cd /etc
[root@vicky etc]# mv /etc/dnsmasq.conf /etc/dnsmasq.conf_org
[root@vicky etc]# vi dnsmasq.conf
</code></pre>

<p>It is import to configure stubby to listen the localhost interface only.
If you use Linux KVM you probably have a dns serivce running on your bridge interfaces for your virtual machines.</p>

<pre><code>server=127.0.0.1#53000
listen-address=127.0.0.1
interface=lo
bind-interfaces
</code></pre>

<h4>Start and enable dnsmasq</h4>

<pre><code>[root@vicky ~]# systemctl start dnsmasq
[root@vicky ~]# systemctl enable dnsmasq
Created symlink /etc/systemd/system/multi-user.target.wants/dnsmasq.service -&gt; /usr/lib/systemd/system/dnsmasq.service.
[root@vicky ~]# 
</code></pre>

<h4>Reconfigure your system</h4>

<p>reconfigure your system to use dnsmasq as the dns service.</p>

<p>I use <a href="https://wiki.archlinux.org/index.php/Netctl">netctl</a> on my system. You can update the network configuration with <code>netctl</code></p>

<pre><code>[root@vicky netctl]# netctl edit &lt;network_name&gt;
[root@vicky netctl]# netctl restart  &lt;network_name&gt;
</code></pre>

<p>If you networkmanager you can use <code>nmcli</code>, <code>nmtui</code> or the GUI network configuration in your desktop environment.</p>

<h2>GNU/Linux is GNU/Linux</h2>

<p>The configuration on other GNU/Linux distributions is the same as on Arch apart from the installation process.
The same method can be use if your (favorite) Linux distribution doesn&rsquo;t have a stubby package, the installation method of the required package will be different of course.</p>

<h3>Debian</h3>

<h4>Current testing release Debian &ldquo;buster&rdquo;</h4>

<pre><code>$ sudo apt install stubby dnsmasq
</code></pre>

<h4>Current stable Debian 9 &ldquo;strech&rdquo;</h4>

<p>Stubby in the <code>getdns-utils</code> in Debian stretch, it&rsquo;s an older version.
Therefor I ended up with building stubby from the source code.</p>

<h5>Install the required packages</h5>

<p>Install the required packages to build stubby.</p>

<pre><code>staf@stretch:~/github$ sudo apt install build-essential git libtool autoconf libssl-dev libyaml-dev
</code></pre>

<h5>git clone</h5>

<p>The getdns git repo;</p>

<pre><code>staf@stretch:~/github$ git clone https://github.com/getdnsapi/getdns.git
Cloning into 'getdns'...
remote: Counting objects: 16154, done.
remote: Total 16154 (delta 0), reused 0 (delta 0), pack-reused 16154
Receiving objects: 100% (16154/16154), 9.72 MiB | 1.13 MiB/s, done.
Resolving deltas: 100% (12413/12413), done.
staf@stretch:~/github$ 
</code></pre>

<h5>checkout the latest stable release</h5>

<p>Verify the lastest release tag. The current stable release 1.4.2</p>

<pre><code>staf@stretch:~/github/getdns$ git tag
TNW2015
list
v0.1.0
v0.1.1
v0.1.2
&lt;snip&gt;
v1.4.0
v1.4.0-rc1
v1.4.1
v1.4.1-rc1
v1.4.2
v1.4.2-rc1
staf@stretch:~/github/getdns$ 
</code></pre>

<p>checkout the latest stable release.</p>

<pre><code>staf@stretch:~/github/getdns$ git checkout v1.4.2
Note: checking out 'v1.4.2'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b &lt;new-branch-name&gt;

HEAD is now at e481273... Last minute update
staf@stretch:~/github/getdns$ 
</code></pre>

<h5>build it&hellip;</h5>

<pre><code>staf@stretch:~/github/getdns$ git submodule update --init
staf@stretch:~/github/getdns$ libtoolize -ci
staf@stretch:~/github/getdns$ autoreconf -fi
staf@stretch:~/github/getdns$ mkdir build
staf@stretch:~/github/getdns$ cd build/
staf@stretch:~/github/getdns/build$ ../configure --prefix=/usr/local --without-libidn --without-libidn2 --enable-stub-only --with-stubby
staf@stretch:~/github/getdns/build$ make
</code></pre>

<h5>make install</h5>

<pre><code>staf@stretch:~/github/getdns/build$ sudo make install
[sudo] password for staf: 
cd src &amp;&amp; make install
make[1]: Entering directory '/home/staf/github/getdns/build/src'
&lt;snip&gt;
make[1]: Leaving directory '/home/staf/github/getdns/build/doc'
***
***  !!! IMPORTANT !!!!
***
***  From release 1.2.0, getdns comes with built-in DNSSEC
***  trust anchor management.  External trust anchor management,
***  for example with unbound-anchor, is no longer necessary
***  and no longer recommended.
***
***  Previously installed trust anchors, in the default location -
***
***        /usr/local/etc/unbound/getdns-root.key
***
***  - will be preferred and used for DNSSEC validation, however
***  getdns will fallback to trust-anchors obtained via built-in
***  trust anchor management when the anchors from the default
***  location fail to validate the root DNSKEY rrset.
***
***  To prevent expired DNSSEC trust anchors to be used for
***  validation, we strongly recommend removing the trust anchors
***  on the default location when there is no active external
***  trust anchor management keeping it up-to-date.
***
staf@stretch:~/github/getdns/build$ sudo make install
</code></pre>

<h5>systemd service</h5>

<p>Stubby comes with a systemd service definition. Copy it to the correct location.</p>

<pre><code>staf@stretch:~/github/getdns/build$ cd ..
staf@stretch:~/github/getdns$ cd stubby/systemd/
staf@stretch:~/github/getdns/stubby/systemd$ sudo cp stubby.service /lib/systemd/system/
</code></pre>

<p>Update the path to /usr/local</p>

<pre><code>staf@stretch:~/github/getdns/stubby/systemd$ sudo vi /lib/systemd/system/stubby.service
</code></pre>

<pre><code>[Unit]
Description=stubby DNS resolver

[Service]
User=stubby
DynamicUser=yes
CacheDirectory=stubby
WorkingDirectory=/var/cache/stubby
ExecStart=/usr/local/bin/stubby
AmbientCapabilities=CAP_NET_BIND_SERVICE
CapabilityBoundingSet=CAP_NET_BIND_SERVICE

[Install]
WantedBy=multi-user.target
</code></pre>

<p>And create the stubby working directory</p>

<pre><code>root@stretch:~# mkdir /var/cache/stubby
</code></pre>

<h4>ldconfig</h4>

<p>update your library cache</p>

<pre><code>staf@stretch:~/github/getdns/stubby/systemd$ sudo ldconfig -v
</code></pre>

<h4>Update the configuration</h4>

<p>Edit the stubby.yml configuration file.</p>

<pre><code>staf@stretch:~/github/getdns/stubby/systemd$ sudo nvi /usr/local/etc/stubby/stubby.yml
</code></pre>

<p>Update the port where stubby will listen to and select the upstream dns service you want to use.</p>

<pre><code>listen_addresses:
  - 127.0.0.1@53000
  - 0::1@53000
</code></pre>

<h4>start and test</h4>

<p>Start stubby&hellip;.</p>

<pre><code>staf@stretch:~/github/getdns/stubby/systemd$ sudo systemctl list-unit-files | grep -i stubby
stubby.service                              disabled
staf@stretch:~/github/getdns/stubby/systemd$ sudo systemctl enable stubby
Created symlink /etc/systemd/system/multi-user.target.wants/stubby.service /lib/systemd/system/stubby.service.
staf@stretch:~/github/getdns/stubby/systemd$ sudo systemctl start stubby
staf@stretch:~/github/getdns/stubby/systemd$ 
</code></pre>

<p>and test it</p>

<pre><code>root@stretch:~# dig @127.0.0.1 -p 53000 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Debian &lt;&lt;&gt;&gt; @127.0.0.1 -p 53000 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 17510
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      49704   IN      CNAME   wagemakers.be.
wagemakers.be.          81815   IN      A       95.215.185.144

;; Query time: 72 msec
;; SERVER: 127.0.0.1#53000(127.0.0.1)
;; WHEN: Sun Sep 02 10:33:53 CEST 2018
;; MSG SIZE  rcvd: 119

root@stretch:~# 
</code></pre>

<h4>dnsmasq</h4>

<p>Install dnsmasq</p>

<pre><code>root@stretch:/etc# apt-get install dnsmasq
</code></pre>

<p>Configure dnsmasq</p>

<pre><code>root@stretch:/etc# mv dnsmasq.conf dnsmasq.conf_org
root@stretch:/etc# vi dnsmasq.conf
</code></pre>

<pre><code>server=127.0.0.1#53000
listen-address=127.0.0.1
interface=lo
bind-interfaces
</code></pre>

<p>Enable and start it&hellip;</p>

<pre><code>root@stretch:/etc# systemctl enable dnsmasq
Synchronizing state of dnsmasq.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable dnsmasq
root@stretch:/etc# systemctl restart dnsmasq
</code></pre>

<p>Verify</p>

<pre><code>root@stretch:/etc# dig @127.0.0.1 www.wagemakers.be

; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Debian &lt;&lt;&gt;&gt; @127.0.0.1 www.wagemakers.be
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 57295
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;www.wagemakers.be.             IN      A

;; ANSWER SECTION:
www.wagemakers.be.      48645   IN      CNAME   wagemakers.be.
wagemakers.be.          80756   IN      A       95.215.185.144

;; Query time: 72 msec
;; SERVER: 127.0.0.1#53(127.0.0.1)
;; WHEN: Sun Sep 02 10:51:32 CEST 2018
;; MSG SIZE  rcvd: 119

root@stretch:/etc# 
</code></pre>

<p>reconfigure you system to use dnsmasq&hellip;.</p>

<pre><code>root@stretch:/etc# nvi resolv.conf
</code></pre>

<pre><code>nameserver 127.0.0.1
</code></pre>

<p><strong><em>Have fun!</em></strong></p>

<h2>Links</h2>

<ul>
<li><a href="https://dnsprivacy.org">https://dnsprivacy.org</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Stubby">https://wiki.archlinux.org/index.php/Stubby</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
